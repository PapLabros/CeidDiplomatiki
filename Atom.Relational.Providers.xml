<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atom.Relational.Providers</name>
    </assembly>
    <members>
        <member name="T:Atom.Relational.Providers.DatabaseProviderOptionsDataModel">
            <summary>
            Contains information for all the available database providers
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.Provider">
            <summary>
            The selected provider
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.SQLite">
            <summary>
            The SQLite related options
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.SQLServer">
            <summary>
            The SQLServer related options
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.MySQL">
            <summary>
            The MySQL related options
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.PostgreSQL">
            <summary>
            The PostgreSQL related options
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.GetDatabaseName">
            <summary>
            Gets the database name based on the selected <see cref="P:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.Provider"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.GetConnectionString">
            <summary>
            Gets the connection string based on the selected <see cref="P:Atom.Relational.Providers.DatabaseProviderOptionsDataModel.Provider"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Providers.MySQLOptionsDataModel">
            <summary>
            Connection information for an MySQL database
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.MySQLOptionsDataModel.Server">
            <summary>
            The server name/ip
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.MySQLOptionsDataModel.Port">
            <summary>
            The optional port number
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.MySQLOptionsDataModel.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.MySQLOptionsDataModel.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.MySQLOptionsDataModel.Provider">
            <summary>
            The database provider the options represent
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.MySQLOptionsDataModel.Name">
            <summary>
            The name of the database provider
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.MySQLOptionsDataModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.MySQLOptionsDataModel.TryGetConnectionString(System.String@)">
            <summary>
            Attempts to create the <paramref name="connectionString"/> string
            </summary>
            <param name="connectionString">The connection string result</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.MySQLOptionsDataModel.CompareTo(System.Object)">
            <summary>
            Compares the current object to the specified <paramref name="obj"/>
            </summary>
            <param name="obj">The object to be compared to</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.MySQLOptionsDataModel.CompareTo(Atom.Relational.Providers.MySQLOptionsDataModel)">
            <summary>
            Compares the current object to the specified <paramref name="other"/>
            </summary>
            <param name="other">The object to be compared to</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.MySQLOptionsDataModel.Equals(Atom.Relational.Providers.MySQLOptionsDataModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Providers.PostgreSQLOptionsDataModel">
            <summary>
            Connection information for a PostgreSQL database
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.PostgreSQLOptionsDataModel.Host">
            <summary>
            The host
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.PostgreSQLOptionsDataModel.Port">
            <summary>
            The port number
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.PostgreSQLOptionsDataModel.UserName">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.PostgreSQLOptionsDataModel.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.PostgreSQLOptionsDataModel.Provider">
            <summary>
            The database provider the options represent
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.PostgreSQLOptionsDataModel.Name">
            <summary>
            The name of the database provider
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.PostgreSQLOptionsDataModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.PostgreSQLOptionsDataModel.TryGetConnectionString(System.String@)">
            <summary>
            Attempts to create the <paramref name="connectionString"/> string
            </summary>
            <param name="connectionString">The connection string result</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.PostgreSQLOptionsDataModel.CompareTo(System.Object)">
            <summary>
            Compares the current object to the specified <paramref name="obj"/>
            </summary>
            <param name="obj">The object to be compared to</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.PostgreSQLOptionsDataModel.CompareTo(Atom.Relational.Providers.PostgreSQLOptionsDataModel)">
            <summary>
            Compares the current object to the specified <paramref name="other"/>
            </summary>
            <param name="other">The object to be compared to</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.PostgreSQLOptionsDataModel.Equals(Atom.Relational.Providers.PostgreSQLOptionsDataModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Providers.SQLiteOptionsDataModel">
            <summary>
            Connection information for an SQLite database
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLiteOptionsDataModel.Provider">
            <summary>
            The database provider the options represent
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLiteOptionsDataModel.Name">
            <summary>
            The name of the database provider
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLiteOptionsDataModel.ForceDirectory">
            <summary>
            A flag indicating whether all the SQLite databases should be placed at the directory
            specified by the <see cref="P:Atom.Relational.Providers.SQLiteOptionsDataModel.DirectoryPath"/>
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLiteOptionsDataModel.DirectoryPath">
            <summary>
            The path to the director that contains the database
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.SQLiteOptionsDataModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.SQLiteOptionsDataModel.TryGetConnectionString(System.String@)">
            <summary>
            Attempts to create the <paramref name="connectionString"/> string
            </summary>
            <param name="connectionString">The connection string result</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Providers.SQLServerOptionsDataModel">
            <summary>
            Connection information for an SQLServer database
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLServerOptionsDataModel.Provider">
            <summary>
            The database provider the options represent
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLServerOptionsDataModel.Name">
            <summary>
            The name of the database provider
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLServerOptionsDataModel.Server">
            <summary>
            The server name/ip
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLServerOptionsDataModel.Port">
            <summary>
            The optional port number
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLServerOptionsDataModel.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLServerOptionsDataModel.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="P:Atom.Relational.Providers.SQLServerOptionsDataModel.IntegratedSecurity">
            <summary>
            A flag indicating whether integrated should be used or not
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.SQLServerOptionsDataModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Providers.SQLServerOptionsDataModel.TryGetConnectionString(System.String@)">
            <summary>
            Attempts to create the <paramref name="connectionString"/> string
            </summary>
            <param name="connectionString">The connection string result</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.SQLServerOptionsDataModel.GetServer">
            <summary>
            Gets the server including the port when needed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.SQLServerOptionsDataModel.CompareTo(System.Object)">
            <summary>
            Compares the current object to the specified <paramref name="obj"/>
            </summary>
            <param name="obj">The object to be compared to</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.SQLServerOptionsDataModel.CompareTo(Atom.Relational.Providers.SQLServerOptionsDataModel)">
            <summary>
            Compares the current object to the specified <paramref name="other"/>
            </summary>
            <param name="other">The object to be compared to</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Providers.SQLServerOptionsDataModel.Equals(Atom.Relational.Providers.SQLServerOptionsDataModel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
    </members>
</doc>
