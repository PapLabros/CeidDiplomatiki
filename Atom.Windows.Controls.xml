<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atom.Windows.Controls</name>
    </assembly>
    <members>
        <member name="T:Atom.Windows.Controls.BaseBackgroundControl">
            <summary>
            A control that implements the <see cref="P:Atom.Windows.Controls.BaseBackgroundControl.Background"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseBackgroundControl.Background">
            <summary>
            The background
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseBackgroundControl.BackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseBackgroundControl.Background"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBackgroundControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BackgroundControl">
            <summary>
            A control that has a dynamic interchangeable background
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.BackgroundPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.BackgroundControl.BackgroundProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.BackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundControl.Background"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.Background">
            <summary>
            The background of the control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.BackColor">
            <summary>
            The back color of the control when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.BackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundControl.BackColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnBackColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.BackgroundControl.BackColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.DisabledBackColor">
            <summary>
            The back color of the control when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.DisabledBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundControl.DisabledBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.SelectedBackColor">
            <summary>
            The back color of the control when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.SelectedBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundControl.SelectedBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.MouseOverBackColor">
            <summary>
            The back color of the control when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.MouseOverBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundControl.MouseOverBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.MouseDownBackColor">
            <summary>
            The back color of the control when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.MouseDownBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundControl.MouseDownBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.AutoSetStateBackColors">
            <summary>
            Automatically sets the state back color properties.
            If true, then the state colors are set to a darker color depending to the state they represent! 
            NOTE: This property must be set before setting completely custom colors, 
            otherwise the colors are going to get set by the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnAutoSetStateBackColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.AutoSetStateBackColorsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundControl.AutoSetStateBackColors"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnAutoSetStateBackColorsPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="F:Atom.Windows.Controls.BackgroundControl.AutoSetStateBackColorsProperty"/> changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.Command">
            <summary>
            The primary command
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.CommandProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundControl.Command"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnCommandPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BackgroundControl.Command"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.CommandParameter">
            <summary>
            Reflects the parameter to pass to the CommandProperty upon execution.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.CommandParameterProperty">
            <summary>
            The DependencyProperty for the CommandParameter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.CommandTarget">
            <summary>
            The target element on which to fire the command.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.CommandTargetProperty">
            <summary>
            The DependencyProperty for Target property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.IsPressedPropertyKey">
            <summary>
            The key needed set a read-only property.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.IsPressedProperty">
            <summary>
            The DependencyProperty for the IsPressed property.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnIsPressedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when <see cref="F:Atom.Windows.Controls.BackgroundControl.IsPressedProperty"/> is changed on "<paramref name="d"/>".
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundControl.IsPressed">
            <summary>
                IsPressed is the state of a button indicates that left mouse button is pressed or space key is pressed over the button.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when a color property changes.
            NOTE: This is used to update the already set color of the control. For ex. if the control is selected
                  and we change the selected color property, the method <see cref="M:Atom.Windows.Controls.BackgroundControl.StateChanged"/> should be called
                  to update its color!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.SetAllBackColors(System.Windows.Media.Color)">
            <summary>
            Changes all the state back colors to the <paramref name="newColor"/>
            </summary>
            <param name="newColor">The color to change all the back colors</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.SetStateBackColors(System.Windows.Media.Color)">
            <summary>
            Sets the mouse over and mouse down state colors based on the <paramref name="normalStateColor"/>
            </summary>
            <param name="normalStateColor">The normal state color</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnBackColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.BackgroundControl.BackColor"/> property change
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnAutoSetStateBackColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.BackgroundControl.AutoSetStateBackColors"/> property change
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnBackColorChangedCore">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnBackColorChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> and the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnAutoSetStateBackColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.BackgroundControl.BackColor"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.SelectColorCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Selects the appropriate color for the control based on its core states
            </summary>
            <param name="color">The normal state color</param>
            <param name="mouseOverColor">The color when the cursor hovers above the control</param>
            <param name="mouseDownColor">The color when the control is pressed</param>
            <param name="selectedColor">The color when the control is selected</param>
            <param name="disabledColor">The color when the control is selected</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.SelectBackColor">
            <summary>
            Selects the appropriate back color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BackgroundControl.Command"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.GetCommandTargetElement">
            <summary>
            Gets the <see cref="T:System.Windows.FrameworkElement"/> that when clicked the <see cref="P:Atom.Windows.Controls.BackgroundControl.Command"/> should get executed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            This is the method that responds to the MouseButtonEvent event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            This is the method that responds to the MouseButtonEvent event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            This is the method that responds to the MouseEvent event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when this element loses mouse capture.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnClicked(System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click on this element
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BackgroundControl.IsPressed"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.OnClickedCore">
            <summary>
            This virtual method is called when the control is clicked and it raises the Click event
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundControl.UpdateIsPressed">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.BackgroundControl.IsPressed"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundControl.ClickEvent">
            <summary>
            Event correspond to left mouse button click
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BackgroundControl.Click">
            <summary>
            Add / Remove ClickEvent handler
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseBackgroundAndBorderControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseBackgroundControl"/> that implements the required border properties
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.BorderBrush">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseBackgroundAndBorderControl.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.BorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.BorderThickness">
            <summary>
            The thickness of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseBackgroundAndBorderControl.BorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.BorderThickness"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBackgroundAndBorderControl.OnBorderThicknessPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.BorderThickness"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.CornerRadius">
            <summary>
            The corner radius of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseBackgroundAndBorderControl.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.CornerRadius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBackgroundAndBorderControl.OnCornerRadiusPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the corner radius property <see cref="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.CornerRadius"/> property changed
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBackgroundAndBorderControl.OnBorderThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.BorderThickness"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBackgroundAndBorderControl.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseBackgroundAndBorderControl.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BackgroundAndBorderControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BackgroundControl"/> that implements the required dynamic interchangeable border properties
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.BorderBrushPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.BackgroundAndBorderControl.BorderBrushProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderBrush">
            <summary>
            The border of the control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderColor">
            <summary>
            The border color of the control when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.BorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnBorderColorPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.DisabledBorderColor">
            <summary>
            The border color of the control when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.DisabledBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.DisabledBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.SelectedBorderColor">
            <summary>
            The border color of the control when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.SelectedBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.SelectedBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.MouseOverBorderColor">
            <summary>
            The border color of the control when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.MouseOverBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.MouseOverBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.MouseDownBorderColor">
            <summary>
            The border color of the control when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.MouseDownBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.MouseDownBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderThickness">
            <summary>
            The thickness of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.BorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderThickness"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnBorderThicknessPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderThickness"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.CornerRadius">
            <summary>
            The corner radius of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.CornerRadius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnCornerRadiusPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.CornerRadius"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BackgroundAndBorderControl.AutoSetStateBorderColors">
            <summary>
            Automatically sets the state border color properties.
            If true, then the state colors are set equal to the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderColor"/>, 
            NOTE: This property must be set before setting completely custom colors, 
            otherwise the colors are going to get set by the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnAutoSetStateBackColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BackgroundAndBorderControl.AutoSetStateBorderColorsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.AutoSetStateBorderColors"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnAutoSetStateBorderColorsPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="F:Atom.Windows.Controls.BackgroundAndBorderControl.AutoSetStateBorderColorsProperty"/> changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.SetAllBorderColors(System.Windows.Media.Color)">
            <summary>
            Changes all the state border colors to the <paramref name="newColor"/>
            </summary>
            <param name="newColor">The color to change all the border colors</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.SetStateBorderColors(System.Windows.Media.Color)">
            <summary>
            Sets the mouse over and mouse down state colors based on the <paramref name="normalStateColor"/>
            </summary>
            <param name="normalStateColor">The normal state color</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnBorderColorChange(System.Windows.Media.Color)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderColor"/> property change
            </summary>
            <param name="newColor">The new value of the property</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnAutoSetStateBorderColorsChange(System.Boolean)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.AutoSetStateBorderColors"/> property change
            </summary>
            <param name="newValue">The new value of the property</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.SelectBorderColor">
            <summary>
            Selects the appropriate border color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnBorderThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderThickness"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnBorderColorChangeCore(System.Windows.Media.Color)">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnBorderColorChange(System.Windows.Media.Color)"/> and the <see cref="M:Atom.Windows.Controls.BackgroundAndBorderControl.OnAutoSetStateBorderColorsChange(System.Boolean)"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.BackgroundAndBorderControl.BorderColor"/>
            </summary>
            <param name="baseStateColor">The new base state color</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseControl">
            <summary>
            The base for every standard control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseControl.mRootElement">
            <summary>
            The root of the <see cref="T:System.Windows.FrameworkElement"/> logical and visual tree
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseControl.Id">
            <summary>
            The unique identifier of the control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseControl.IDProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseControl.Id"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseControl.Selected">
            <summary>
            If true, then the control is selected, otherwise it's not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseControl.SelectedProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseControl.Selected"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.OnSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseControl.Selected"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.ToString">
            <summary>
            Returns a string that represents the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.GetVisualChild(System.Int32)">
            <summary>
            Return the root child
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.BaseControl.VisualChildrenCount">
            <summary>
            The number of root children
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.ArrangeOverride(System.Windows.Size)">
            <summary>
            Renders the child of the framework element
            </summary>
            <param name="finalSize">The size of the framework element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Measure the size of the element
            </summary>
            <param name="availableSize">The available size</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.OnIsEnabledChange(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:System.Windows.UIElement.IsEnabled"/> property
            </summary>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.OnSelectedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseControl.Selected"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the cursor enters this element
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the cursor leaves this element
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseControl.OnSelectedChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseControl.Selected"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseControl.SelectedChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.BaseControl.Selected"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseBorderControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseForegroundControl"/> that implements the required border properties
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseBorderControl.BorderBrush">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseBorderControl.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseBorderControl.BorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseBorderControl.BorderThickness">
            <summary>
            The thickness of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseBorderControl.BorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseBorderControl.BorderThickness"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBorderControl.OnBorderThicknessPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseBorderControl.BorderThickness"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseBorderControl.CornerRadius">
            <summary>
            The corner radius of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseBorderControl.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseBorderControl.CornerRadius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBorderControl.OnCornerRadiusPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the corner radius property <see cref="P:Atom.Windows.Controls.BaseBorderControl.CornerRadius"/> property changed
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBorderControl.OnBorderThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseBorderControl.BorderThickness"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseBorderControl.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseBorderControl.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BorderControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ForegroundControl"/> that implements the required dynamic interchangeable border properties
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.BorderBrushPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.BorderControl.BorderBrushProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.BorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.BorderBrush">
            <summary>
            The border of the control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.BorderColor">
            <summary>
            The border color of the control when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.BorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.BorderColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnBorderColorPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.BorderControl.BorderColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.DisabledBorderColor">
            <summary>
            The border color of the control when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.DisabledBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.DisabledBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.SelectedBorderColor">
            <summary>
            The border color of the control when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.SelectedBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.SelectedBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.MouseOverBorderColor">
            <summary>
            The border color of the control when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.MouseOverBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.MouseOverBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.MouseDownBorderColor">
            <summary>
            The border color of the control when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.MouseDownBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.MouseDownBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.BorderThickness">
            <summary>
            The thickness of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.BorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.BorderThickness"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnBorderThicknessPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BorderControl.BorderThickness"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.CornerRadius">
            <summary>
            The corner radius of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.CornerRadius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnCornerRadiusPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BorderControl.CornerRadius"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderControl.AutoSetStateBorderColors">
            <summary>
            Automatically sets the state border color properties.
            If true, then the state colors are set equal to the <see cref="P:Atom.Windows.Controls.BorderControl.BorderColor"/>, 
            NOTE: This property must be set before setting completely custom colors, 
            otherwise the colors are going to get set by the <see cref="M:Atom.Windows.Controls.BorderControl.OnAutoSetStateBorderColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderControl.AutoSetStateBorderColorsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderControl.AutoSetStateBorderColors"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnAutoSetStateBorderColorsPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="F:Atom.Windows.Controls.BorderControl.AutoSetStateBorderColorsProperty"/> changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.SetAllBorderColors(System.Windows.Media.Color)">
            <summary>
            Changes all the state border colors to the <paramref name="newColor"/>
            </summary>
            <param name="newColor">The color to change all the border colors</param>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.SetStateBorderColors(System.Windows.Media.Color)">
            <summary>
            Sets the mouse over and mouse down state colors based on the <paramref name="normalStateColor"/>
            </summary>
            <param name="normalStateColor">The normal state color</param>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnBorderColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.BorderControl.BorderColor"/> property change
            </summary>
            <param name="e">The new value of the property</param>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnAutoSetStateBorderColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.BorderControl.AutoSetStateBorderColors"/> property change
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.SelectBorderColor">
            <summary>
            Selects the appropriate border color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BorderControl.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnBorderThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BorderControl.BorderThickness"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BorderControl.OnBorderColorChangedCore">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.BorderControl.OnBorderColorChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> and the <see cref="M:Atom.Windows.Controls.BorderControl.OnAutoSetStateBorderColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.BorderControl.BorderColor"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseColorControl">
            <summary>
            A control that implements the <see cref="P:Atom.Windows.Controls.BaseColorControl.Color"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseColorControl.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseColorControl.ColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseColorControl.Color"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseColorControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ColorControl">
            <summary>
            A control that has a dynamic interchangeable color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.ColorBrushPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.ColorControl.ColorBrushProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.ColorBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorControl.ColorBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.ColorBrush">
            <summary>
            The ColorBrush of the control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.Color">
            <summary>
            The color of the control when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.ColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorControl.Color"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.DisabledColor">
            <summary>
            The color of the control when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.DisabledColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorControl.DisabledColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.SelectedColor">
            <summary>
            The color of the control when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.SelectedColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorControl.SelectedColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.MouseOverColor">
            <summary>
            The color of the control when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.MouseOverColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorControl.MouseOverColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.MouseDownColor">
            <summary>
            The color of the control when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.MouseDownColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorControl.MouseDownColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.AutoSetStateColors">
            <summary>
            Automatically sets the state color properties.
            If true, then the state colors are set to a darker color depending to the state they represent! 
            NOTE: This property must be set before setting completely custom colors, 
            otherwise the colors are going to get set by the <see cref="M:Atom.Windows.Controls.ColorControl.OnAutoSetStateColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.AutoSetStateColorsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorControl.AutoSetStateColors"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnAutoSetStateColorsPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="F:Atom.Windows.Controls.ColorControl.AutoSetStateColorsProperty"/> changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.Command">
            <summary>
            The primary command
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.CommandProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorControl.Command"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnCommandPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ColorControl.Command"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.CommandParameter">
            <summary>
            Reflects the parameter to pass to the CommandProperty upon execution.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.CommandParameterProperty">
            <summary>
            The DependencyProperty for the CommandParameter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.CommandTarget">
            <summary>
            The target element on which to fire the command.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.CommandTargetProperty">
            <summary>
            The DependencyProperty for Target property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.IsPressedPropertyKey">
            <summary>
            The key needed set a read-only property.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.IsPressedProperty">
            <summary>
            The DependencyProperty for the IsPressed property.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnIsPressedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when <see cref="F:Atom.Windows.Controls.ColorControl.IsPressedProperty"/> is changed on "<paramref name="d"/>".
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorControl.IsPressed">
            <summary>
                IsPressed is the state of a button indicates that left mouse button is pressed or space key is pressed over the button.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when a color property changes.
            NOTE: This is used to update the already set color of the control. For ex. if the control is selected
                  and we change the selected color property, the method <see cref="M:Atom.Windows.Controls.ColorControl.StateChanged"/> should be called
                  to update its color!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.SetAllColors(System.Windows.Media.Color)">
            <summary>
            Changes all the state colors to the <paramref name="newColor"/>
            </summary>
            <param name="newColor">The color to change all the colors</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.SetStateColors(System.Windows.Media.Color)">
            <summary>
            Sets the mouse over and mouse down state colors based on the <paramref name="normalStateColor"/>
            </summary>
            <param name="normalStateColor">The normal state color</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.ColorControl.Color"/> property change
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnAutoSetStateColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.ColorControl.AutoSetStateColors"/> property change
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnColorChangedCore">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.ColorControl.OnColorChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> and the <see cref="M:Atom.Windows.Controls.ColorControl.OnAutoSetStateColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.ColorControl.Color"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.SelectColorCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Selects the appropriate color for the control based on its core states
            </summary>
            <param name="color">The normal state color</param>
            <param name="mouseOverColor">The color when the cursor hovers above the control</param>
            <param name="mouseDownColor">The color when the control is pressed</param>
            <param name="selectedColor">The color when the control is selected</param>
            <param name="disabledColor">The color when the control is selected</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.SelectColor">
            <summary>
            Selects the appropriate color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ColorControl.Command"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.GetCommandTargetElement">
            <summary>
            Gets the <see cref="T:System.Windows.FrameworkElement"/> that when clicked the <see cref="P:Atom.Windows.Controls.ColorControl.Command"/> should get executed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            This is the method that responds to the MouseButtonEvent event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            This is the method that responds to the MouseButtonEvent event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            This is the method that responds to the MouseEvent event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when this element loses mouse capture.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnClicked(System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click on this element
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ColorControl.IsPressed"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.OnClickedCore">
            <summary>
            This virtual method is called when the control is clicked and it raises the Click event
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorControl.UpdateIsPressed">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.ColorControl.IsPressed"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorControl.ClickEvent">
            <summary>
            Event correspond to left mouse button click
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.ColorControl.Click">
            <summary>
            Add / Remove ClickEvent handler
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseForegroundControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BackgroundControl"/> that implements the <see cref="P:Atom.Windows.Controls.BaseForegroundControl.Foreground"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseForegroundControl.Foreground">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseForegroundControl.ForegroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseForegroundControl.Foreground"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseForegroundControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ForegroundControl">
            <summary>
            A control that has a dynamic interchangeable text color
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ForegroundControl.Foreground">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.ForegroundControl.ForegroundProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ForegroundControl.ForegroundPropertyKey">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ForegroundControl.Foreground"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ForegroundControl.ForegroundProperty">
            <summary>
            The foreground of the control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ForegroundControl.ForeColor">
            <summary>
            The fore color of the control when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ForegroundControl.ForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ForegroundControl.ForeColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.OnForeColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.ForegroundControl.ForeColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ForegroundControl.DisabledForeColor">
            <summary>
            The fore color of the control when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ForegroundControl.DisabledForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ForegroundControl.DisabledForeColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ForegroundControl.SelectedForeColor">
            <summary>
            The fore color of the control when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ForegroundControl.SelectedForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ForegroundControl.SelectedForeColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ForegroundControl.MouseOverForeColor">
            <summary>
            The fore color of the control when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ForegroundControl.MouseOverForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ForegroundControl.MouseOverForeColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ForegroundControl.MouseDownForeColor">
            <summary>
            The fore color of the control when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ForegroundControl.MouseDownForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ForegroundControl.MouseDownForeColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ForegroundControl.AutoSetStateForeColors">
            <summary>
            Automatically sets the state fore color properties.
            If true, then the state colors are set equal to the <see cref="P:Atom.Windows.Controls.ForegroundControl.ForeColor"/>, 
            NOTE: This property must be set before setting completely custom colors, 
            otherwise the colors are going to get set by the <see cref="M:Atom.Windows.Controls.ForegroundControl.OnAutoSetStateForeColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ForegroundControl.AutoSetStateForeColorsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ForegroundControl.AutoSetStateForeColors"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.OnAutoSetStateForeColorsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="F:Atom.Windows.Controls.ForegroundControl.AutoSetStateForeColorsProperty"/> changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.SetAllForeColors(System.Windows.Media.Color)">
            <summary>
            Changes all the state fore colors to the <paramref name="newColor"/>
            </summary>
            <param name="newColor">The color to change all the fore colors</param>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.SetStateForeColors(System.Windows.Media.Color)">
            <summary>
            Sets the mouse over and mouse down state colors based on the <paramref name="normalStateColor"/>
            </summary>
            <param name="normalStateColor">The normal state color</param>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.OnForeColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.ForegroundControl.ForeColor"/> property change
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.OnAutoSetStateForeColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.ForegroundControl.AutoSetStateForeColors"/> property change
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.OnForeColorChangedCore">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.ForegroundControl.OnForeColorChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> and the <see cref="M:Atom.Windows.Controls.ForegroundControl.OnAutoSetStateForeColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.ForegroundControl.ForeColor"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ForegroundControl.SelectForeColor">
            <summary>
            Selects the appropriate fore color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StandardControl">
            <summary>
            The base for most of the controls
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardControl.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardControl.ClickableArea">
            <summary>
            The clickable area that contains the <see cref="P:Atom.Windows.Controls.StandardControl.ContentGrid"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardControl.Padding">
            <summary>
            The margin of the inner content
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardControl.PaddingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardControl.Padding"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardControl.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardControl.GetCommandTargetElement">
            <summary>
            Gets the <see cref="T:System.Windows.FrameworkElement"/> that when clicked the <see cref="P:Atom.Windows.Controls.BackgroundControl.Command"/> should get executed
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DualContentControl`2">
            <summary>
            A control that can host two framework elements and has the ability to position them using its properties
            </summary>
            <typeparam name="TFirstContent">The type of the first content element</typeparam>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DualContentControl`2.FirstContentElement">
            <summary>
            The element that represents the primary content of the control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DualContentControl`2.SecondContentElement">
            <summary>
            The element that represents the secondary content of the control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DualContentControl`2.ContentPlacementDirection">
            <summary>
            The direction in which the content is placed, 
            placing the <see cref="P:Atom.Windows.Controls.DualContentControl`2.FirstContentElement"/> first and the <see cref="P:Atom.Windows.Controls.DualContentControl`2.SecondContentElement"/> afterwards and so on
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DualContentControl`2.ContentPlacementDirectionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DualContentControl`2.ContentPlacementDirection"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.OnContentPlacementDirectionPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.DualContentControl`2.ContentPlacementDirection"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.CreateFirstContentElement">
            <summary>
            Creates and returns the first content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.CreateFirstContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the first content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.CreateSecondContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the second content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.InvalidateContentPlacement">
            <summary>
            Invalidates the placement of the inner content.
            NOTE: This method gets called by the <see cref="M:Atom.Windows.Controls.DualContentControl`2.OnInitialized(System.EventArgs)"/> method!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.OnContentPlacementDirectionChange(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DualContentControl`2.ContentPlacementDirection"/>
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DualContentControl`2.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TextDualContentControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DualContentControl`2"/> that implements the <see cref="P:Atom.Windows.Controls.TextDualContentControl`2.Text"/> property
            </summary>
            <typeparam name="TFirstContent">The type of the first content element</typeparam>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.TextDualContentControl`2.Text">
            <summary>
            The text of the control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextDualContentControl`2.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextDualContentControl`2.Text"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.OnTextUpdated(System.Windows.DependencyObject,System.Object)">
            <summary>
            Fires every time the text property gets updated
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.OnTextChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.TextDualContentControl`2.Text"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDualContentControl`2.FontSize">
            <summary>
            The font size of the text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextDualContentControl`2.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextDualContentControl`2.FontSize"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.CreateFirstContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the first content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.CreateSecondContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the second content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.TextDualContentControl`2.Text"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.OnTextUpdated(System.String)">
            <summary>
            Fires every time the <see cref="F:Atom.Windows.Controls.TextDualContentControl`2.TextProperty"/> gets updated.
            This method is used to validate and format the text
            </summary>
            <param name="baseValue">The value that is about to get set to the <see cref="P:Atom.Windows.Controls.TextDualContentControl`2.Text"/></param> property
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDualContentControl`2.OnTextChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.TextDualContentControl`2.Text"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.TextDualContentControl`2.TextChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.TextDualContentControl`2.Text"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.AdjustableTextDualContentControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.TextDualContentControl`2"/> that has the ability to position its inner content
            </summary>
            <typeparam name="TFirstContent">The type of the first content element</typeparam>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.AdjustableTextDualContentControl`2.ContentPlacement">
            <summary>
            The placement location of the content
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.AdjustableTextDualContentControl`2.ContentPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.AdjustableTextDualContentControl`2.ContentPlacement"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableTextDualContentControl`2.OnContentPlacementPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.AdjustableTextDualContentControl`2.ContentPlacement"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableTextDualContentControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableTextDualContentControl`2.OnContentPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.AdjustableTextDualContentControl`2.ContentPlacement"/> property change
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableTextDualContentControl`2.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.AdjustableTextDualContentControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.AdjustableTextDualContentControl`2"/> that has preset the first content element to a <see cref="T:System.Windows.Controls.TextBlock"/>
            </summary>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableTextDualContentControl`1.CreateFirstContentElement">
            <summary>
            Creates and returns the first content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.TripleContentControl`3">
            <summary>
            A control that can host three framework elements and has the ability to position them using its properties
            </summary>
            <typeparam name="TFirstContent">The type of the first content element</typeparam>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
            <typeparam name="TThirdContent">The type of the third content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.TripleContentControl`3.ThirdContentElement">
            <summary>
            The third content element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TripleContentControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TripleContentControl`3.InvalidateContentPlacement">
            <summary>
            Invalidates the placement of the inner content
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TripleContentControl`3.CreateThirdContentElement">
            <summary>
            Creates and returns the third content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TripleContentControl`3.CreateFirstContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the first content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TripleContentControl`3.CreateSecondContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the second content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TripleContentControl`3.CreateThirdContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the third content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TripleContentControl`3.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.QuadContentControl`4">
            <summary>
            A control that can host four framework elements and has the ability to position them using its properties
            </summary>
            <typeparam name="TFirstContent">The type of the first content element</typeparam>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
            <typeparam name="TThirdContent">The type of the third content element</typeparam>
            <typeparam name="TFourthContent">The type of the fourth content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.QuadContentControl`4.FourthContentElement">
            <summary>
            The fourth content element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.QuadContentControl`4.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.QuadContentControl`4.CreateFourthContentElement">
            <summary>
            Creates and returns the fourth content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.QuadContentControl`4.CreateFirstContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the first content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.QuadContentControl`4.CreateSecondContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the second content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.QuadContentControl`4.CreateThirdContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the third content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.QuadContentControl`4.CreateFourthContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the fourth content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.QuadContentControl`4.InvalidateContentPlacement">
            <summary>
            Invalidates the placement of the inner content.
            NOTE: This method gets called by the <see cref="M:Atom.Windows.Controls.DualContentControl`2.OnInitialized(System.EventArgs)"/> method!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.QuadContentControl`4.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TextQuadContentControl`4">
            <summary>
            A <see cref="T:Atom.Windows.Controls.QuadContentControl`4"/> that implements the required text dependency properties
            </summary>
            <typeparam name="TFirstContent">The type of the first content element</typeparam>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
            <typeparam name="TThirdContent">The type of the third content element</typeparam>
            <typeparam name="TFourthContent">The type of the fourth content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.TextQuadContentControl`4.Text">
            <summary>
            The text of the control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextQuadContentControl`4.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextQuadContentControl`4.Text"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextQuadContentControl`4.OnTextUpdated(System.Windows.DependencyObject,System.Object)">
            <summary>
            Fires every time the text property gets updated
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextQuadContentControl`4.OnTextChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.TextQuadContentControl`4.Text"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextQuadContentControl`4.FontSize">
            <summary>
            The font size of the text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextQuadContentControl`4.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextQuadContentControl`4.FontSize"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextQuadContentControl`4.OnTextChange(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires the <see cref="E:Atom.Windows.Controls.TextQuadContentControl`4.TextChanged"/> event
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextQuadContentControl`4.OnTextUpdated(System.String)">
            <summary>
            Fires every time the <see cref="F:Atom.Windows.Controls.TextQuadContentControl`4.TextProperty"/> gets updated.
            This method is used to validate and format the text
            </summary>
            <param name="baseValue">The value that is about to get set to the <see cref="P:Atom.Windows.Controls.TextQuadContentControl`4.Text"/></param> property
            <returns></returns>
        </member>
        <member name="E:Atom.Windows.Controls.TextQuadContentControl`4.TextChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.TextQuadContentControl`4.Text"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseButton`2">
            <summary>
            The base for all the buttons
            </summary>
            <typeparam name="TFirstContent">The type of the first content element</typeparam>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseButton`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseButton`2.CreateButtonTextBlock">
            <summary>
            Creates and returns a <see cref="T:System.Windows.Controls.TextBlock"/> pre-binded with the required dependency properties of the <see cref="T:Atom.Windows.Controls.BaseButton`2"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseButton`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseButton`2"/> that has pre-set the type of the second content element to a <see cref="T:System.Windows.Controls.TextBlock"/>
            </summary>
            <typeparam name="TFirstContent">The type of the first content element</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseButton`1.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IconAndTextButton`1">
            <summary>
            An icon and text button that uses an svg file as its icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconAndTextButton`1.PathData">
            <summary>
            The path data of the icon
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.IconAndTextButton`1.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.IconAndTextButton`1.PathData"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconAndTextButton`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconAndTextButton`1.CreateFirstContentElement">
            <summary>
            Creates and returns the first content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IconAndTextButton`1.OnIconChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="!:IconAndTextButton&lt;TSecondContent>&gt;.Icon"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.IconAndTextButton">
            <summary>
            An icon and text button that uses an svg file as its icon
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconAndTextButton.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IconButton">
            <summary>
            A button that contains only an svg image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconButton.Icon">
            <summary>
            The icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconButton.PathData">
            <summary>
            The path data of the icon
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.IconButton.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.IconButton.PathData"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconButton.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.InformationalButton">
            <summary>
            A <see cref="T:Atom.Windows.Controls.IconAndTextButton`1"/> that contains an extra layer of text information
            using the <see cref="P:Atom.Windows.Controls.InformationalButton.Description"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.InformationalButton.Description">
            <summary>
            The description of the directory
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.InformationalButton.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.InformationalButton.Description"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.InformationalButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.InformationalButton.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.MenuButton">
            <summary>
            A <see cref="T:Atom.Windows.Controls.IconAndTextButton"/> personalized as a menu button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuButton.CreateFirstContentElement">
            <summary>
            Creates and returns the first content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ImageMenuButton">
            <summary>
            A <see cref="T:Atom.Windows.Controls.MenuButton"/> that presents an image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageMenuButton.ImageAndTextBlockGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.ImageMenuButton.CircularImage"/> and the <see cref="P:Atom.Windows.Controls.DualContentControl`2.SecondContentElement"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageMenuButton.CircularImage">
            <summary>
            The circular image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageMenuButton.ImageSource">
            <summary>
            The image source
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ImageMenuButton.ImageSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ImageMenuButton.ImageSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageMenuButton.OnImageSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ImageMenuButton.ImageSource"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageMenuButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageMenuButton.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ImageMenuButton.OnImageSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ImageMenuButton.ImageSource"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.TextButton">
            <summary>
            A button that contains only text
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextButton.Text">
            <summary>
            The text of the control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextButton.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextButton.Text"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextButton.OnTextUpdated(System.Windows.DependencyObject,System.Object)">
            <summary>
            Fires every time the text property gets updated
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextButton.OnTextChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.TextButton.Text"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextButton.FontSize">
            <summary>
            The font size of the text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextButton.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextButton.FontSize"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextButton.ContentPlacement">
            <summary>
            The placement location of the content
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextButton.ContentPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextButton.ContentPlacement"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextButton.OnContentPlacementPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.TextButton.ContentPlacement"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextButton.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextButton.OnTextChange(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires the <see cref="E:Atom.Windows.Controls.TextButton.TextChanged"/> event
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextButton.OnTextUpdated(System.String)">
            <summary>
            Fires every time the <see cref="F:Atom.Windows.Controls.TextButton.TextProperty"/> gets updated.
            This method is used to validate and format the text
            </summary>
            <param name="baseValue">The value that is about to get set to the <see cref="P:Atom.Windows.Controls.TextButton.Text"/></param> property
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextButton.OnContentPlacementChange(Atom.Core.Placement)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.TextButton.ContentPlacement"/> property change
            </summary>
            <param name="newValue">The new value</param>
        </member>
        <member name="E:Atom.Windows.Controls.TextButton.TextChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.TextButton.Text"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BubbleCanvasBorder">
            <summary>
            A <see cref="T:System.Windows.Controls.Border"/> configured for a <see cref="T:Atom.Windows.Controls.BubblesPresenterCanvas"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleCanvasBorder.PreferredPlacement">
            <summary>
            The preferred placement of the bubble
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleCanvasBorder.OnBubbleHideAction">
            <summary>
            Action that gets executed when the bubble gets hidden
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleCanvasBorder.#ctor(Atom.Windows.Controls.PreferredPlacement,System.Action{System.Windows.UIElement})">
            <summary>
            Default constructor
            </summary>
            <param name="preferredPlacement">The preferred placement of the bubble</param>
            <param name="onBubbleHideAction">Action that gets executed when the bubble gets hidden</param>
        </member>
        <member name="T:Atom.Windows.Controls.BubblesPresenter`1">
            <summary>
            Presents additional information for its child in a form of an bubble
            </summary>
            <typeparam name="TContent">The type of the content</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BubblesPresenter`1.mMapper">
            <summary>
            The mapper that maps the relative to elements with the extra presented elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubblesPresenter`1.BubblesCanvas">
            <summary>
            The canvas where the bubble is placed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubblesPresenter`1.BubblesOpacity">
            <summary>
            The opacity of the tool tip.
            NOTE: The value ranges between 0 and 1!
            NOTE: The default value is 1!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubblesPresenter`1.BubblesOpacityProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubblesPresenter`1.BubblesOpacity"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.ShowContentAsync(System.Windows.FrameworkElement,System.Windows.UIElement,Atom.Windows.Controls.PreferredPlacement,System.Action{System.Windows.UIElement})">
            <summary>
            Shows the specified <paramref name="content"/> element relative to the specified <paramref name="relativeTo"/> element
            </summary>
            <param name="relativeTo">The element that the <paramref name="content"/> element should be shown relative to</param>
            <param name="content">The content to show</param>
            <param name="preferredPlacement">The preferred position relative to <paramref name="relativeTo"/> element</param>
            <param name="onBubbleHide">Handles the bubble hide</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.HideContentAsync(System.Windows.UIElement)">
            <summary>
            Hides the specified <paramref name="content"/>
            </summary>
            <param name="content">The content that is shown and should get hidden</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.SwapContentAsync(System.Windows.FrameworkElement,System.Windows.UIElement,System.Windows.UIElement,Atom.Windows.Controls.PreferredPlacement,System.Action{System.Windows.UIElement})">
            <summary>
            Hides the specified <paramref name="oldContent"/> and shows the specified <paramref name="content"/> at its place 
            relative to the specified <paramref name="relativeTo"/> element
            </summary>
            <param name="relativeTo">The element that the <paramref name="content"/> element should be shown relative to</param>
            <param name="content">The content to show</param>
            <param name="oldContent">The content that is shown and should get hidden</param>
            <param name="preferredPlacement">The preferred position relative to <paramref name="relativeTo"/> element</param>
            <param name="onBubbleHide">Handles the bubble hide</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.UpdateContentLocationAsync(System.Windows.UIElement)">
            <summary>
            Updates the location of the bubble that contains the specified <paramref name="content"/>
            </summary>
            <param name="content">The content whose bubble should get updated</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.HideAllContentAsync">
            <summary>
            Hides all the content that are currently being presented in the container
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.Presents(System.Windows.UIElement)">
            <summary>
            Checks if the specified<paramref name="content"/> is being presented
            </summary>
            <param name="content">The content to check if its being presented</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.CalculateRelativePosition(System.Windows.FrameworkElement,System.Windows.Controls.Border,Atom.Windows.Controls.PreferredPlacement)">
            <summary>
            Calculates the location of the specified <paramref name="bubble"/> relative to the specified <paramref name="relativeTo"/> element
            </summary>
            <param name="relativeTo">The element that the will be used to calculate the position of the <paramref name="bubble"/></param>
            <param name="bubble">The bubble</param>
            <param name="bubblePlacement">The preferred placement of the <paramref name="bubble"/> relative to the <paramref name="relativeTo"/> element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.SubscribeEventHandlers(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Subscribes event handlers to the necessary events of the specified <paramref name="relativeToElement"/> and the specified <paramref name="content"/>
            </summary>
            <param name="relativeToElement">The "relative to" element</param>
            <param name="content">The content element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.UnsubscribeEventHandlers(System.Windows.FrameworkElement,System.Windows.UIElement)">
            <summary>
            Unsubscribes the already subscribed event handlers from the events of the specified <paramref name="relativeToElement"/> and the specified <paramref name="content"/>
            </summary>
            <param name="relativeToElement">The "relative to" element</param>
            <param name="content">The content element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.RelativeToElement_IsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of visibility of the "relative to element"
            </summary>
            <param name="sender">The "relative to" element</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.RelativeToElement_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the change of the size of the "relative to element"
            </summary>
            <param name="sender">The "relative to" element</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.RelativeToElement_LayoutChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the change of the layout of the "relative to element"
            </summary>
            <param name="sender">The "relative to" element</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter`1.ContentElement_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the change of the size of the content element
            </summary>
            <param name="sender">The content element</param>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BubblesPresenter">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BubblesPresenter`1"/> that has a <see cref="T:System.Windows.UIElement"/> as its content
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BubblesPresenterCanvas">
            <summary>
            Used by a <see cref="T:Atom.Windows.Controls.BubblesPresenter`1"/> to present its bubbles
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubblesPresenterCanvas.Canvas">
            <summary>
            The canvas that contains all the elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenterCanvas.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubblesPresenterCanvas.PresentedContentElements">
            <summary>
            Gets all the content elements that are currently being presented
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubblesPresenterCanvas.PresentedContentElementsCount">
            <summary>
            Gets the number of the presented content elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenterCanvas.Add(System.Windows.UIElement,Atom.Windows.Controls.PreferredPlacement,System.Action{System.Windows.UIElement})">
            <summary>
            Adds the specified <paramref name="content"/> to the <see cref="P:Atom.Windows.Controls.BubblesPresenterCanvas.Canvas"/> by firstly adding it to a bubble and then returns the bubble
            </summary>
            <param name="content">The content element</param>
            <param name="preferredPlacement">The preferred placement</param>
            <param name="onBubbleHide">Handles the bubble hide</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenterCanvas.Remove(System.Windows.UIElement)">
            <summary>
            Removes the specified <paramref name="content"/> element and the border that contains it
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenterCanvas.Replace(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Replaces the specified <paramref name="oldContent"/> with the specified <paramref name="newContent"/> while keeping the same border
            </summary>
            <param name="oldContent">The content that is getting replaced</param>
            <param name="newContent">The new content</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenterCanvas.Get(System.Windows.UIElement)">
            <summary>
            Gets the border that contains the specified <paramref name="content"/>
            </summary>
            <param name="content">The content that is contained by the <see cref="T:Atom.Windows.Controls.BubbleCanvasBorder"/> we want to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenterCanvas.Contains(System.Windows.UIElement)">
            <summary>
            Checks if the specified <paramref name="content"/> is contained with in one of the borders placed in the <see cref="P:Atom.Windows.Controls.BubblesPresenterCanvas.Canvas"/>
            </summary>
            <param name="content">The element to check if its contained with in one of the borders of the <see cref="P:Atom.Windows.Controls.BubblesPresenterCanvas.Canvas"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubblesPresenterCanvas.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IBubblesPresenter">
            <summary>
            Provides abstractions for a bubbles presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IBubblesPresenter.ShowContentAsync(System.Windows.FrameworkElement,System.Windows.UIElement,Atom.Windows.Controls.PreferredPlacement,System.Action{System.Windows.UIElement})">
            <summary>
            Shows the specified <paramref name="content"/> element relative to the specified <paramref name="relativeTo"/> element
            </summary>
            <param name="relativeTo">The element that the <paramref name="content"/> element should be shown relative to</param>
            <param name="content">The content to show</param>
            <param name="preferredPlacement">The preferred position relative to <paramref name="relativeTo"/> element</param>
            <param name="onBubbleHide">Handles the bubble hide</param>
        </member>
        <member name="M:Atom.Windows.Controls.IBubblesPresenter.HideContentAsync(System.Windows.UIElement)">
            <summary>
            Hides the specified <paramref name="content"/>
            </summary>
            <param name="content">The content that is shown and should get hidden</param>
        </member>
        <member name="M:Atom.Windows.Controls.IBubblesPresenter.SwapContentAsync(System.Windows.FrameworkElement,System.Windows.UIElement,System.Windows.UIElement,Atom.Windows.Controls.PreferredPlacement,System.Action{System.Windows.UIElement})">
            <summary>
            Hides the specified <paramref name="oldContent"/> and shows the specified <paramref name="content"/> at its place 
            relative to the specified <paramref name="relativeTo"/> element
            </summary>
            <param name="relativeTo">The element that the <paramref name="content"/> element should be shown relative to</param>
            <param name="content">The content to show</param>
            <param name="oldContent">The content that is shown and should get hidden</param>
            <param name="preferredPlacement">The preferred position relative to <paramref name="relativeTo"/> element</param>
            <param name="onBubbleHide">Handles the bubble hide</param>
        </member>
        <member name="M:Atom.Windows.Controls.IBubblesPresenter.UpdateContentLocationAsync(System.Windows.UIElement)">
            <summary>
            Updates the location of the bubble that contains the specified <paramref name="content"/>
            </summary>
            <param name="content">The content whose bubble should get updated</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IBubblesPresenter.HideAllContentAsync">
            <summary>
            Hides all the content that are currently being presented in the container
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IBubblesPresenter.Presents(System.Windows.UIElement)">
            <summary>
            Checks if the specified<paramref name="content"/> is being presented
            </summary>
            <param name="content">The content to check if its being presented</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PreferredPlacement">
            <summary>
            The preferred placement.
            NOTE: If the conditions are not satisfied for a placement the opposite will be selected!
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.Carousel">
            <summary>
            A horizontal menu that links buttons with elements and presents only an element at a time based on the selected button
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Carousel.mMapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Carousel.Buttons">
            <summary>
            The buttons
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Carousel.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Carousel.ButtonsContainer">
            <summary>
            The uniform grid that contains the carousel buttons
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Carousel.IndexGrid">
            <summary>
            The index grid that contains the <see cref="P:Atom.Windows.Controls.Carousel.IndexRectangle"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Carousel.IndexRectangle">
            <summary>
            The index rectangle
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Carousel.ContentContainerGrid">
            <summary>
            The grid that contains the elements of the buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Carousel.SelectedButtonPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.Carousel.SelectedButtonProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Carousel.SelectedButtonProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Carousel.SelectedButton"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Carousel.SelectedButton">
            <summary>
            The currently selected button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.OnSelectedButtonPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.Carousel.SelectedButton"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Carousel.IndexColor">
            <summary>
            The color of the selection index
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Carousel.IndexColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Carousel.IndexColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.Update">
            <summary>
            Updates the carousel
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.Add(System.String,System.Func{Atom.Windows.Controls.Carousel,Atom.Windows.Controls.CarouselButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.String,System.Boolean)">
            <summary>
            Creates and adds a <see cref="T:Atom.Windows.Controls.CarouselButton"/> with the specified <paramref name="text"/> and 
            the specified content element provided by the <paramref name="elementImplementationFactory"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="elementImplementationFactory">The implementation factory for the content element</param>
            <param name="buttonId">The id of the button used for finding the button</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.Add(System.String,System.String,System.Func{Atom.Windows.Controls.Carousel,Atom.Windows.Controls.CarouselButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.String,System.Boolean)">
            <summary>
            Creates and adds a <see cref="T:Atom.Windows.Controls.CarouselButton"/> with the specified <paramref name="text"/>, the specified <paramref name="pathData"/>
            and the specified content element provided by the <paramref name="elementImplementationFactory"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
            <param name="elementImplementationFactory">The implementation factory for the content element</param>
            <param name="buttonId">The id of the button used for finding the button</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.Add(Atom.Windows.Controls.CarouselButton,System.Boolean)">
            <summary>
            Adds the specified <paramref name="button"/>
            </summary>
            <param name="button">The button to add</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.Remove(Atom.Windows.Controls.CarouselButton)">
            <summary>
            Removes the specified <paramref name="button"/> and its related content element
            </summary>
            <param name="button">The button to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.Remove(System.String)">
            <summary>
            Removes the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the button</param>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.Select(Atom.Windows.Controls.CarouselButton)">
            <summary>
            Selects the specified <paramref name="button"/>
            </summary>
            <param name="button">The button to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.CalculateIndexRectangleSize(Atom.Windows.Controls.CarouselButton)">
            <summary>
            Calculates the width of the <see cref="P:Atom.Windows.Controls.Carousel.IndexRectangle"/> using the currently <paramref name="selectedButton"/>.
            NOTE: This method should not be called with a <see cref="!:null"/> parameter value!
            </summary>
            <param name="selectedButton">The button that is currently selected</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.CalculateIndexRectangleXLocation(Atom.Windows.Controls.CarouselButton)">
            <summary>
            Calculates the x location of the <see cref="P:Atom.Windows.Controls.Carousel.IndexRectangle"/> using the currently <paramref name="selectedButton"/>.
            NOTE: This method should not be called with a <see cref="!:null"/> parameter value!
            </summary>
            <param name="selectedButton">The button that is currently selected</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.OnSelectedButtonChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.Carousel.SelectedButton"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.Carousel.OnSelectedButtonChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.Carousel.SelectedButton"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.Carousel.SelectedButtonChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.Carousel.SelectedButton"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CarouselButton">
            <summary>
            A <see cref="T:Atom.Windows.Controls.IconAndTextButton"/> used by the <see cref="P:Atom.Windows.Controls.CarouselButton.Carousel"/> control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CarouselButton.Carousel">
            <summary>
            The carousel that contains this button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CarouselButton.ElementImplementationFactory">
            <summary>
            The implementation factory for the content element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CarouselButton.#ctor(Atom.Windows.Controls.Carousel,System.Func{Atom.Windows.Controls.Carousel,Atom.Windows.Controls.CarouselButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}})">
            <summary>
            Default constructor
            </summary>
            <param name="carousel">The carousel that contains this button</param>
            <param name="elementImplementationFactory">The implementation factory for the content element</param>
        </member>
        <member name="T:Atom.Windows.Controls.DataForm`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DataForm`2"/> that contains the configuration methods
            </summary>
            <typeparam name="TDataForm">The type of the data form</typeparam>
            <typeparam name="TClass">The type of the model that the form manipulates</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.DataForm`2.mMapper">
            <summary>
            Maps that property maps with their associated form inputs
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataForm`2.mFormInputsToCategoriesMapper">
            <summary>
            Maps the form inputs to their related categories
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataForm`2.mValidationPropertyMaps">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DataForm`2.ValidationPropertyMaps"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataForm`2.mValidationErrorMessagePropertyMaps">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DataForm`2.ValidationErrorMessagePropertyMaps"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataForm`2.mTranslationMaps">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DataForm`2.TranslationMaps"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataForm`2.mPreviewElementCreationPropertyMaps">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DataForm`2.PreviewElementCreationPropertyMaps"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.Element">
            <summary>
            The element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.Model">
            <summary>
            The model
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.Atom#Windows#Controls#IDataForm#Model">
            <summary>
            The model the form manipulates
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.FormInputs">
            <summary>
            The form inputs
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.Mapper">
            <summary>
            If the mapper is set, then when a title isn't specified for an input
            then the title is retrieved using the mapper.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.Atom#Windows#Controls#IDataForm#Mapper">
            <summary>
            Gets the form inputs
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.SearchInput">
            <summary>
            The search input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.MainItemsControl">
            <summary>
            The items control that contains all the other item controls
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.ValidationPropertyMaps">
            <summary>
            The maps for custom validators
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.ValidationErrorMessagePropertyMaps">
            <summary>
            The maps for custom validation error messages
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.TranslationMaps">
            <summary>
            The maps used for converting the values of the form inputs to the appropriate type of values before setting them to the model
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.PreviewElementCreationPropertyMaps">
            <summary>
            The maps used for creating custom preview elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataForm`2.SearchEnabled">
            <summary>
            A flag indicating whether search is enabled or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataForm`2.SearchEnabledProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DataForm`2.SearchEnabled"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.#ctor(`1)">
            <summary>
            Standard constructor
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.Validate">
            <summary>
            Validates all the form input and returns <see cref="!:true"/> if the data that 
            are provided by the inputs are all correct and <see cref="!:false"/> otherwise
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UpdateFormValues">
            <summary>
            Updates the form values using the current <see cref="P:Atom.Windows.Controls.DataForm`2.Model"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.Atom#Windows#Controls#IDataForm#UpdateModelValues">
            <summary>
            Update the values of the current <see cref="P:Atom.Windows.Controls.DataForm`2.Model"/> and returns it
            based on the user input.
            NOTE: This method should be only called after calling the <see cref="M:Atom.Windows.Controls.DataForm`2.Validate"/> method and getting a positive response.
                  The <see cref="M:Atom.Windows.Controls.DataForm`2.Validate"/> method makes sure that all the user input is valid and sufficient!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ClearValues">
            <summary>
            Clears the inserted form values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UnsafeClear(System.Reflection.PropertyInfo)">
            <summary>
            Clears the values of the form that related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UpdateModelValues">
            <summary>
            Update the values of the current <see cref="P:Atom.Windows.Controls.DataForm`2.Model"/> and returns it
            based on the user input.
            NOTE: This method should be only called after calling the <see cref="M:Atom.Windows.Controls.DataForm`2.Validate"/> method and getting a positive response.
                  The <see cref="M:Atom.Windows.Controls.DataForm`2.Validate"/> method makes sure that all the user input is valid and sufficient!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UnsafePresents(System.Reflection.PropertyInfo)">
            <summary>
            Checks whether an input for the specified <paramref name="propertyInfo"/> is presented or not.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.Get(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})">
            <summary>
            Gets the <see cref="T:Atom.Windows.Controls.BaseFormInput"/> related to the property targeted by the <paramref name="targetPropertySelector"/>
            </summary>
            <param name="targetPropertySelector">The target property selector</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UnsafeGet(System.Reflection.PropertyInfo)">
            <summary>
            Gets the <see cref="T:Atom.Windows.Controls.BaseFormInput"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.GetValue``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            Gets the value of the form related to the property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UnsafeGetValue(System.Reflection.PropertyInfo)">
            <summary>
            Gets the value of the form that's related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property whose related form value we want to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowInput(System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows an input for the property targeted by the specified <paramref name="propertySelector"/>.
            NOTE: Automatically the best input is selected and if a suitable input isn't found, none is set!
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UnsafeShowInput(System.Reflection.PropertyInfo,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows an input for the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowCustomFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Func{`0,System.Reflection.PropertyInfo,Atom.Windows.Controls.BaseFormInput},System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a custom form input for the property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="implementationFactory">The implementation factory that returns a <see cref="T:Atom.Core.BasePropertyMap"/> implementation</param>
            <param name="canHaveMultipleValues">A flag used for overriding the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> flag</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UnsafeShowCustomFormInput(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,Atom.Windows.Controls.BaseFormInput},System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a custom form input for the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="implementationFactory">The implementation factory that returns a <see cref="T:Atom.Core.BasePropertyMap"/> implementation</param>
            <param name="canHaveMultipleValues">A flag used for overriding the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> flag</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowTextInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},Atom.Core.TextValue,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.TextFormInput"/> with a custom <paramref name="textValue"/> type for the <see cref="T:System.String"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="textValue">The type of the text value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowTextInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.String}}},Atom.Core.TextValue,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.TextFormInput"/> with a custom <paramref name="textValue"/> type for the <see cref="!:IEnumerable&lt;string&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="textValue">The type of the text value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.SByte}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.SByteNumericFormInput"/> for the <see cref="T:System.SByte"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.SByte}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.SByteNumericFormInput"/> for the <see cref="!:IEnumerable&lt;sbyte&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.SByte}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableSByteNumericFormInput"/> for the <see cref="!:sbyte?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.SByte}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableSByteNumericFormInput"/> for the <see cref="!:IEnumerable&lt;sbyte?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Byte}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.ByteNumericFormInput"/> for the <see cref="T:System.Byte"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Byte}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.ByteNumericFormInput"/> for the <see cref="!:IEnumerable&lt;byte&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Byte}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableByteNumericFormInput"/> for the <see cref="!:byte?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.Byte}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableByteNumericFormInput"/> for the <see cref="!:IEnumerable&lt;byte?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Int16}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.ShortNumericFormInput"/> for the <see cref="T:System.Int16"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Int16}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.ShortNumericFormInput"/> for the <see cref="!:IEnumerable&lt;short&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int16}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableShortNumericFormInput"/> for the <see cref="!:short?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.Int16}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableShortNumericFormInput"/> for the <see cref="!:IEnumerable&lt;short?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.UInt16}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.UnsignedShortNumericFormInput"/> for the <see cref="T:System.UInt16"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.UInt16}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.UnsignedShortNumericFormInput"/> for the <see cref="!:IEnumerable&lt;ushort&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt16}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableUnsignedShortNumericFormInput"/> for the <see cref="!:ushort?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.UInt16}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableUnsignedShortNumericFormInput"/> for the <see cref="!:IEnumerable&lt;ushort?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.IntegerNumericFormInput"/> for the <see cref="T:System.Int32"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Int32}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.IntegerNumericFormInput"/> for the <see cref="!:IEnumerable&lt;int&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int32}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableIntegerNumericFormInput"/> for the <see cref="!:int?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableIntegerNumericFormInput"/> for the <see cref="!:IEnumerable&lt;int?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.UInt32}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.UnsignedIntegerNumericFormInput"/> for the <see cref="T:System.UInt32"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.UInt32}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.UnsignedIntegerNumericFormInput"/> for the <see cref="!:IEnumerable&lt;uint&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt32}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInput"/> for the <see cref="!:uint?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.UInt32}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInput"/> for the <see cref="!:IEnumerable&lt;uint?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Int64}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LongNumericFormInput"/> for the <see cref="T:System.Int64"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Int64}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LongNumericFormInput"/> for the <see cref="!:IEnumerable&lt;long&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int64}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableLongNumericFormInput"/> for the <see cref="!:long?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableLongNumericFormInput"/> for the <see cref="!:IEnumerable&lt;long?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.UInt64}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.UnsignedLongNumericFormInput"/> for the <see cref="T:System.UInt64"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.UInt64}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.UnsignedLongNumericFormInput"/> for the <see cref="!:IEnumerable&lt;ulong&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt64}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableUnsignedLongNumericFormInput"/> for the <see cref="!:ulong?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.UInt64}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableUnsignedLongNumericFormInput"/> for the <see cref="!:IEnumerable&lt;ulong?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Single}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.FloatNumericFormInput"/> for the <see cref="T:System.Single"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Single}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.FloatNumericFormInput"/> for the <see cref="!:IEnumerable&lt;float&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Single}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableFloatNumericFormInput"/> for the <see cref="!:float?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableFloatNumericFormInput"/> for the <see cref="!:IEnumerable&lt;float?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Double}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.DoubleNumericFormInput"/> for the <see cref="T:System.Double"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Double}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.DoubleNumericFormInput"/> for the <see cref="!:IEnumerable&lt;double&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Double}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableDoubleNumericFormInput"/> for the <see cref="!:double?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableDoubleNumericFormInput"/> for the <see cref="!:IEnumerable&lt;double?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Decimal}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.DecimalNumericFormInput"/> for the <see cref="T:System.Decimal"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Decimal}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.DecimalNumericFormInput"/> for the <see cref="!:IEnumerable&lt;decimal&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Decimal}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableDecimalNumericFormInput"/> for the <see cref="!:decimal?"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNumericInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.NullableDecimalNumericFormInput"/> for the <see cref="!:IEnumerable&lt;decimal?&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">Action that configures the numeric input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowStringPasswordFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.StringPasswordFormInput"/> to the property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSecureStringPasswordFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.Security.SecureString}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.SecureStringRegisterPasswordFormInput"/> to the property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowStringRegisterPasswordFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.StringPasswordFormInput"/> to the property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSecureStringRegisterPasswordFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.Security.SecureString}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.SecureStringRegisterPasswordFormInput"/> to the property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowStringColorFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.StringColorFormInput"/> for the <see cref="T:System.String"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowOpenFileDialogInput(System.Linq.Expressions.Expression{System.Func{`1,Microsoft.AspNetCore.Http.IFormFile}},System.Action{Microsoft.Win32.OpenFileDialog},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:Atom.Windows.Controls.FileInputFormInput"/> that represents the <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">A configuration action for the open file dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowOpenFileDialogInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}}},System.Action{Microsoft.Win32.OpenFileDialog},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:Atom.Windows.Controls.FileInputFormInput"/> that represents the <see cref="T:System.Collections.Generic.IEnumerable`1"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">A configuration action for the open file dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowOpenFileDialogInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.Action{Microsoft.Win32.OpenFileDialog},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:Atom.Windows.Controls.FileInputFormInput"/> that represents the <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">A configuration action for the open file dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowOpenFileDialogInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.String}}},System.Action{Microsoft.Win32.OpenFileDialog},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:Atom.Windows.Controls.FileInputFormInput"/> that represents the <see cref="T:System.Collections.Generic.IEnumerable`1"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">A configuration action for the open file dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNamedOpenFileDialogInput(System.Linq.Expressions.Expression{System.Func{`1,Microsoft.AspNetCore.Http.IFormFile}},System.Action{Microsoft.Win32.OpenFileDialog},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:Atom.Windows.Controls.NamedFileInputFormInput"/> that represents the <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">A configuration action for the open file dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowNamedOpenFileDialogInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}}},System.Action{Microsoft.Win32.OpenFileDialog},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:Atom.Windows.Controls.NamedFileInputFormInput"/> that represents the <see cref="T:System.Collections.Generic.IEnumerable`1"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">A configuration action for the open file dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowDropDownMenuNamedOpenFileDialogInput``1(System.Linq.Expressions.Expression{System.Func{`1,Microsoft.AspNetCore.Http.IFormFile}},System.Action{Microsoft.Win32.OpenFileDialog},System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,System.String},System.Func{``0,System.String},System.Func{``0,System.String,System.Boolean},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1"/> that represents the <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">A configuration action for the open file dialog</param>
            <param name="options">The items to select form</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="customFileNameSelector">Selector that returns the value that will be set to the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property</param>
            <param name="comparer">
            Compares the inserted item and the inserted string in order to set a selected item in the drop down when 
            the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property gets set externally
            </param>
            <param name="iconPathDataSelector">Selector that returns the path data of the icon that will be set to the button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowDropDownMenuNamedOpenFileDialogInput``1(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}}},System.Action{Microsoft.Win32.OpenFileDialog},System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,System.String},System.Func{``0,System.String},System.Func{``0,System.String,System.Boolean},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1"/> that represents the <see cref="T:System.Collections.Generic.IEnumerable`1"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="configure">A configuration action for the open file dialog</param>
            <param name="options">The items to select form</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="customFileNameSelector">Selector that returns the value that will be set to the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property</param>
            <param name="comparer">
            Compares the inserted item and the inserted string in order to set a selected item in the drop down when 
            the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property gets set externally
            </param>
            <param name="iconPathDataSelector">Selector that returns the path data of the icon that will be set to the button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowOpenDirectoryDialogInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:System.Windows.Forms.FolderBrowserDialog"/> configuration action for the <see cref="T:System.String"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowOpenDirectoryDialogInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.String}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets a custom <see cref="T:System.Windows.Forms.FolderBrowserDialog"/> configuration action for the <see cref="!:IEnumerable&lt;string&gt;"/> property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowCheckBoxFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.String,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets <see cref="T:Atom.Windows.Controls.CheckBoxFormInput"/> that represents the <see cref="T:System.Boolean"/> property targeted by the <paramref name="propertySelector"/>
            Localization
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="checkBoxText">The text of the check box</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSelectMultipleOptionsInput``1(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,System.Reflection.PropertyInfo,Atom.Windows.Controls.StandardOptionsFormInput{``0}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Adds a custom <see cref="T:Atom.Windows.Controls.StandardOptionsFormInput`1"/> that is used by the user to select multiple options
            </summary>
            <typeparam name="TOption">The type of the options</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="optionsFormInputImplementationFactory">The implementation factory</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSelectSingleOptionInput``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Func{`0,System.Reflection.PropertyInfo,Atom.Windows.Controls.StandardOptionsFormInput{``0}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Adds a custom <see cref="T:Atom.Windows.Controls.StandardOptionsFormInput`1"/> that is used by the user to select at most one of its options.
            NOTE: The <see cref="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MinimumNumberOfRequiredSelections"/> and the <see cref="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MaximumNumberOfSelections"/>
                  are overridden by this method!
            </summary>
            <typeparam name="TOption">The type of the options</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <param name="optionsFormInputImplementationFactory">The implementation factory</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSelectSingleOptionInput``2(System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Func{`0,System.Reflection.PropertyInfo,Atom.Windows.Controls.StandardOptionsFormInput{``0}},System.Func{``0,``1},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Adds a custom <see cref="T:Atom.Windows.Controls.StandardOptionsFormInput`1"/> that is used by the user to select at most one of its options
            when the <typeparamref name="TKey"/> is different from the <typeparamref name="TOption"/>
            </summary>
            <typeparam name="TOption">The type of the options</typeparam>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <param name="optionsFormInputImplementationFactory">The implementation factory.</param>
            <param name="translation">The translation between the <typeparamref name="TOption"/> and the <typeparamref name="TKey"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSelectEnumSingleOptionInput``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Func{`0,System.Reflection.PropertyInfo,Atom.Windows.Controls.EnumOptionsFormInput{``0}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Adds a custom <see cref="T:Atom.Windows.Controls.EnumOptionsFormInput`1"/> that is used by the user to select at most one of its options.
            NOTE: The <see cref="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MinimumNumberOfRequiredSelections"/> and the <see cref="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MaximumNumberOfSelections"/>
                  are overridden by this method!
            </summary>
            <typeparam name="TEnumValue">The type of the enum</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <param name="optionsFormInputImplementationFactory">The implementation factory</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSelectEnumSingleOptionInput``1(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{``0}}},System.Func{`0,System.Reflection.PropertyInfo,Atom.Windows.Controls.EnumOptionsFormInput{``0}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Adds a custom <see cref="T:Atom.Windows.Controls.EnumOptionsFormInput`1"/> that is used by the user to select at most one of its options.
            NOTE: The <see cref="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MinimumNumberOfRequiredSelections"/> and the <see cref="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MaximumNumberOfSelections"/>
                  are overridden by this method!
            </summary>
            <typeparam name="TEnumValue">The type of the enum</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <param name="optionsFormInputImplementationFactory">The implementation factory</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSearchInput``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,System.String},System.Func{``0,System.String},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets an input that uses the specified <paramref name="dataRetriever"/> to retrieve and present data to the user to select one from
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSearchInput``1(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{``0}}},System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,System.String},System.Func{``0,System.String},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets an input that uses the specified <paramref name="dataRetriever"/> to retrieve and present data to the user to select one from
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSearchInput``2(System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,``1},System.Func{``1,``0},System.Func{``0,System.String},System.Func{``0,System.String},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets an input that uses the specified <paramref name="dataRetriever"/> to retrieve and present data to the user to select one from.
            NOTE: A translation is set for the property provided by the <paramref name="propertySelector"/>!
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <typeparam name="TResult">The type of the results</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <param name="formInputValueTranslator">Translator that translates the value from the input to the model</param>
            <param name="propertyValueTranslator">Translator that translates the value from the model to the input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSearchInput``2(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{``1}}},System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,``1},System.Func{``1,``0},System.Func{``0,System.String},System.Func{``0,System.String},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets an input that uses the specified <paramref name="dataRetriever"/> to retrieve and present data to the user to select one from.
            NOTE: A translation is set for the property provided by the <paramref name="propertySelector"/>!
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <typeparam name="TResult">The type of the results</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <param name="formInputValueTranslator">Translator that translates the value from the input to the model</param>
            <param name="propertyValueTranslator">Translator that translates the value from the model to the input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSearchImageInput``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,System.String},System.Func{``0,System.Windows.Media.ImageSource},System.Func{``0,System.String},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets an input that uses the specified <paramref name="dataRetriever"/> to retrieve and present data to the user to select one from
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting an <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSearchImageInput``1(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{``0}}},System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,System.String},System.Func{``0,System.Windows.Media.ImageSource},System.Func{``0,System.String},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets an input that uses the specified <paramref name="dataRetriever"/> to retrieve and present data to the user to select one from
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting an <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSearchImageInput``2(System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,``1},System.Func{``1,``0},System.Func{``0,System.String},System.Func{``0,System.Windows.Media.ImageSource},System.Func{``0,System.String},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets an input that uses the specified <paramref name="dataRetriever"/> to retrieve and present data to the user to select one from.
            NOTE: A translation is set for the property provided by the <paramref name="propertySelector"/>!
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <typeparam name="TResult">The type of the results</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting an <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <param name="formInputValueTranslator">Translator that translates the value from the input to the model</param>
            <param name="propertyValueTranslator">Translator that translates the value from the model to the input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowSearchImageInput``2(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{``1}}},System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,``1},System.Func{``1,``0},System.Func{``0,System.String},System.Func{``0,System.Windows.Media.ImageSource},System.Func{``0,System.String},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sets an input that uses the specified <paramref name="dataRetriever"/> to retrieve and present data to the user to select one from.
            NOTE: A translation is set for the property provided by the <paramref name="propertySelector"/>!
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <typeparam name="TResult">The type of the results</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting an <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <param name="formInputValueTranslator">Translator that translates the value from the input to the model</param>
            <param name="propertyValueTranslator">Translator that translates the value from the model to the input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowImageInput(System.Linq.Expressions.Expression{System.Func{`1,Microsoft.AspNetCore.Http.IFormFile}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.IFormFileImageFileFormInput"/> for property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowImageInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.IFormFileImageFileFormInput"/> for property targeted by the <paramref name="propertySelector"/> 
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowImageInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.StringImageFileFormInput"/> for property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowImageInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.String}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.StringImageFileFormInput"/> for property targeted by the <paramref name="propertySelector"/> 
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowImageInput(System.Linq.Expressions.Expression{System.Func{`1,System.Uri}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.UriImageFileFormInput"/> for property targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowImageInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Uri}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.UriImageFileFormInput"/> for property targeted by the <paramref name="propertySelector"/> 
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowIconFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a custom <see cref="T:Atom.Windows.Controls.IconInputFormInput"/> for the property targeted by the specified <paramref name="propertySelector"/>.
            NOTE: The string that is set represents the path data of the icon and is one of the <see cref="T:Atom.Core.IconPaths"/>!
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowIconFormInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.String}}},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a custom <see cref="T:Atom.Windows.Controls.IconInputFormInput"/> for the property targeted by the specified <paramref name="propertySelector"/>.
            NOTE: The string that is set represents the path data of the icon and is one of the <see cref="T:Atom.Core.IconPaths"/>!
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowShortcodesTextInput(System.Linq.Expressions.Expression{System.Func{`1,System.String}},System.Collections.Generic.IEnumerable{Atom.Core.Shortcode},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a custom <see cref="T:Atom.Windows.Controls.ShortcodesTextInputFormInput"/> for the property targeted by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="shortcodes">The shortcodes</param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.ShowShortcodesTextInput(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.String}}},System.Collections.Generic.IEnumerable{Atom.Core.Shortcode},System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a custom <see cref="T:Atom.Windows.Controls.ShortcodesTextInputFormInput"/> for the property targeted by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="shortcodes">The shortcodes</param>
            <param name="title">The title</param>
            <param name="description">The optional description</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="isRequired">A flag indicating whether an option must be selected or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetTranslation``2(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Func{``1,``0},System.Func{``0,``1})">
            <summary>
            Sets a custom translation between the values of the form input and the property of the model
            </summary>
            <typeparam name="TFormInputValue">The type of the value returned by the input</typeparam>
            <typeparam name="TPropertyValue">The type of the value of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="formInputValueTranslator">Translator that translates the value from the input to the model</param>
            <param name="propertyValueTranslator">Translator that translates the value from the model to the input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetTranslation``2(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{``0}}},System.Func{``1,``0},System.Func{``0,``1})">
            <summary>
            Sets a custom translation between the values of the form input and the property of the model
            </summary>
            <typeparam name="TFormInputValue">The type of the value returned by the input</typeparam>
            <typeparam name="TValue">The type of the value of the enumerable of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="formInputValueTranslator">Translator that translates the value from the input to the model</param>
            <param name="propertyValueTranslator">Translator that translates the value from the model to the input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetCustomInputValidator``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Func{``0,System.Boolean})">
            <summary>
            Creates and adds <see cref="T:Atom.Core.ValidationPropertyMap"/> for the property targeted by the 
            <paramref name="propertySelector"/> used for custom validation of the property's value
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="validator">The validator</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetCustomInputValidator``1(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,System.Boolean})">
            <summary>
            Creates and adds <see cref="T:Atom.Core.ValidationPropertyMap"/> for the property targeted by the 
            <paramref name="propertySelector"/> used for custom validation of the property's value
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="validator">The validator</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetValidationErrorMessage(System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.String)">
            <summary>
            Creates and adds <see cref="T:Atom.Core.PropertyToTextMap"/> for the property targeted by the 
            <paramref name="propertySelector"/> used for custom validation error message
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="errorMessage">The error message</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetCustomPreviewElementCreation``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Func{``0,System.Windows.FrameworkElement})">
            <summary>
            Sets a custom preview element creation for the <see cref="T:Atom.Windows.Controls.BaseFormInput"/> that present the value of the property
            targeted by the specified <paramref name="propertySelector"/>
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="previewElementImplementationFactory">The custom implementation factory</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetCustomPreviewElementCreation``1(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,System.Windows.FrameworkElement})">
            <summary>
            Sets a custom preview element creation for the <see cref="T:Atom.Windows.Controls.BaseFormInput"/> that present the value of the property
            targeted by the specified <paramref name="propertySelector"/>
            </summary>
            <typeparam name="TKey">The type of the property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="previewElementImplementationFactory">The custom implementation factory</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.UnsafeSetCustonPreviewElementCreation(System.Reflection.PropertyInfo,System.Func{System.Object,System.Windows.FrameworkElement})">
            <summary>
            Sets a custom preview element implementation factory for the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="previewElementImplementationFactory">The preview element implementation factory</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLabelPreviewElementCreation``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Func{``0,System.String},System.Func{``0,System.String})">
            <summary>
            Sets a custom preview element implementation factor for the property of the <typeparamref name="TClass"/> targeted by the specified
            <paramref name="propertySelector"/> that creates a label
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textSelector">The text selector</param>
            <param name="colorSelector">The color selector</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetBooleanPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.String,System.String,System.String,System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Boolean"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="trueText">The text of the element when the flag is set to true</param>
            <param name="falseText">The text of the element when the flag is set to false</param>
            <param name="trueColor">The color of the element when the flag is set to true</param>
            <param name="falseColor">The color of the element when the flag is set to false</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetDateTimePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.DateTime}},System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.DateTime"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to using the specified <paramref name="format"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="format">The date format</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetDateTimePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.DateTime}}},System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Collections.Generic.IEnumerable`1"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to using the specified <paramref name="format"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="format">The date format</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetDateTimePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.DateTime}}},System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:DateTime?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to using the specified <paramref name="format"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="format">The date format</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetDateTimePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.DateTime}}}},System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:IEnumerable&lt;DateTime?&gt;"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to using the specified <paramref name="format"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="format">The date format</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalDateTimePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.DateTimeOffset}},System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.DateTimeOffset"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to the local date time using the specified 
            <paramref name="format"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="format">The date format</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalDateTimePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.DateTimeOffset}}},System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Collections.Generic.IEnumerable`1"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to the local date time using the specified
            <paramref name="format"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="format">The date format</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalDateTimePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.DateTimeOffset}}},System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:DateTimeOffset?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to the local date time using the specified 
            <paramref name="format"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="format">The date format</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalDateTimePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{System.Nullable{System.DateTimeOffset}}}},System.String)">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:IEnumerable&lt;DateTimeOffset?&gt;"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to the local date time using the specified <paramref name="format"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="format">The date format</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Int32"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int32}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:int?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Double}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Int32"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Double}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:double?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Decimal}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Decimal"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Decimal}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:decimal?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Int64}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Int64"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int64}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:long?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Int16}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Int16"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int16}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:short?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.UInt32}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.UInt32"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt32}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:uint?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.UInt64}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.UInt64"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt64}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:ulong?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.UInt16}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.UInt16"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetLocalizedCurrencyPreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt16}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:ushort?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a localized currency
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Int32"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int32}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:int?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Double}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Int32"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Double}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:double?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Decimal}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Decimal"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Decimal}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:decimal?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Int64}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Int64"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int64}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:long?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Int16}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.Int16"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.Int16}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:short?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.UInt32}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.UInt32"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt32}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:uint?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.UInt64}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.UInt64"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt64}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:ulong?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.UInt16}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="T:System.UInt16"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.SetPercentagePreviewElementCreation(System.Linq.Expressions.Expression{System.Func{`1,System.Nullable{System.UInt16}}})">
            <summary>
            Sets a custom preview element implementation factory for the <see cref="!:ushort?"/> property of the <typeparamref name="TClass"/>
            targeted by the specified <paramref name="propertySelector"/> that converts the value to a percentage
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.CreateMainItemsControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.DataForm`2.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.CreateInnerItemsControl(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.DataForm`2.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.CreateUncategorizedInnerItemsControl">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.DataForm`2.MainItemsControl"/>
            and will be used for storing elements that are not categorized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.OnValuesChanged(Atom.Windows.Controls.DataFormValueChangedEventArgs)">
            <summary>
            Handles the change of the value of a form input container of a form input
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.CreateAndAddFormInputCore(System.Reflection.PropertyInfo,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.Func{`0,System.Reflection.PropertyInfo,Atom.Windows.Controls.BaseFormInput},System.Boolean)">
            <summary>
            Creates and adds the most appropriate form input for the specified <paramref name="propertyInfo"/>
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="title">The title</param>
            <param name="categoryName">The category</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this input must have a valid value</param>
            <param name="isReadOnly">A flag indicating whether the value this input is presenting is read only or not</param>
            <param name="color">The color</param>
            <param name="implementationFactory">The custom implementation factory if any</param>
            <param name="canHaveMultipleValues">A flag indicating whether this input can have multiple values or not</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.AddFormInputCore(Atom.Windows.Controls.BaseFormInput,System.String)">
            <summary>
            Adds the specified <paramref name="formInput"/> in the <see cref="P:Atom.Windows.Controls.DataForm`2.MainItemsControl"/>
            </summary>
            <param name="formInput">The form input</param>
            <param name="categoryName">The category name</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`2.OnValuesChangedCore(Atom.Windows.Controls.DataFormValueChangedEventArgs)">
            <summary>
            Handles the change of the value of a form input container of a form input internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.DataForm`2.ValuesChanged">
            <summary>
            Event that fires every time one of the values of an input form changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DataForm`1">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.DataForm`2"/>
            </summary>
            <typeparam name="TClass">The type of the model that the form manipulates</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataForm`1.#ctor(`0)">
            <summary>
            Standard constructor
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="T:Atom.Windows.Controls.UniformDataForm`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DataForm`2"/> that places its input forms in a uniform manner
            </summary>
            <typeparam name="TUniformDataForm">The type of the uniform data form</typeparam>
            <typeparam name="TClass">The type of the model that the form manipulates</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.UniformDataForm`2.Columns">
            <summary>
            The number of columns of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformDataForm`2.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformDataForm`2.Columns"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.UniformDataForm`2.Rows">
            <summary>
            The number of rows of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformDataForm`2.RowsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformDataForm`2.Rows"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformDataForm`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformDataForm`2.#ctor(`1)">
            <summary>
            Standard constructor
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.UniformDataForm`2.CreateInnerItemsControl(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.DataForm`2.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UniformDataForm`2.CreateUncategorizedInnerItemsControl">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.DataForm`2.MainItemsControl"/>
            and will be used for storing elements that are not categorized
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UniformDataForm`1">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.UniformDataForm`2"/>
            </summary>
            <typeparam name="TClass">The type of the model that the form manipulates</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.UniformDataForm`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformDataForm`1.#ctor(`0)">
            <summary>
            Standard constructor
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="T:Atom.Windows.Controls.DataFormConstants">
            <summary>
            Constants related to <see cref="T:Atom.Windows.Controls.DataForm`1"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataFormConstants.FormMinimumWidth">
            <summary>
            The minimum width of the forms presenter to the user
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataFormConstants.StandardInputElementWidth">
            <summary>
            The width of most of input elements contained in a <see cref="T:Atom.Windows.Controls.DataForm`1"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataFormConstants.DropDownButtonMinWidth">
            <summary>
            The minimum width of the drop down buttons contained in a <see cref="T:Atom.Windows.Controls.DataForm`1"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs">
            <summary>
            Arguments for a <see cref="T:Atom.Windows.Controls.BaseFormInput"/> value change
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.FormInputContainer">
            <summary>
            The form input container whose value changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.Value">
            <summary>
            The new value of the <see cref="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.FormInputContainer"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.WasValueRemoved">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.Value"/> was removed from the base form input
            meaning that the <see cref="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.FormInputContainer"/> was removed from the base form input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.#ctor(Atom.Windows.Controls.BaseFormInputContainer,System.Object,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="formInputContainer">The form input container whose value changes</param>
            <param name="value">The new value of the <see cref="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.FormInputContainer"/></param>
            <param name="wasValueRemoved">
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.Value"/> was removed from the base form input
            meaning that the <see cref="P:Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs.FormInputContainer"/> was removed from the base form input
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.DataFormValueChangedEventArgs">
            <summary>
            Arguments for a <see cref="T:Atom.Windows.Controls.DataForm`2"/> value change
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInput">
            <summary>
            The form input that contains the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInputContainer"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInputContainer">
            <summary>
            The form input container whose value changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.Property">
            <summary>
            The property that is represented by the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.Value">
            <summary>
            The new value of the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInputContainer"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.WasValueRemoved">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.Value"/> was removed from the base form input
            meaning that the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInputContainer"/> was removed from the base form input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataFormValueChangedEventArgs.#ctor(Atom.Windows.Controls.BaseFormInput,Atom.Windows.Controls.BaseFormInputContainer,System.Reflection.PropertyInfo,System.Object,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInputContainer"/></param>
            <param name="formInputContainer">The form input container whose value changes</param>
            <param name="propertyInfo">The property that is represented by the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInput"/></param>
            <param name="value">The new value of the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInputContainer"/></param>
            <param name="wasValueRemoved">
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.Value"/> was removed from the base form input
            meaning that the <see cref="P:Atom.Windows.Controls.DataFormValueChangedEventArgs.FormInputContainer"/> was removed from the base form input
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.IDataForm">
            <summary>
            Provides abstractions for a data form
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataForm.Element">
            <summary>
            The element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataForm.FormInputs">
            <summary>
            Gets the form inputs
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataForm.Model">
            <summary>
            The model the form manipulates
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataForm.Mapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.UnsafePresents(System.Reflection.PropertyInfo)">
            <summary>
            Checks whether an input for the specified <paramref name="propertyInfo"/> is presented or not.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.UnsafeGet(System.Reflection.PropertyInfo)">
            <summary>
            Gets the <see cref="T:Atom.Windows.Controls.BaseFormInput"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.UnsafeGetValue(System.Reflection.PropertyInfo)">
            <summary>
            Gets the value of the form that's related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property whose related form value we want to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.UpdateFormValues">
            <summary>
            Updates the form values using the current <see cref="P:Atom.Windows.Controls.IDataForm.Model"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.ClearValues">
            <summary>
            Clears the inserted form values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.UnsafeClear(System.Reflection.PropertyInfo)">
            <summary>
            Clears the values of the form that related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.UpdateModelValues">
            <summary>
            Update the values of the current <see cref="P:Atom.Windows.Controls.IDataForm.Model"/> and returns it
            based on the user input.
            NOTE: This method should be only called after calling the <see cref="M:Atom.Windows.Controls.DataForm`2.Validate"/> method and getting a positive response.
                  The <see cref="M:Atom.Windows.Controls.DataForm`2.Validate"/> method makes sure that all the user input is valid and sufficient!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.UnsafeShowInput(System.Reflection.PropertyInfo,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows an input for the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataForm.UnsafeShowCustomFormInput(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,Atom.Windows.Controls.BaseFormInput},System.Boolean,System.String,System.Boolean,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Shows a custom form input for the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The optional description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The hex value of the color of the title and the description</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
            <param name="implementationFactory">The implementation factory that returns a <see cref="T:Atom.Core.BasePropertyMap"/> implementation</param>
            <param name="canHaveMultipleValues">A flag used for overriding the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> flag</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseFormInputContainer">
            <summary>
            The base for all the containers that contain an input control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInputContainer.mInitValue">
            <summary>
            The init value
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputContainer.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.BaseFormInputContainer.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputContainer.FormInput">
            <summary>
            The form input that contains this input container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputContainer.ContentGrid">
            <summary>
            The grid that contains the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputContainer.InputElementGrid">
            <summary>
            The grid that contains the input element and the remove button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputContainer.PreviewElement">
            <summary>
            The preview element.
            NOTE: The preview element can be null!
            NOTE: The preview element is created when the <see cref="P:Atom.Windows.Controls.BaseFormInputContainer.IsReadOnly"/> property is set to true!
            NOTE: The preview element is created when needed for the first time by the <see cref="M:Atom.Windows.Controls.BaseFormInputContainer.OnInitialized(System.EventArgs)"/>
                  method!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputContainer.DeleteButton">
            <summary>
            The delete button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputContainer.EnableDeletion">
            <summary>
            A flag indicating whether this form input container can be deleted or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInputContainer.EnableDeletionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInputContainer.EnableDeletion"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputContainer.IsReadOnly">
            <summary>
            A flag indicating whether the value of this input can be changed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInputContainer.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInputContainer.IsReadOnly"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.OnIsReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseFormInputContainer.IsReadOnly"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.Validate">
            <summary>
            Validates the value that was inserted to the input by the user
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.GetValue">
            <summary>
            Gets the value of the input
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.SetValue(System.Object)">
            <summary>
            Sets the value to the input
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.UpdatePreviewElement">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.BaseFormInputContainer.PreviewElement"/> when needed
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.CreateInputElement">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.ConfigureInputElement(System.Windows.FrameworkElement)">
            <summary>
            Configuration method that is run after the creation of the <paramref name="inputElement"/>
            </summary>
            <param name="inputElement">The input element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.OnIsReadOnlyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseFormInput.IsReadOnly"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the value
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputContainer.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the value internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseFormInputContainer.ValueChanged">
            <summary>
            Fires every time the value of the input changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardFormInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/> that contains an input control of type <typeparamref name="TInputControl"/>
            </summary>
            <typeparam name="TInputControl">The type of the input control</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardFormInputContainer`1.InputControl">
            <summary>
            The input element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardFormInputContainer`1.CreateInputElement">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardFormInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardFormInputContainer`1.ConfigureInputControl(`0)">
            <summary>
            Further configures the input control
            </summary>
            <param name="inputControl">The input control</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseOptionFormInputContainer`1">
            <summary>
            The base for all the option form input containers
            </summary>
            <typeparam name="TOption">The type of the option</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionFormInputContainer`1.FormInput">
            <summary>
            The form input that contains this container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionFormInputContainer`1.Option">
            <summary>
            The option associated with the  input container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionFormInputContainer`1.InputControl">
            <summary>
            The input element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionFormInputContainer`1.Translator">
            <summary>
            The optional translator
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseOptionsFormInput{`0},`0,System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="option">The option related to the input container</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainer`1.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainer`1.CreateInputElement">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainer`1.CreateInputElementCore">
            <summary>
            Creates and returns the input element of type <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainer`1.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainer`1.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainer`1.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainer`1.OnInputElementIsValidChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainer`1.InputControl"/>'s <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValid"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBoxFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Boolean"/> values
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBoxFormInputContainer.CheckBoxText">
            <summary>
            The text of the check box
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBoxFormInputContainer.Checked">
            <summary>
            A flag indicating whether the check box is checked or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBoxFormInputContainer.InputControl">
            <summary>
            The input element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="containerFormInput">The form input that contains this input container</param>
            <param name="checkBoxText">The text of the check box</param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxFormInputContainer.CreateInputElement">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ColorFormInputContainer">
            <summary>
            A form input container used for inserting a color values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="containerFormInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ColorFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StringColorFormInputContainer">
            <summary>
            A form input container used for inserting a color values using string values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringColorFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringColorFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringColorFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StringColorFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StringColorFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.DateTimeFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.DateTime"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDateTimeFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:DateTime?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DateTimeOffsetFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.DateTimeOffset"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeOffsetFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeOffsetFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeOffsetFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeOffsetFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeOffsetFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeOffsetFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDateTimeOffsetFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:DateTimeOffset?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeOffsetFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeOffsetFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeOffsetFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeOffsetFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeOffsetFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeOffsetFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DaySpanInputFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardFormInputContainer`1"/> that uses a <see cref="T:Atom.Windows.Controls.DaySpanInput"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInputFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInputFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInputFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInputFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInputFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.DirectoryInputFormInputContainer">
            <summary>
            A form input container used for inserting a directory values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardFormInputContainer`1"/> used for inserting a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> 
            value with a custom name value placed at its <see cref="P:Microsoft.AspNetCore.Http.IFormFile.Headers"/> dictionary using
            the <see cref="F:Atom.Core.StringConstants.NameHeader"/> as the key.A <see cref="T:Atom.Windows.Controls.DropDownMenu`1"/> is used for 
            inserting the custom file name value.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.Configure">
            <summary>
            The open file dialog configuration action
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.Options">
            <summary>
            The items to select from
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.CustomFileNameSelector">
            <summary>
            Selector that returns the value that will be set to the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.Comparer">
            <summary>
            Compares the inserted item and the inserted string in order to set a selected item in the drop down when 
            the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property gets set externally
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.IconPathDataSelector">
            <summary>
            Selector that returns the path data of the icon that will be set to the button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Microsoft.Win32.OpenFileDialog},System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String,System.Boolean})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">The open file dialog configuration action</param>
            <param name="options">The items to select form</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="customFileNameSelector">Selector that returns the value that will be set to the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property</param>
            <param name="comparer">
            Compares the inserted item and the inserted string in order to set a selected item in the drop down when 
            the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property gets set externally
            </param>
            <param name="iconPathDataSelector">Selector that returns the path data of the icon that will be set to the button</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.FileInputFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.FileInputFormInputContainer.mConfigure">
            <summary>
            The open file dialog configuration action
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Microsoft.Win32.OpenFileDialog})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">The open file dialog configuration action</param>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StringFileInputFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.String"/> value that's the file name
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringFileInputFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Microsoft.Win32.OpenFileDialog})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">The open file dialog configuration action</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringFileInputFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IconInputFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardFormInputContainer`1"/> that uses an <see cref="T:Atom.Windows.Controls.IconInput"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconInputFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.IconInputFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconInputFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IconInputFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IconInputFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.IconInputFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1">
            <summary>
            The base for all the image file input form input containers
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1.ToValue(System.String)">
            <summary>
            Converts the specified <paramref name="value"/> to the specified type
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1.FromValue(`0)">
            <summary>
            Converts the specified <paramref name="value"/> to the specified type
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IFormFileImageFileInputFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1"/> used for inserting a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IFormFileImageFileInputFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.IFormFileImageFileInputFormInputContainer.FromValue(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Converts the specified <paramref name="value"/> to the specified type
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IFormFileImageFileInputFormInputContainer.ToValue(System.String)">
            <summary>
            Converts the specified <paramref name="value"/> to the specified type
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StringImageFileInputFromInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1"/> used for inserting a <see cref="T:System.String"/> value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringImageFileInputFromInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringImageFileInputFromInputContainer.FromValue(System.String)">
            <summary>
            Converts the specified <paramref name="value"/> to the specified type
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StringImageFileInputFromInputContainer.ToValue(System.String)">
            <summary>
            Converts the specified <paramref name="value"/> to the specified type
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UriImageFileInputFromInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseImageFileInputFormInputContainer`1"/> used for inserting a <see cref="T:System.Uri"/> value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UriImageFileInputFromInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.UriImageFileInputFromInputContainer.FromValue(System.Uri)">
            <summary>
            Converts the specified <paramref name="value"/> to the specified type
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UriImageFileInputFromInputContainer.ToValue(System.String)">
            <summary>
            Converts the specified <paramref name="value"/> to the specified type
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ImageFromLinkFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/> used for inserting image values from url sources
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageFromLinkFormInputContainer.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageFromLinkFormInputContainer.Image">
            <summary>
            The image presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageFromLinkFormInputContainer.UrlTextInput">
            <summary>
            The text input where the user inserts the url
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInputContainer.CreateInputElement">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NamedFileInputFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardFormInputContainer`1"/> used for inserting a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> 
            value with a custom name value placed at its <see cref="P:Microsoft.AspNetCore.Http.IFormFile.Headers"/> dictionary using
            the <see cref="F:Atom.Core.StringConstants.NameHeader"/> as the key.A <see cref="T:Atom.Windows.Controls.TextInput"/> is used for inserting 
            the custom file name value.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NamedFileInputFormInputContainer.Configure">
            <summary>
            The open file dialog configuration action
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Microsoft.Win32.OpenFileDialog})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">The open file dialog configuration action</param>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInputContainer.ConfigureInputControl(Atom.Windows.Controls.NamedOpenFileInput)">
            <summary>
            Further configures the input control
            </summary>
            <param name="inputControl">The input control</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1">
            <summary>
            The base for all the numeric form input containers
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseNumericFormInputContainer`1.Configure">
            <summary>
            Action that configures the numeric input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInputContainer`1.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInputContainer`1.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInputContainer`1.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInputContainer`1.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.ByteNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.Byte"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ByteNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.ByteNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ByteNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableByteNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:byte?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DecimalNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.Decimal"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDecimalNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:decimal?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DoubleNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.Double"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDoubleNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:double?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.FloatNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.Single"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FloatNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.FloatNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.FloatNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableFloatNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:float?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IntegerNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.Int32"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableIntegerNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:int?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.LongNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.Int64"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.LongNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.LongNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableLongNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:long?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SByteNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.SByte"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SByteNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.SByteNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SByteNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableSByteNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:sbyte?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ShortNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.Int16"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableShortNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:short?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedIntegerNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.UInt32"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:uint?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedLongNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.UInt64"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedLongNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:ulong?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedShortNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="T:System.UInt16"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedShortNumericFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInputContainer`1"/> used for inserting a <see cref="!:ushort?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortNumericFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortNumericFormInputContainer.GetValueCore(Atom.Windows.Controls.NumericInput)">
            <summary>
            Gets the value from the <paramref name="numericInput"/>
            </summary>
            <param name="numericInput">The input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortNumericFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NumericRangeInputFormInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardFormInputContainer`1"/> that uses a <see cref="T:Atom.Windows.Controls.NumericRangeInput`1"/>
            </summary>
            <typeparam name="T">The type of the numeric values</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInputFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInputFormInputContainer`1.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInputFormInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInputFormInputContainer`1.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInputFormInputContainer`1.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBoxOptionFormInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainer`1"/> that uses a <see cref="T:Atom.Windows.Controls.CheckBoxOptionFormInputContainerElement`1"/> as
            its <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainer`1.InputControl"/>.
            </summary>
            <typeparam name="TOption">The type of the option</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxOptionFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseOptionsFormInput{`0},`0,System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="option">The option related to the input container</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxOptionFormInputContainer`1.CreateInputElementCore">
            <summary>
            Creates and returns the input element of type <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1">
            <summary>
            The base for all the option form input containers input elements
            </summary>
            <typeparam name="TOption">The type of the option</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.Option">
            <summary>
            The option that's associated with the element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.Translator">
            <summary>
            The optional translator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValid">
            <summary>
            A flag indicating whether the input element has a valid value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValidProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValid"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValidPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValid"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.#ctor(`0,System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="option">The option that's associated with the element</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.GetOptionString">
            <summary>
            Gets the option that represents the <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.Option"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.OnIsValidChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValid"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.OnIsValidChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValid"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValidChanged">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1.IsValid"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBoxOptionFormInputContainerElement`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainerElement`1"/> that hosts a <see cref="P:Atom.Windows.Controls.CheckBoxOptionFormInputContainerElement`1.CheckBox"/>
            </summary>
            <typeparam name="TOption">The type of the option</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBoxOptionFormInputContainerElement`1.CheckBox">
            <summary>
            The check box
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxOptionFormInputContainerElement`1.#ctor(`0,System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="option">The option that's associated with the element</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxOptionFormInputContainerElement`1.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxOptionFormInputContainerElement`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BasePasswordFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/> that contains a <see cref="P:Atom.Windows.Controls.BasePasswordFormInputContainer.InputControl"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePasswordFormInputContainer.InputControl">
            <summary>
            The password input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePasswordFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePasswordFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePasswordFormInputContainer.CreateInputElement">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePasswordFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StringPasswordFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePasswordFormInputContainer"/> used for inserting string password values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringPasswordFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringPasswordFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StringPasswordFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.SecureStringPasswordFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePasswordFormInputContainer"/> used for inserting secure string password values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringPasswordFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringPasswordFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringPasswordFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer">
            <summary>
            The base for all the register password form input containers
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.InputsContainer">
            <summary>
            The container that contains the <see cref="P:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.PasswordInput1"/> and the <see cref="P:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.PasswordInput2"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.PasswordInput1">
            <summary>
            The first password input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.PasswordInput2">
            <summary>
            The second password input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.CreateInputElement">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StringRegisterPasswordFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer"/> used for inserting string password values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringRegisterPasswordFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringRegisterPasswordFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StringRegisterPasswordFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.SecureStringRegisterPasswordFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer"/> used for inserting secure string password values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringRegisterPasswordFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringRegisterPasswordFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringRegisterPasswordFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.PhoneFormInputContainer">
            <summary>
            A form input container used for inserting a phone values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneFormInputContainer.GetValueCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PricingOptionFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/> that contains a <see cref="T:Atom.Windows.Controls.PricingOptionInput"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PricingOptionFormInputContainer.mUserSpecifiedModel">
            <summary>
            The model that the user has specified
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PropertyPathNodeComponentFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardFormInputContainer`1"/> for a <see cref="T:Atom.Windows.Controls.PropertyPathNodeComponent"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponentFormInputContainer.Type">
            <summary>
            The type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponentFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Type)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="type">The type</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponentFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponentFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponentFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponentFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseSearchFormInputContainer`3">
            <summary>
            The base for all the search form input containers
            </summary>
            <typeparam name="TSearchMenuInput">The type of the menu search input</typeparam>
            <typeparam name="TItem">The type of the items</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInputContainer`3.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInputContainer`3.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInputContainer`3.ConfigureInputControl(`0)">
            <summary>
            Further configures the input control
            </summary>
            <param name="inputControl">The input control</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInputContainer`3.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInputContainer`3.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInputContainer`3.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ImageSearchFormInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSearchFormInput`4"/> that uses a <see cref="T:Atom.Windows.Controls.ImageSearchMenuInput`1"/>
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchFormInputContainer`1.DataRetriever">
            <summary>
            The data retriever
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchFormInputContainer`1.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchFormInputContainer`1.IconPathDataSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchFormInputContainer`1.ImageSourceSelector">
            <summary>
            The selector responsible for extracting an <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageSearchFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseFormInput,System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageSearchFormInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SearchFormInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSearchFormInputContainer`3"/> that uses a <see cref="T:Atom.Windows.Controls.SearchMenuInput`1"/>
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.SearchFormInputContainer`1.DataRetriever">
            <summary>
            The data retriever
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchFormInputContainer`1.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchFormInputContainer`1.IconPathDataSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchFormInputContainer`1.#ctor(Atom.Windows.Controls.BaseFormInput,System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchFormInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/> that uses a <see cref="T:Atom.Windows.Controls.ShortcodesTextInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.Shortcodes">
            <summary>
            The shortcodes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.InputControlGrid">
            <summary>
            The grid that contains all the input control related elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.InputControl">
            <summary>
            The input control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.CharactersCountPresenter">
            <summary>
            The counter of the message characters
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.DataPresenter">
            <summary>
            The data presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
            <param name="shortcodes">The shortcodes</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer.CreateInputElement">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ByteFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Byte"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ByteFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ByteFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ByteFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableByteFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:byte?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.CharFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Char"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CharFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CharFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CharFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CharFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableCharFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:char?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableCharFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableCharFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableCharFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DecimalFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Decimal"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDecimalFormInputContainer">
            <summary>
            A form input container used for inserting a nullable <see cref="!:decimal?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DoubleFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Double"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDoubleFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:double?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.EmailFormInputContainer">
            <summary>
            A form input container used for inserting an email
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.EmailFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Internal constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.EmailFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.EmailFormInputContainer.ConfigureInputControl(Atom.Windows.Controls.TextInput)">
            <summary>
            Further configures the input control
            </summary>
            <param name="inputControl">The input control</param>
        </member>
        <member name="T:Atom.Windows.Controls.FloatFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Single"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FloatFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FloatFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.FloatFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableFloatFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:float?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IntegerFormInputContainer">
            <summary>
            A form input container used for inserting an <see cref="T:System.Int32"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableIntegerFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:int?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.LongFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Int64"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.LongFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableLongFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:long?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PhoneTextFormInputContainer">
            <summary>
            A form input container used for inserting a phone number
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneTextFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneTextFormInputContainer.ConfigureTextInput(Atom.Windows.Controls.TextInput)">
            <summary>
            Configures the <paramref name="input"/>
            </summary>
            <param name="input">The text input</param>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneTextFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SByteFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.SByte"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SByteFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SByteFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SByteFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableSByteFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:sbyte?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ShortFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Int16"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableShortFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:short?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.TextFormInputContainer">
            <summary>
            A form input container used for inserting a text value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextFormInputContainer.mHint">
            <summary>
            The hint
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextFormInputContainer.mInputFormatter">
            <summary>
            The text formatter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="containerForm">The form input that contains this input container</param>
            <param name="hint">The hint</param>
            <param name="formatter">The formatter</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInputContainer.ConfigureTextInput(Atom.Windows.Controls.TextInput)">
            <summary>
            Configures the <paramref name="input"/>
            </summary>
            <param name="input">The text input</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedIntegerFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.UInt32"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedIntegerFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:uint?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedLongFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.UInt64"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedLongFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:ulong?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedShortFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.UInt16"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedShortFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="!:ushort?"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UriFormInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardFormInputContainer`1"/> used for inserting a <see cref="T:System.Uri"/> value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UriFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.UriFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UriFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UriFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UriFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.UriFormInputContainer.ValidateCore">
            <summary>
            Validates the value that was inserted to the input by the user internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.VersionFormInputContainer">
            <summary>
            A form input container used for inserting a <see cref="T:System.Version"/> values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VersionFormInputContainer.#ctor(Atom.Windows.Controls.BaseFormInput)">
            <summary>
            Default constructor
            </summary>
            <param name="formInput">The form input that contains this input container</param>
        </member>
        <member name="M:Atom.Windows.Controls.VersionFormInputContainer.ClearValue">
            <summary>
            Clears the inserted value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VersionFormInputContainer.CreateInputControl">
            <summary>
            Creates and returns the input element of the appropriate type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VersionFormInputContainer.SetValueCore(System.Object)">
            <summary>
            Sets the value to the input internally
            </summary>
            <param name="value">The value to set at the input</param>
        </member>
        <member name="M:Atom.Windows.Controls.VersionFormInputContainer.GetValueCore">
            <summary>
            Gets the value of the input internally
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseFormInput">
            <summary>
            The base for all the form inputs
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.mPreviewElementImplementationFactory">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.BaseFormInput.PreviewElementImplementationFactory"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.Form">
            <summary>
            The form that contains the form input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.PropertyInfo">
            <summary>
            The property info of the property that the form manipulates
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.CustomValidator">
            <summary>
            The custom validator used from the form input containers for further value validation
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.PreviewElementImplementationFactory">
            <summary>
            Uses the value inserted to the <see cref="T:Atom.Windows.Controls.BaseInputContainer"/> to create a preview element for it
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.InputsContainer">
            <summary>
            The items control that contains the input controls
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.AddButton">
            <summary>
            The add button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.TitleStackPanel">
            <summary>
            The stack panel that contains the <see cref="P:Atom.Windows.Controls.BaseFormInput.TitleTextBlock"/> and the <see cref="P:Atom.Windows.Controls.BaseFormInput.RequiredIndicatorTextBlock"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.TitleTextBlock">
            <summary>
            The title text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.RequiredIndicatorTextBlock">
            <summary>
            The required indicator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.DescriptionTextBlock">
            <summary>
            The description text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.ErrorTextBlock">
            <summary>
            The error text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInput.Title"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.Description">
            <summary>
            The optional description
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInput.Description"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.IsRequired">
            <summary>
            A flag indicating whether the value of this input is valid or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.IsRequiredProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInput.IsRequired"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.IsReadOnly">
            <summary>
            A flag indicating whether the value of this input can be changed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInput.IsReadOnly"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnIsReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseFormInput.IsReadOnly"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.ValidationErrorMessage">
            <summary>
            The error that is displayed to the user when the validation fails
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.ValidationErrorMessageProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInput.ValidationErrorMessage"/> dependency property
            Localization
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.MultipleValues">
            <summary>
            A flag indicating whether multiple values are allowed to be inserted in the form
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.MultipleValuesProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnMultipleValuesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.Color">
            <summary>
            The color of the texts
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.ColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormInput.Color"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{Atom.Windows.Controls.BaseFormInputContainer})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.SetItemsSource(System.Collections.Generic.IEnumerable{Atom.Windows.Controls.BaseFormInputContainer})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Contains(Atom.Windows.Controls.BaseFormInputContainer)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.BaseFormInput.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.IndexOf(Atom.Windows.Controls.BaseFormInputContainer)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Add(Atom.Windows.Controls.BaseFormInputContainer)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.AddRange(System.Collections.Generic.IEnumerable{Atom.Windows.Controls.BaseFormInputContainer})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Insert(System.Int32,Atom.Windows.Controls.BaseFormInputContainer)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Remove(Atom.Windows.Controls.BaseFormInputContainer)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Replace(Atom.Windows.Controls.BaseFormInputContainer,Atom.Windows.Controls.BaseFormInputContainer)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.Validate">
            <summary>
            Checks if the at least one of the inputs container has a valid value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.SetValues(System.Collections.IEnumerable)">
            <summary>
            Creates and adds an input for each value of the specified <paramref name="values"/>
            that contains the value
            </summary>
            <param name="values">The values</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.GetValues">
            <summary>
            Gets the values from the form input containers.
            NOTE: An enumerable is always returned even if its empty, if the it matches the validation requirements!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.GetContainerValue(Atom.Windows.Controls.BaseFormInputContainer,System.Object@)">
            <summary>
            Attempts to get the value of the container, if it's valid
            </summary>
            <param name="container">The container</param>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.ClearValues">
            <summary>
            Clears the values of its containers
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.InitializationHandler">
            <summary>
            A custom initialization handler
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.CreateInputsContainer">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseFormInput.InputsContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.CreateDefaultPreviewElement(System.Object)">
            <summary>
            Creates and returns the preview element that will be used by the <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/>s
            when the <see cref="P:Atom.Windows.Controls.BaseFormInput.PreviewElementImplementationFactory"/> is set to <see cref="!:null"/>!
            </summary>
            <param name="value">The value of the input container</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.IsInputContainerDeletionAllowed">
            <summary>
            Determines whether the deletion of input containers is allowed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnMultipleValuesChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnIsReadOnlyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseFormInput.IsReadOnly"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnValuesChanged(Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs)">
            <summary>
            Handles the change of the value of a form input container
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.CreateInputContainerCore(System.Object)">
            <summary>
            Creates and returns an input container internally
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.SubscribeToEventHandlers(Atom.Windows.Controls.BaseFormInputContainer)">
            <summary>
            Subscribe to the require events of the <paramref name="container"/>
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.UnsubscribeFromEventHandlers(Atom.Windows.Controls.BaseFormInputContainer)">
            <summary>
            Unsubscribes from the required events of the <paramref name="container"/>
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnMultipleValuesChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> property internally
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnIsReadOnlyChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseFormInput.IsReadOnly"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.InputFormContainer_ValueChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the value of an <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/>
            </summary>
            <param name="sender">The container</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.DeletionStateHandler">
            <summary>
            Updates the existing input containers with the value provided by the <see cref="M:Atom.Windows.Controls.BaseFormInput.IsInputContainerDeletionAllowed"/> method
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput.OnValuesChangedCore(Atom.Windows.Controls.DataFormFormInputValueChangedEventArgs)">
            <summary>
            Handles the change of the value of a form input container internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseFormInput.ValuesChanged">
            <summary>
            Event that fires every time one or more input containers changes it value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormInput.IsReadOnlyChanged">
            <summary>
            Events that fires every time the <see cref="P:Atom.Windows.Controls.BaseFormInput.IsReadOnly"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput"/> that contains <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/>s that contains values of type <typeparamref name="TValue"/>
            </summary>
            <typeparam name="TValue">The type of values that the input containers contain</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInput`1.PreviewElementImplementationFactory">
            <summary>
            Uses the value inserted to the <see cref="T:Atom.Windows.Controls.BaseInputContainer"/> to create a preview element for it
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput`1.GetValues">
            <summary>
            Gets the values from the form input containers.
            NOTE: An enumerable is always returned even if its empty, if the it matches the validation requirements!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput`1.GetValuesCore">
            <summary>
            Returns an enumerable that contains the values of the inputs of type <typeparamref name="TValue"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput`1.CreateDefaultPreviewElement(System.Object)">
            <summary>
            Creates and returns the preview element that will be used by the <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/>s
            when the <see cref="P:Atom.Windows.Controls.BaseFormInput.PreviewElementImplementationFactory"/> is set to <see cref="!:null"/>!
            </summary>
            <param name="value">The value of the input container</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInput`1.CreateDefaultPreviewElementCore(`0)">
            <summary>
            Creates and returns the preview element that will be used by the <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/>s
            when the <see cref="P:Atom.Windows.Controls.BaseFormInput.PreviewElementImplementationFactory"/> is set to <see cref="!:null"/>!
            </summary>
            <param name="value">The value of the input container</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseOptionsFormInput`1">
            <summary>
            The base for all the option form inputs
            </summary>
            <typeparam name="TOption">The type of the option</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionsFormInput`1.Options">
            <summary>
            The available options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MinimumNumberOfRequiredSelections">
            <summary>
            The number of minimum selections required in order for the input to be valid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseOptionsFormInput`1.MinimumNumberOfRequiredSelectionsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MinimumNumberOfRequiredSelections"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MaximumNumberOfSelections">
            <summary>
            The number of maximum selections in order for the input to be valid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseOptionsFormInput`1.MaximumNumberOfSelectionsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseOptionsFormInput`1.MaximumNumberOfSelections"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionsFormInput`1.Translator">
            <summary>
            The optional translator
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="options">The available options</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.SetOptions(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets a new set of options.
            NOTE: Any previously valid options will be kept!
            </summary>
            <param name="options">The options to set</param>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOptionsFormInput`1.SelectionsCount">
            <summary>
            The number of selections
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.Validate">
            <summary>
            Checks if the at least one of the inputs container has a valid value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.GetValues">
            <summary>
            Gets the values from the form input containers.
            NOTE: An enumerable is always returned even if its empty, if the it matches the validation requirements!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.InitializationHandler">
            <summary>
            A custom initialization handler
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.CreateInputContainerCore(`0)">
            <summary>
            Creates and returns the input element container of type <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainer`1"/>
            </summary>
            <param name="option">The option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.IsInputContainerDeletionAllowed">
            <summary>
            Determines whether the deletion of input containers is allowed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOptionsFormInput`1.OnMultipleValuesChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StandardOptionsFormInput`1">
            <summary>
            The base for all the standard option form inputs
            </summary>
            <typeparam name="TOption">The type of the option</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StandardOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="options">The available options</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardOptionsFormInput`1.SetValues(System.Collections.IEnumerable)">
            <summary>
            Creates and adds an input for each value of the specified <paramref name="values"/>
            that contains the value
            </summary>
            <param name="values">The values</param>
        </member>
        <member name="T:Atom.Windows.Controls.EnumOptionsFormInput`1">
            <summary>
            The base for all the enum option form inputs
            </summary>
            <typeparam name="TEnumValue">The type of the enum value</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.EnumOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.EnumOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="availableOptions">The available options</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.EnumOptionsFormInput`1.SetValues(System.Collections.IEnumerable)">
            <summary>
            Creates and adds an input for each value of the specified <paramref name="values"/>
            that contains the value
            </summary>
            <param name="values">The values</param>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBoxFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.CheckBoxFormInputContainer"/>s
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBoxFormInput.CheckBoxText">
            <summary>
            The text of the check box
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Default constructor
            Localization
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="checkBoxText">The text of the check box</param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ColorFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.ColorFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StringColorFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.StringColorFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringColorFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringColorFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DateTimeFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.DateTimeFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDateTimeFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableDateTimeFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DateTimeOffsetFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.DateTimeOffsetFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeOffsetFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateTimeOffsetFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDateTimeOffsetFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableDateTimeOffsetFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeOffsetFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDateTimeOffsetFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DaySpanInputFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput"/> that contains multiple <see cref="T:Atom.Windows.Controls.DaySpanInputFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInputFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInputFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DirectoryInputFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.DirectoryInputFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.FileInputFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.FileInputFormInputContainer"/>s
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FileInputFormInput.Configure">
            <summary>
            The open file dialog configuration action
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Microsoft.Win32.OpenFileDialog})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">The open file dialog configuration action</param>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StringFileInputFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.StringFileInputFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringFileInputFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Microsoft.Win32.OpenFileDialog})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">The open file dialog configuration action</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringFileInputFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.IconInputFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.IconInputFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconInputFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.IconInputFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseImageFileInputFormInput`1">
            <summary>
            The base for all the image file input form inputs
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageFileInputFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="T:Atom.Windows.Controls.IFormFileImageFileFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseImageFileInputFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.IFormFileImageFileInputFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IFormFileImageFileFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.IFormFileImageFileFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StringImageFileFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseImageFileInputFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.StringImageFileInputFromInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringImageFileFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringImageFileFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.UriImageFileFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseImageFileInputFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.UriImageFileInputFromInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UriImageFileFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.UriImageFileFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ImageFromLinkFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.ImageFromLinkFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageFromLinkFormInput.CreateDefaultPreviewElementCore(System.Uri)">
            <summary>
            Creates and returns the preview element that will be used by the <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/>s
            when the <see cref="P:Atom.Windows.Controls.BaseFormInput.PreviewElementImplementationFactory"/> is set to <see cref="!:null"/>!
            </summary>
            <param name="value">The value of the input container</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NamedFileInputFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.NamedFileInputFormInputContainer"/>s
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NamedFileInputFormInput.Configure">
            <summary>
            The open file dialog configuration action
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Microsoft.Win32.OpenFileDialog})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure"></param>
        </member>
        <member name="M:Atom.Windows.Controls.NamedFileInputFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInputContainer`1"/>s
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1.Configure">
            <summary>
            The open file dialog configuration action
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1.Options">
            <summary>
            The items to select from
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1.CustomFileNameSelector">
            <summary>
            Selector that returns the value that will be set to the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1.Comparer">
            <summary>
            Compares the inserted item and the inserted string in order to set a selected item in the drop down when 
            the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property gets set externally
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1.IconPathDataSelector">
            <summary>
            Selector that returns the path data of the icon that will be set to the button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Microsoft.Win32.OpenFileDialog},System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String,System.Boolean})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">The open file dialog configuration action</param>
            <param name="options">The items to select form</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="customFileNameSelector">Selector that returns the value that will be set to the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property</param>
            <param name="comparer">
            Compares the inserted item and the inserted string in order to set a selected item in the drop down when 
            the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property gets set externally
            </param>
            <param name="iconPathDataSelector">Selector that returns the path data of the icon that will be set to the button</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedFileInputFormInput`1.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseNumericFormInput`2">
            <summary>
            The base for all the numeric form inputs
            </summary>
            <typeparam name="TFormInputContainer">The type of the form input container</typeparam>
            <typeparam name="TValue">The type of the value</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseNumericFormInput`2.Configure">
            <summary>
            Action that configures the numeric input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInput`2.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInput`2.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNumericFormInput`2.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <typeparamref name="TFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ByteNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.ByteNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ByteNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.ByteNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableByteNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableByteNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DecimalNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.DecimalNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDecimalNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableDecimalNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DoubleNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.DoubleNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDoubleNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableDoubleNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.FloatNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.FloatNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FloatNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.FloatNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableFloatNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableFloatNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IntegerNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.IntegerNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableIntegerNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableIntegerNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.LongNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.LongNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.LongNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableLongNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableLongNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SByteNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.SByteNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SByteNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.SByteNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableSByteNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableSByteNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ShortNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.ShortNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableShortNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableShortNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedIntegerNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.UnsignedIntegerNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedLongNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.UnsignedLongNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedLongNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableUnsignedLongNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedShortNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.UnsignedShortNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedShortNumericFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNumericFormInput`2"/> that contains multiple <see cref="T:Atom.Windows.Controls.NullableUnsignedShortNumericFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortNumericFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="configure">Action that configures the numeric input</param>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortNumericFormInput.CreateFormInputContainerCore(System.Action{Atom.Windows.Controls.NumericInput})">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NumericRangeInputFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.NumericRangeInputFormInputContainer`1"/>
            </summary>
            <typeparam name="T">The type of the numeric values</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInputFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInputFormInput`1.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBoxOptionsFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardOptionsFormInput`1"/> that uses <see cref="T:Atom.Windows.Controls.CheckBoxOptionFormInputContainer`1"/> as its
            form input containers
            </summary>
            <typeparam name="TOption">The type of the options</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="availableOptions">The available options</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxOptionsFormInput`1.CreateInputContainerCore(`0)">
            <summary>
            Creates and returns the input element container of type <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainer`1"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBoxEnumOptionsFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.EnumOptionsFormInput`1"/> that uses <see cref="T:Atom.Windows.Controls.CheckBoxOptionFormInputContainer`1"/> as its
            form input containers
            </summary>
            <typeparam name="TEnumValue">The type of the enum</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxEnumOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxEnumOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="availableOptions">The available options</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxEnumOptionsFormInput`1.CreateInputContainerCore(`0)">
            <summary>
            Creates and returns the input element container of type <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainer`1"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenuOptionsFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseOptionsFormInput`1"/> that uses a <see cref="T:Atom.Windows.Controls.DropDown`1"/> to present its options
            </summary>
            <typeparam name="TOption">The user a drop down to present its items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuOptionsFormInput`1.InputsContainer">
            <summary>
            The items control that contains the input controls
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="options">The available options</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuOptionsFormInput`1.CreateInputContainerCore(`0)">
            <summary>
            Creates and returns the input element container of type <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainer`1"/>
            </summary>
            <param name="option">The option</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuOptionsFormInput`1.CreateInputsContainer">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseFormInput.InputsContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenuEnumOptionsFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.EnumOptionsFormInput`1"/> that uses <see cref="T:Atom.Windows.Controls.CheckBoxOptionFormInputContainer`1"/> as its
            form input containers
            </summary>
            <typeparam name="TEnumValue">The type of the enum</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuEnumOptionsFormInput`1.InputsContainer">
            <summary>
            The items control that contains the input controls
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuEnumOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuEnumOptionsFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="availableOptions">The available options</param>
            <param name="translator">The optional translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuEnumOptionsFormInput`1.CreateInputsContainer">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseFormInput.InputsContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuEnumOptionsFormInput`1.CreateInputContainerCore(`0)">
            <summary>
            Creates and returns the input element container of type <see cref="T:Atom.Windows.Controls.BaseOptionFormInputContainer`1"/>
            </summary>
            <param name="option">The option</param>
        </member>
        <member name="T:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseOptionsFormInput`1"/> that uses a <see cref="T:Atom.Windows.Controls.TextDropDown`1"/> to present its options.
            NOTE: This form input should be used only for <see cref="T:System.String"/> properties since it always returns a <see cref="T:System.Collections.Generic.List`1"/> of
                  <see cref="T:System.String"/>s that always contains one item!
            NOTE: This form shouldn't be used for <see cref="!:IEnumerable&lt;string&gt;"/> properties!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.mAvailableOptions">
            <summary>
            The available options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.InputsContainer">
            <summary>
            The items control that contains the input controls
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="availableOptions">The available options</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.GetValues">
            <summary>
            Gets the values from the form input containers.
            NOTE: An enumerable is always returned even if its empty, if the it matches the validation requirements!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.SetValues(System.Collections.IEnumerable)">
            <summary>
            Selects all the input containers whose text is contained in the string
            value contained in the <paramref name="values"/>
            </summary>
            <param name="values">The values that only contain a string value</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.Validate">
            <summary>
            Checks if the inserted value is valid
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.InitializationHandler">
            <summary>
            A custom initialization handler
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.CreateInputsContainer">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseFormInput.InputsContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDownMenuOptionsFormInput.IsInputContainerDeletionAllowed">
            <summary>
            Determines whether the deletion of input containers is allowed
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BasePasswordFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.BasePasswordFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePasswordFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePasswordFormInput`1.CreateDefaultPreviewElementCore(`0)">
            <summary>
            Creates and returns the preview element that will be used by the <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/>s
            when the <see cref="P:Atom.Windows.Controls.BaseFormInput.PreviewElementImplementationFactory"/> is set to <see cref="!:null"/>!
            </summary>
            <param name="value">The value of the input container</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StringPasswordFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePasswordFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.StringPasswordFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringPasswordFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringPasswordFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.SecureStringPasswordFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePasswordFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.SecureStringPasswordFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringPasswordFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringPasswordFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseRegisterPasswordFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.BaseRegisterPasswordFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseRegisterPasswordFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseRegisterPasswordFormInput`1.CreateDefaultPreviewElementCore(`0)">
            <summary>
            Creates and returns the preview element that will be used by the <see cref="T:Atom.Windows.Controls.BaseFormInputContainer"/>s
            when the <see cref="P:Atom.Windows.Controls.BaseFormInput.PreviewElementImplementationFactory"/> is set to <see cref="!:null"/>!
            </summary>
            <param name="value">The value of the input container</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StringRegisterPasswordFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseRegisterPasswordFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.StringPasswordFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StringRegisterPasswordFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.StringRegisterPasswordFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.SecureStringRegisterPasswordFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseRegisterPasswordFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.SecureStringPasswordFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringRegisterPasswordFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.SecureStringRegisterPasswordFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.PhoneFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.PhoneFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.PricingOptionFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.PricingOptionFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionFormInput.CreateInputsContainer">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseFormInput.InputsContainer"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PropertyPathNodeComponentFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput"/> that contains multiple <see cref="T:Atom.Windows.Controls.PropertyPathNodeComponentFormInputContainer"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponentFormInput.Type">
            <summary>
            The type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponentFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Type)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="type">The type</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponentFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseSearchFormInput`4">
            <summary>
            The base for all the search form inputs
            </summary>
            <typeparam name="TSearchFormInputContainer">The type of the search form input container</typeparam>
            <typeparam name="TSearchMenuInput">The type of the menu search input</typeparam>
            <typeparam name="TItem">The type of the items</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInput`4.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInput`4.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchFormInput`4.CreateInputContainerCore(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ImageSearchFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSearchFormInput`4"/> that contains multiple <see cref="T:Atom.Windows.Controls.ImageSearchFormInputContainer`1"/>s
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchFormInput`1.DataRetriever">
            <summary>
            The data retriever
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchFormInput`1.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchFormInput`1.IconPathDataSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchFormInput`1.ImageSourceSelector">
            <summary>
            The selector responsible for extracting an <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageSearchFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageSearchFormInput`1.CreateInputContainerCore(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.SearchFormInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSearchFormInput`4"/> that contains multiple <see cref="T:Atom.Windows.Controls.SearchFormInputContainer`1"/>s
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.SearchFormInput`1.DataRetriever">
            <summary>
            The data retriever
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchFormInput`1.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchFormInput`1.IconPathDataSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchFormInput`1.CreateInputContainerCore(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ShortcodesTextInputFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.ShortcodesTextInputFormInputContainer"/>s
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputFormInput.Shortcodes">
            <summary>
            The shortcodes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
            <param name="shortcodes">The shortcodes</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ByteFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.ByteFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ByteFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ByteFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableByteFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableByteFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableByteFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.CharFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.CharFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CharFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CharFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableCharFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.CharFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableCharFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableCharFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DecimalFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.DecimalFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DecimalFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDecimalFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableDecimalFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDecimalFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DoubleFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.DoubleFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DoubleFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableDoubleFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableDoubleFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableDoubleFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.EmailFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.EmailFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.EmailFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.EmailFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.FloatFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.FloatFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FloatFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FloatFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableFloatFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableFloatFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableFloatFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.IntegerFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.IntegerFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IntegerFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableIntegerFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableIntegerFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableIntegerFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.LongFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.LongFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableLongFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableIntegerFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableLongFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.PhoneTextFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.PhoneTextFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneTextFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneTextFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.SByteFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.SByteFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SByteFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SByteFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableSByteFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableSByteFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableSByteFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ShortFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.ShortFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableShortFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableShortFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableShortFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.TextFormInput`1">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.TextFormInputContainer"/>s
            </summary>
            <typeparam name="TValue">The type of the value</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.TextFormInput`1.mHint">
            <summary>
            The custom hint
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextFormInput`1.mFormatter">
            <summary>
            The custom formatter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInput`1.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInput`1.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.TextFormInput">
            <summary>
             A form input that can host multiple <see cref="T:Atom.Windows.Controls.TextFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedIntegerFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.UnsignedIntegerFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedIntegerFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedIntegerFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.NullableUnsignedIntegerFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedIntegerFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedLongFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.UnsignedLongFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedLongFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedLongFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.UnsignedLongFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedLongFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.UnsignedShortFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.UnsignedShortFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UnsignedShortFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.NullableUnsignedShortFormInput">
            <summary>
            A form input that can host multiple <see cref="T:Atom.Windows.Controls.UnsignedShortFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo,System.String,System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NullableUnsignedShortFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.UriFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.UriFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UriFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.UriFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.VersionFormInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseFormInput`1"/> that contains multiple <see cref="T:Atom.Windows.Controls.VersionFormInputContainer"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VersionFormInput.#ctor(Atom.Windows.Controls.IDataForm,System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="form">The form that contains the form input</param>
            <param name="propertyInfo">The property info of the property that the form manipulates</param>
        </member>
        <member name="M:Atom.Windows.Controls.VersionFormInput.CreateInputContainer(System.Object)">
            <summary>
            Creates and returns the input element container
            </summary>
            <param name="args">The creation args</param>
        </member>
        <member name="T:Atom.Windows.Controls.PreviewElementCreationPropertyMap">
            <summary>
            Maps a property to a <see cref="P:Atom.Windows.Controls.PreviewElementCreationPropertyMap.PreviewElementImplementationFactory"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PreviewElementCreationPropertyMap.PreviewElementImplementationFactory">
            <summary>
            The preview element implementation factory
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PreviewElementCreationPropertyMap.#ctor(System.Reflection.PropertyInfo,System.Func{System.Object,System.Windows.FrameworkElement})">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="previewElementImplementationFactory">The preview element implementation factory</param>
        </member>
        <member name="T:Atom.Windows.Controls.DataPresenterContainer`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseItemsControl`1"/> that presents data using multiple <see cref="T:Atom.Windows.Controls.BaseDataPresenter`3"/>s
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <typeparam name="TDataPresenter">The type of the data presenter</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.PresentationMode">
            <summary>
            The presentation mode
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.Translator">
            <summary>
            The translator used for translating the values for the default UI elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.Mapper">
            <summary>
            If the mapper is set, then when a title isn't specified for a column
            then the title is retrieved using the mapper.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.PresentersSource">
            <summary>
            The source of the available presenters
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataPresenterContainer`2.PresentersSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.PresentersSource"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter">
            <summary>
            The current presenter
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.#ctor(`1[])">
            <summary>
            Default constructor
            </summary>
            <param name="presenters">The starting presenter</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.Update">
            <summary>
            Updates the container
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.Update(`0)">
            <summary>
            Updates the specified <paramref name="model"/> on the current presenter
            </summary>
            <param name="model">The model to update</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.Update(`0,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="model">The model</param>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.UnsafeUpdate(`0,System.Reflection.PropertyInfo)">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="model">The model</param>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.Update(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Updates the elements of the components of the presenter related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.UnsafeUpdate(System.Reflection.PropertyInfo)">
            <summary>
            Updates the elements of the components of the presenter related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.IsDataShown(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Checks whether the data of the property that is selected by the specified <paramref name="propertySelector"/>
            is shown
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.UnsafeIsDataShown(System.Reflection.PropertyInfo)">
            <summary>
            Checks whether the data of the specified <paramref name="propertyInfo"/> is shown.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.ShowData``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>
            Shows the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.UnsafeShowData(System.Reflection.PropertyInfo,System.String,System.Object,System.Boolean)">
            <summary>
            Shows the data of the <typeparamref name="TClass"/> of the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="columnTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.HideData(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Hides the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.UnsafeHideData(System.Reflection.PropertyInfo)">
            <summary>
            Hides the data of the <typeparamref name="TClass"/> of the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.HideAllData">
            <summary>
            Hides all the shown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.Atom#Windows#Controls#IDataPresenter#UnsafeSetCustomUIElement``1(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.IDataPresenter,System.Object,``0},System.Action{Atom.Windows.Controls.IDataPresenter,System.Object,``0})">
            <summary>
            Sets a custom ui element for the component that presents the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <typeparam name="TElement">The type of the element that is created</typeparam>
            <param name="propertyInfo">The property info</param>
            <param name="uiElementImplementationFactory">The element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.ShowFormulaData(Atom.Core.Formula)">
            <summary>
            Shows the formula data related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.HideFormulaData(Atom.Core.Formula)">
            <summary>
            Hides all the data related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula"></param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.HideFormulaData(System.String)">
            <summary>
            Hides all the data related to the formula with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.Presenters">
            <summary>
            All the available presenters
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.IndexOfCurrentPresenter">
            <summary>
            Gets the index of the current presenter in the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.PresentersSource"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.GetPresenter(System.Int32)">
            <summary>
            Gets the presenter at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the presenter we want to get</param>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.DataPresenterContainer`2.PresentersCount">
            <summary>
            Gets the number of presenters
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.AddPresenter(`1)">
            <summary>
            Adds a presenter and sets it as the current presenter if no other presenter was set
            </summary>
            <param name="presenter">The presenter to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.RemovePresenter(`1)">
            <summary>
            Removes the specified <paramref name="presenter"/> and clears the presented data
            if this was the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/>
            </summary>
            <param name="presenter">The presenter to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.SetPresenter(`1)">
            <summary>
            Sets the specified <paramref name="presenter"/> as the current presenter
            and adds it to the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.PresentersSource"/> if it's not already in
            </summary>
            <param name="presenter">The presenter to set as the current presenter</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.SetPresenter(System.Int32)">
            <summary>
            Sets the presenter at the specified <paramref name="index"/> as the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/>
            </summary>
            <param name="index">The index of the presenter we want to set as the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.GetComponent(`0)">
            <summary>
            Gets the component associated with the specified <paramref name="model"/>
            </summary>
            <param name="model">The model whose associated component we want to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.Atom#Windows#Controls#IDataPresenter#SetOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton,Atom.Windows.Controls.IDataPresenter,System.Object},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Sets a new custom option
            </summary>
            <param name="id">The id of the option</param>
            <param name="optionAction">The action that is related with the option</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.DisableOption(System.String)">
            <summary>
            Disable the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.EnableOption(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.RemoveOption(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0})">
            <summary>
            Handles the disposal of all items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.OnCurrentPresenterChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`2.OnCurrentPresenterChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/> property.
            NOTE: This method must always be run and runs before the virtual method: <see cref="M:Atom.Windows.Controls.DataPresenterContainer`2.OnCurrentPresenterChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenterChangeInitialized">
            <summary>
            Event that fires just before the change of the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/> property
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenterChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.DataPresenterContainer`2.CurrentPresenter"/> changes.
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DataPresenterContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseItemsControl`1"/> that presents the data based on custom configurations
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DataPresenterContainer`1.#ctor(Atom.Windows.Controls.IDataPresenter{`0}[])">
            <summary>
            Default constructor
            </summary>
            <param name="presenters">The starting presenter</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseTitle">
            <summary>
            The base for all the titles
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTitle.Data">
            <summary>
            The data related to this title
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTitle.ShortIndicatorIcon">
            <summary>
            The indicator that indicates whether the list is sorted base on the values of the column that this column title represents
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTitle.IsSorted">
            <summary>
            If true, then the column is sorted, otherwise it's not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTitle.IsSortedProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTitle.IsSorted"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.IsSortedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseTitle.IsSorted"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTitle.SortingDirection">
            <summary>
            The direction that the column is sorted
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTitle.SortingDirectionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTitle.SortingDirection"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.SortingDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseTitle.SortingDirection"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.#ctor(Atom.Core.INameable)">
            <summary>
            Default constructor
            </summary>
            <param name="data">The data related to this title</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.CreateFirstContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the first content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.CreateSecondContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the second content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.CreateFirstContentElement">
            <summary>
            Creates and returns the first control element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.CreateSecondContentElement">
            <summary>
            Creates and returns the second control element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.OnCommandChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BackgroundControl.Command"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.OnIsEnabledChange(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:System.Windows.UIElement.IsEnabled"/> property
            </summary>
            <param name="e">DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.OnIsSortedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseTitle.IsSorted"/> property
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.OnSortingDirectionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseTitle.SortingDirection"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTitle.OnSortingDirectionChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseTitle.SortingDirection"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.Title">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseTitle"/> that's related to a <see cref="T:Atom.Core.TitleData"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Title.Data">
            <summary>
            The data related to the title
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Title.#ctor(Atom.Core.TitleData)">
            <summary>
            Default constructor
            </summary>
            <param name="data">The data related to this title</param>
        </member>
        <member name="T:Atom.Windows.Controls.FormulaTitle">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseTitle"/> that's related to a <see cref="T:Atom.Core.Formula"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FormulaTitle.Data">
            <summary>
            The data related to the title
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FormulaTitle.#ctor(Atom.Core.Formula)">
            <summary>
            Default constructor
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="T:Atom.Windows.Controls.PresentationModeDataModel">
            <summary>
            Represents a presentation mode
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PresentationModeDataModel.PresentationModeName">
            <summary>
            The name of the presentation mode
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PresentationModeDataModel.#ctor(System.String,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="id">The unique identifier of the model</param>
            <param name="presentationModeName">The name of the presentation mode</param>
        </member>
        <member name="M:Atom.Windows.Controls.PresentationModeDataModel.#ctor(System.Object,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="id">The unique identifier of the model</param>
            <param name="presentationModeName">The name of the presentation mode</param>
        </member>
        <member name="M:Atom.Windows.Controls.PresentationModeDataModel.#ctor(System.Int32,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="id">The unique identifier of the model</param>
            <param name="presentationModeName">The name of the presentation mode</param>
        </member>
        <member name="T:Atom.Windows.Controls.DataGridPresentationMode">
            <summary>
            A <see cref="T:Atom.Windows.Controls.PresentationModeDataModel"/> for a data grid
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridPresentationMode.#ctor">
            <summary>
            Localization
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TilesPresentationMode">
            <summary>
            A <see cref="T:Atom.Windows.Controls.PresentationModeDataModel"/> for a tiles presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresentationMode.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDataComponent`1">
            <summary>
            The base for all the data components
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataComponent`1.mElementsMapper">
            <summary>
            Maps every the <see cref="T:Atom.Core.TitleData"/> with its related element
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataComponent`1.mFormulaElementsMapper">
            <summary>
            Maps every the <see cref="T:Atom.Core.Formula"/> with its related <see cref="T:System.Windows.Controls.TextBlock"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataComponent`1.mOptionsMapper">
            <summary>
            Maps every option button with the action that updates it
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataComponent`1.Model">
            <summary>
            The model that the row represents
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataComponent`1.UpdatersMapper">
            <summary>
            Mapper that maps properties with the custom ui element updaters of the elements that present the data of these properties
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.#ctor(`0)">
            <summary>
            Default constructor
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataComponent`1.Data">
            <summary>
            The data that is contained in the component
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.PresentsTitleElement(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Checks whether the elements that presents the data of the property selected by the specified <paramref name="propertySelector"/> is
            currently being presented
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.PresentsTitleElement(System.Reflection.PropertyInfo)">
            <summary>
            Checks whether the elements that presents the data of the specified <paramref name="propertyInfo"/>
            currently being presented
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.PresentsTitleElement(Atom.Core.TitleData)">
            <summary>
            Checks whether the elements that presents the data of the specified <paramref name="titleData"/>
            currently being presented
            </summary>
            <param name="titleData">The title data</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.GetTitleElement(Atom.Core.TitleData)">
            <summary>
            Gets the <see cref="T:System.Windows.UIElement"/> related to the specified <paramref name="titleData"/>
            </summary>
            <param name="titleData">The title data whose associated element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.AddTitleElement(System.Object,Atom.Core.TitleData,System.Action{`0,System.Windows.UIElement})">
            <summary>
            Adds the specified <paramref name="obj"/> to the component.
            NOTE: If the <paramref name="obj"/> is a <see cref="T:System.Windows.UIElement"/>
                  will get added as is, otherwise the <see cref="T:System.Object"/> will get converted to 
                  a <see cref="T:System.String"/> using the <see cref="M:System.Object.ToString"/> method and 
                  then get added as a <see cref="T:System.Windows.Controls.TextBlock"/>!
            </summary>
            <param name="obj">The object to add</param>
            <param name="titleData">The title data related to the property whose translated value is the <paramref name="obj"/></param>
            <param name="updater">The updater</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.ReplaceTitleElement(System.Object,Atom.Core.TitleData,System.Action{`0,System.Windows.UIElement})">
            <summary>
            Replaces the element that is currently presented by the specified <paramref name="titleData"/> with the 
            element that represents the specified <paramref name="obj"/>.
            NOTE: The title related to the specified <paramref name="titleData"/> must be currently presented!
            NOTE: If the title related to the specified <paramref name="titleData"/> isn't presented then the
                  <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.AddTitleElement(System.Object,Atom.Core.TitleData,System.Action{`0,System.Windows.UIElement})"/> 
                  must be used!
            </summary>
            <param name="obj">The object to add</param>
            <param name="titleData">The title data related to the property whose translated value is the <paramref name="obj"/></param>
            <param name="updater">The updater</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.AddTitleElement(System.String,Atom.Core.TitleData)">
            <summary>
            Adds the specified <paramref name="text"/> to the component
            </summary>
            <param name="text">The text to add</param>
            <param name="titleData">The title data associated with the property whose translated value is the <paramref name="text"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.AddTitleElement(System.Windows.UIElement,Atom.Core.TitleData)">
            <summary>
            Adds the specified <paramref name="element"/> to the component
            </summary>
            <param name="element">The element to add</param>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.RemoveTitleElement(Atom.Core.TitleData)">
            <summary>
            Removes all the elements associated with the presentation of the values of the
            <see cref="P:Atom.Core.TitleData.Property"/> of the specified <paramref name="titleData"/>
            </summary>
            <param name="titleData"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.UpdateTitleElement(Atom.Core.TitleData,System.Object)">
            <summary>
            Updates the specified the element related to the specified <paramref name="titleData"/> with the specified <paramref name="value"/>
            </summary>
            <param name="titleData">The title data</param>
            <param name="value">The value to set to the element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.GetFormulaTitleElement(Atom.Core.Formula)">
            <summary>
            Gets the <see cref="T:System.Windows.Controls.TextBlock"/> related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.AddFormulaTitleElement(Atom.Core.Formula)">
            <summary>
            Creates and adds a <see cref="T:System.Windows.Controls.TextBlock"/> responsible for presenting the actual value of the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.RemoveFormulaTitleElement(Atom.Core.Formula)">
            <summary>
            Removes the <see cref="T:System.Windows.Controls.TextBlock"/> that responsible for presenting the actual value of the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.UpdateFormulaTitleElement(Atom.Core.Formula)">
            <summary>
            Updates the text of the <see cref="T:System.Windows.Controls.TextBlock"/> responsible for presenting the actual value of the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.GetOptions">
            <summary>
            Gets all the registered options
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataComponent`1.OptionsCount">
            <summary>
            Gets the number of available options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataComponent`1.HasOptions">
            <summary>
            Returns a flag indicating if the current component has any options
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.AddOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.Action{Atom.Windows.Controls.IOptionButton},System.String)">
            <summary>
            Adds an option
            </summary>
            <param name="id">The id of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="updater">The action responsible for updating the button</param>
            <param name="info">The information related with the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.GetOption(System.String)">
            <summary>
            Gets the option with the specified <paramref name="id"/>
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.DisableOption(System.String)">
            <summary>
            Disables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.EnableOption(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.RemoveOption(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.AddTitleElementCore(System.Windows.UIElement)">
            <summary>
            Adds the specified title element to the component
            </summary>
            <param name="element">The element to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.RemoveTitleElementCore(System.Windows.UIElement)">
            <summary>
            Removes the specified title <paramref name="element"/> from the data component internally
            </summary>
            <param name="element">The element to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.ReplaceTitleElementCore(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Replaces the <paramref name="oldElement"/> with the <paramref name="newElement"/>
            </summary>
            <param name="newElement">The new element</param>
            <param name="oldElement">The old element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.CreateStandardTitleUIElement(System.String,Atom.Core.TitleData)">
            <summary>
            Creates the standard data presentation ui element
            </summary>
            <param name="text">The text that should get presented</param>
            <param name="titleData">The title data associated with the property whose translated value is the <paramref name="text"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.UpdateTitleElementDataCore(System.Windows.UIElement,System.Object)">
            <summary>
            Updates the specified <paramref name="element"/> with the specified <paramref name="value"/> internally
            </summary>
            <param name="element">The element to update</param>
            <param name="value">The value to set to the element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.AddFormulaTitleElementCore(System.Windows.Controls.TextBlock)">
            <summary>
            Adds the specified formula title textblock to the component.
            NOTE: By default this method uses the <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.AddTitleElementCore(System.Windows.UIElement)"/> method!
            </summary>
            <param name="textBlock">The textblock</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.RemoveFormulaTitleElementCore(System.Windows.Controls.TextBlock)">
            <summary>
            Removes the specified formula title textblock from the component.
            NOTE: By default this method used the <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.RemoveTitleElementCore(System.Windows.UIElement)"/> method!
            </summary>
            <param name="textBlock">The textblock</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.OnBackColorChangedCore">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnBackColorChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> and the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnBackColorChangedCore"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.BackgroundControl.BackColor"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.OnForeColorChangedCore">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.ForegroundControl.OnForeColorChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> and the <see cref="M:Atom.Windows.Controls.ForegroundControl.OnAutoSetStateForeColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.ForegroundControl.ForeColor"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.AddOptionCore(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.Action{Atom.Windows.Controls.IOptionButton},System.String)">
            <summary>
            Adds an option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="info">The information related with the option</param>
            <param name="updater">The action responsible for updating the button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.DisableOptionCore(System.String)">
            <summary>
            Disables the option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.EnableOptionCore(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.RemoveOptionCore(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.OnOptionAdded(System.String)">
            <summary>
            Handles the addition of an option
            </summary>
            <param name="id">The id of the affected option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.OnOptionRemoved(System.String)">
            <summary>
            Handles the removal of an option
            </summary>
            <param name="id">The id of the affected option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.OnOptionEnabled(System.String)">
            <summary>
            Handles the enabling of an option
            </summary>
            <param name="id">The id of the affected option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataComponent`1.OnOptionDisabled(System.String)">
            <summary>
            Handles the disabling of an option
            </summary>
            <param name="id">The id of the affected option</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDataPresenter`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseItemsControl`1"/> used for presenting data
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <typeparam name="TComponent">The type of the component</typeparam>
            <typeparam name="TDataPresenter">The type of the data presenter, used for chaining the configuration methods</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.CustomInputsMargin">
            <summary>
            The margin of the custom input controls
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.mClickEventHandler">
            <summary>
            The click event handler for the ui elements of the <see cref="T:System.Windows.Controls.ItemsControl"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.mClickDateTime">
            <summary>
            The and time the last click occurred
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.mUIElementCreationPropertyMaps">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.UIElementCreationPropertyMaps"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.mOptionMaps">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.OptionMaps"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.mContextMenuImplementationFactory">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ContextMenuImplmenetationFactory"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.mInvalidationTokenSource">
            <summary>
            The invalidation token source used for checking whether an invalidation method should get executed or not.
            NOTE: Examples of invalidation methods: <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.Sort"/>
                  <see cref="M:Atom.Windows.Controls.StandardDataPresenter`3.Filter"/>!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.PresentationMode">
            <summary>
            The presentation mode
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.Translator">
            <summary>
            The translator used for translating the values for the default UI elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.Mapper">
            <summary>
            If the mapper is set, then when a title isn't specified for a column
            then the title is retrieved using the mapper.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.OptionsCount">
            <summary>
            Gets the number of the available options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.HasOptions">
            <summary>
            Returns a flag indicating whether the current presented has any available options or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.TitleInformation">
            <summary>
            Contains both the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.Titles"/> and the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.Formulas"/>.
            NOTE: We use one collection for both the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.Titles"/> and the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.Formulas"/>
                  in order to be able to keep track of order of the registration of the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.Titles"/>
                  and the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.Formulas"/>!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.Titles">
            <summary>
            Contains the data of the titles of the <typeparamref name="TClass"/> the we present
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.Formulas">
            <summary>
            Contains the formulas that are used for presenting custom data
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.UIElementCreationPropertyMaps">
            <summary>
            The custom ui element creation property maps that are used to create custom ui elements for presenting
            the data of specific properties of the <typeparamref name="TClass"/> at the component
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.OptionMaps">
            <summary>
            The maps for the custom options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.DisabledOptionsIds">
            <summary>
            The ids of the options that are disabled
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.SortedCollection">
            <summary>
            The collection of ui elements that gets sorted
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.ContextMenuImplmenetationFactory">
            <summary>
            Implementation factory that creates a context menu for the components
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.DoubleClickCommandExecution">
            <summary>
            A flag indicating whether the click command of the components should get executed when the user double clicks or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.DoubleClickCommandExecutionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.DoubleClickCommandExecution"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnDoubleClickCommandExecutionPropertyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.DoubleClickCommandExecution"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBackColorSetter">
            <summary>
            Delegate that determines the back color of the component based on its index and the model data
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBackColorSetterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBackColorSetter"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnComponentBackColorSetterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBackColorSetter"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentForeColorSetter">
            <summary>
            Delegate that determines the fore color of the component based on its index and the model data
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.ComponentForeColorSetterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentForeColorSetter"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnComponentForeColorSetterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentForeColorSetter"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBorderColorSetter">
            <summary>
            Delegate that determines the border color of the component based on its index and the model data
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBorderColorSetterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBorderColorSetter"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBorderColorSetterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBorderColorSetter"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.#ctor(Atom.Windows.Controls.PresentationModeDataModel)">
            <summary>
            Default constructor
            </summary>
            <param name="presentationMode">The presentation mode</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetComponent(`2)">
            <summary>
            Gets the component associated with the specified <paramref name="model"/>
            </summary>
            <param name="model">The model of the component that we want to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Update">
            <summary>
            Updates all the components
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UpdateComponentColors">
            <summary>
            Updates the colors of all the components
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Update(`2)">
            <summary>
            Updates the presented values of the component related to the specified <paramref name="model"/>
            </summary>
            <param name="model">The model whose element to update its values</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UpdateComponentColors(`2)">
            <summary>
            Updates the colors of the component related to the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Update(`1)">
            <summary>
            Updates the presented values of the specified <paramref name="component"/>
            </summary>
            <param name="component">The component</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Update(`1,System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Updates the element of the specified <paramref name="component"/> related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="component">The component</param>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Update(`2,System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="model">The model</param>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UpdateUnsafe(`1,System.Reflection.PropertyInfo)">
            <summary>
            Updates the element of the specified <paramref name="component"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="component">The component</param>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeUpdate(`2,System.Reflection.PropertyInfo)">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="model">The model</param>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Update(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Updates the elements of the components of the presenter related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeUpdate(System.Reflection.PropertyInfo)">
            <summary>
            Updates the elements of the components of the presenter related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UpdateComponentColors(`1)">
            <summary>
            Updates the colors of the specified <paramref name="component"/>
            </summary>
            <param name="component">The component</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.IsDataShown(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Checks whether the data of the property that is targeted from the <paramref name="propertySelector"/>
            is shown
            </summary>
            <param name="propertySelector">The selector that selects the property of the <typeparamref name="TClass"/> 
            whose values should be checked whether are shown or are hidden</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeIsDataShown(System.Reflection.PropertyInfo)">
            <summary>
            Checks whether the data of the specified <paramref name="propertyInfo"/> is shown.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Invalidate">
            <summary>
            Invalidates the data presenter.
            NOTE: The invalidation refers to actions like shorting and filtering!
            NOTE: This method executes the overridable <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.InvalidateCore"/> method!
            NOTE: This method makes sure that the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.InvalidateCore"/> method is executed once
                  in the case of multiple calls in a sort period of time!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Sort">
            <summary>
            Sorts the items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.ShowData``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.String,System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>
            Shows the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Atom#Windows#Controls#IDataPresenter{TClass}#ShowData``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.String,System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>
            Shows the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>.
            NOTE: This is the explicit implementation of the <see cref="M:Atom.Windows.Controls.IDataPresenter`1.ShowData``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Collections.Generic.IComparer{``0},System.Boolean)"/>
                  method! This is done in order for the chain based method <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.ShowData``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.String,System.Collections.Generic.IComparer{``0},System.Boolean)"/> and this one to co-exist!
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeShowData(System.Reflection.PropertyInfo,System.String,System.Object,System.Boolean)">
            <summary>
            Shows the data of the <typeparamref name="TClass"/> of the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="columnTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.HideData(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Hides the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Atom#Windows#Controls#IDataPresenter{TClass}#HideData(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Hides the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>.
            NOTE: This is the explicit implementation of the <see cref="M:Atom.Windows.Controls.IDataPresenter`1.HideData(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})"/>
                  method! This is done in order for the chain based method <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.HideData(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})"/> and this one to co-exist!
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeHideData(System.Reflection.PropertyInfo)">
            <summary>
            Hides the data of the <typeparamref name="TClass"/> of the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.HideAllData">
            <summary>
            Hides all the shown data.
            NOTE: That includes both the standard titles and data as well as the custom formula data!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetClickCommand(System.EventHandler{`2})">
            <summary>
            Sets the click commands of the <see cref="P:Atom.Windows.Controls.BaseItemsControl`1.Items"/>
            </summary>
            <param name="eventHandler">The event handler that's executed with the command</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetCustomUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Object}},System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})">
            <summary>
            Sets a custom ui element for the component that presents the property that is targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="uiElementImplementationFactory">The element implementation factory</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})">
            <summary>
            Sets a custom ui element for the component that presents the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="uiElementImplementationFactory">The element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetCustomUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,System.Object}},System.Func{`0,`1,`2,``0},System.Action{`0,`1,`2,``0})">
            <summary>
            Sets a custom ui element for the component that presents the property that is targeted by the <paramref name="propertySelector"/>
            </summary>
            <typeparam name="TElement">The type of the element that is created</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="uiElementImplementationFactory">The element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement``1(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,``0},System.Action{`0,`1,`2,``0})">
            <summary>
            Sets a custom ui element for the component that presents the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <typeparam name="TElement">The type of the element that is created</typeparam>
            <param name="propertyInfo">The property info</param>
            <param name="uiElementImplementationFactory">The element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Atom#Windows#Controls#IDataPresenter#UnsafeSetCustomUIElement``1(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.IDataPresenter,System.Object,``0},System.Action{Atom.Windows.Controls.IDataPresenter,System.Object,``0})">
            <summary>
            Sets a custom ui element for the component that presents the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <typeparam name="TElement">The type of the element that is created</typeparam>
            <param name="propertyInfo">The property info</param>
            <param name="uiElementImplementationFactory">The element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetBooleanUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Boolean}},System.String,System.String,System.String,System.String)">
            <summary>
            Sets a custom ui element for the component that presents the specified <see cref="T:System.Boolean"/> property targeted by the specified <paramref name="propertySelector"/>.
            Localization
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="trueText">The text of the element when the flag is set to true</param>
            <param name="falseText">The text of the element when the flag is set to false</param>
            <param name="trueColor">The color of the element when the flag is set to true</param>
            <param name="falseColor">The color of the element when the flag is set to false</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetLabelUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{`2,System.String},System.Func{`2,System.String})">
            <summary>
            Sets a custom ui element for the component that presents the <see cref="!:enum"/> property targeted by the specified <paramref name="propertySelector"/>
            </summary>
            <typeparam name="TKey">The type of the enum property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textSelector">Gets the text of the label</param>
            <param name="colorHexSelector">Gets the hex color value of the label</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetMultipleItemsDialogBasedUIElement``2(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{System.Threading.Tasks.Task{Atom.Windows.Controls.IDataPresenter{``1}}},System.String,System.String,System.String,System.String)">
            <summary>
            Sets a custom ui element for the component that presents the multiple items in a dialog of the property targeted by
            the specified <paramref name="propertySelector"/>
            </summary>
            <typeparam name="TKey">The type of the enumerable</typeparam>
            <typeparam name="TItem">The type of the items contained in the targeted enumerable</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="presenterImplementationFactory">Implementation factory for the presenter of the items</param>
            <param name="dialogTitle">The title of the dialog</param>
            <param name="pathData">The path data of the icon</param>
            <param name="singleItemText">The text of text of the button when a single item is contained in the enumerable</param>
            <param name="multipleItemsText">The text of text of the button when a multiple items are contained in the enumerable</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetSingleImageUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Uri}})">
            <summary>
            Sets a custom ui element responsible for presenting an image
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetSingleImageUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{``0,System.Uri})">
            <summary>
            Sets a custom ui element responsible for presenting an image
            </summary>
            <typeparam name="TKey">The type of the selected property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="uriExtractor">Extracts the <see cref="T:System.Uri"/> from the selected <typeparamref name="TKey"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetMultipleImagesUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{System.Uri}}})">
            <summary>
            Sets a custom ui element responsible for presenting multiple images
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetMultipleImagesUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{``0,System.Collections.Generic.IEnumerable{System.Uri}})">
            <summary>
            Sets a custom ui element responsible for presenting multiple images
            </summary>
            <typeparam name="TKey">The type of the selected property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="urisExtractor">Extracts the <see cref="T:System.Collections.Generic.IEnumerable`1"/> from the selected <typeparamref name="TKey"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{System.String,``0},System.Func{``0,System.String},System.Func{`1,`2,Atom.Windows.Controls.TextInput,``0,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <typeparamref name="TKey"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the selected property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="stringToValueConverter">Converts the <see cref="T:System.String"/> inserted at the text input to a value of the specified <typeparamref name="TKey"/></param>
            <param name="valueToStringConverter">Converts the <typeparamref name="TKey"/> of the model to a <see cref="T:System.String"/> before inserting it to the text input</param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.String}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.String,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.String"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.SByte}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.SByte,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.SByte"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.SByte}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.SByte},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:sbyte?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Byte}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Byte,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Byte"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Byte}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Byte},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:byte?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int16}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Int16,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Int16"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int16}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Int16},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:short?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt16}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.UInt16,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.UInt16"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt16}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.UInt16},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:ushort?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int32}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Int32,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Int32"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int32}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Int32},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:int?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt32}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.UInt32,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.UInt32"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt32}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.UInt32},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:uint?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int64}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Int64,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Int64"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int64}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Int64},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:long?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt64}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.UInt64,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.UInt64"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt64}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.UInt64},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:ulong?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Single}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Single,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Single"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Single}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Single},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:float?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Double}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Double,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Double"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Double}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Double},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:double?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Decimal}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Decimal,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Decimal"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Decimal}}},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Decimal},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:decimal?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{`1,`2,``0,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Func{System.String,``0},System.Func{``0,System.String},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,``0,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <typeparamref name="TKey"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the selected property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="stringToValueConverter">Converts the <see cref="T:System.String"/> inserted at the text input to a value of the specified <typeparamref name="TKey"/></param>
            <param name="valueToStringConverter">Converts the <typeparamref name="TKey"/> of the model to a <see cref="T:System.String"/> before inserting it to the text input</param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.String}},System.Func{`1,`2,System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.String,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.String"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.SByte}},System.Func{`1,`2,System.SByte,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.SByte,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.SByte"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.SByte}}},System.Func{`1,`2,System.Nullable{System.SByte},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.SByte},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:sbyte?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Byte}},System.Func{`1,`2,System.Byte,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Byte,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Byte"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Byte}}},System.Func{`1,`2,System.Nullable{System.Byte},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Byte},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:byte?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int16}},System.Func{`1,`2,System.Int16,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Int16,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Int16"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int16}}},System.Func{`1,`2,System.Nullable{System.Int16},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Int16},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:short?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt16}},System.Func{`1,`2,System.UInt16,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.UInt16,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.UInt16"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt16}}},System.Func{`1,`2,System.Nullable{System.UInt16},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.UInt16},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:ushort?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int32}},System.Func{`1,`2,System.Int32,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Int32,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Int32"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int32}}},System.Func{`1,`2,System.Nullable{System.Int32},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Int32},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:int?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt32}},System.Func{`1,`2,System.UInt32,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.UInt32,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.UInt32"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt32}}},System.Func{`1,`2,System.Nullable{System.UInt32},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.UInt32},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:uint?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int64}},System.Func{`1,`2,System.Int64,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Int64,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Int64"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int64}}},System.Func{`1,`2,System.Nullable{System.Int64},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Int64},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:long?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt64}},System.Func{`1,`2,System.UInt64,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.UInt64,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.UInt64"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt64}}},System.Func{`1,`2,System.Nullable{System.UInt64},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.UInt64},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:ulong?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Single}},System.Func{`1,`2,System.Single,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Single,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Single"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Single}}},System.Func{`1,`2,System.Nullable{System.Single},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Single},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:float?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Double}},System.Func{`1,`2,System.Double,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Double,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Double"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Double}}},System.Func{`1,`2,System.Nullable{System.Double},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Double},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:double?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Decimal}},System.Func{`1,`2,System.Decimal,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Decimal,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.Decimal"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetTextInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Decimal}}},System.Func{`1,`2,System.Nullable{System.Decimal},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.TextInput,System.Nullable{System.Decimal},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.TextInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:decimal?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.SByte}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.SByte,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.SByte"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.SByte}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.SByte},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:sbyte?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Byte}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Byte,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Byte"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Byte}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Byte},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:byte?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int16}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Int16,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Int16"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int16}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Int16},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:short?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt16}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.UInt16,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.UInt16"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt16}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.UInt16},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:ushort?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int32}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Int32,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Int32"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int32}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Int32},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:int?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt32}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.UInt32,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.UInt32"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt32}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.UInt32},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:uint?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int64}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Int64,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Int64"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int64}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Int64},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:long?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt64}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.UInt64,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.UInt64"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt64}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.UInt64},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:ulong?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Single}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Single,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Single"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Single}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Single},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:float?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Double}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Double,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Double"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Double}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Double},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:double?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Decimal}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Decimal,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Decimal"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Decimal}}},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Decimal},System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:decimal?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.SByte}},System.Func{`1,`2,System.SByte,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.SByte,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="T:System.SByte"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.SByte}}},System.Func{`1,`2,System.Nullable{System.SByte},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.SByte},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.TextInput"/> for the component that presents the <see cref="!:sbyte?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Byte}},System.Func{`1,`2,System.Byte,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Byte,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Byte"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Byte}}},System.Func{`1,`2,System.Nullable{System.Byte},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Byte},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:byte?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int16}},System.Func{`1,`2,System.Int16,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Int16,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Int16"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int16}}},System.Func{`1,`2,System.Nullable{System.Int16},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Int16},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:short?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt16}},System.Func{`1,`2,System.UInt16,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.UInt16,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.UInt16"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt16}}},System.Func{`1,`2,System.Nullable{System.UInt16},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.UInt16},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:ushort?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int32}},System.Func{`1,`2,System.Int32,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Int32,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Int32"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int32}}},System.Func{`1,`2,System.Nullable{System.Int32},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Int32},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:int?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt32}},System.Func{`1,`2,System.UInt32,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.UInt32,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.UInt32"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt32}}},System.Func{`1,`2,System.Nullable{System.UInt32},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.UInt32},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:uint?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Int64}},System.Func{`1,`2,System.Int64,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Int64,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Int64"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Int64}}},System.Func{`1,`2,System.Nullable{System.Int64},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Int64},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:long?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.UInt64}},System.Func{`1,`2,System.UInt64,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.UInt64,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.UInt64"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.UInt64}}},System.Func{`1,`2,System.Nullable{System.UInt64},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.UInt64},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:ulong?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Single}},System.Func{`1,`2,System.Single,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Single,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Single"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Single}}},System.Func{`1,`2,System.Nullable{System.Single},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Single},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:float?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Double}},System.Func{`1,`2,System.Double,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Double,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Double"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Double}}},System.Func{`1,`2,System.Nullable{System.Double},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Double},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:double?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Decimal}},System.Func{`1,`2,System.Decimal,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Decimal,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="T:System.Decimal"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Nullable{System.Decimal}}},System.Func{`1,`2,System.Nullable{System.Decimal},System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,System.Nullable{System.Decimal},System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <see cref="!:decimal?"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetCheckBoxInputUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Boolean}},System.Func{`1,`2,System.Boolean,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.CheckBox})">
            <summary>
            Sets a custom ui element for the component that presents the <see cref="T:System.Boolean"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="configure">Further configures the check box</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetEnumLabelTagDropDownMenuInputUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{`1,`2,``0,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Func{``0,System.String},System.Action{`2,`2},System.Func{``0,System.String},System.Boolean)">
            <summary>
            Sets a custom ui element for the component that presents the <typeparamref name="TKey"/> enum property targeted by the specified <paramref name="propertySelector"/>.
            Localization
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="enumToStringConverter">
            Returns a string that represents the inserted enum value.
            NOTE: This is usually used for localizing the enum value!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="enumColorSelector">Returns the hex value that represents the inserted enum value</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetOptionLabelTagDropDownMenuInputUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Collections.Generic.IEnumerable{``0},System.Func{`1,`2,``0,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Func{``0,System.String},System.Action{`2,`2},System.Func{``0,System.String},System.Boolean)">
            <summary>
            Sets a custom ui element for the component that presents the <typeparamref name="TKey"/> enum property targeted by the specified <paramref name="propertySelector"/>.
            Localization
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="options">The available options</param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="optionToStringConverter">
            Returns a string that represents the inserted option value.
            NOTE: This is usually used for localizing the option value!
            </param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="optionColorSelector">Returns the hex value that represents the inserted option value</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetColorUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.String}})">
            <summary>
            Sets a custom UI element creation for the property targeted by the specified <paramref name="propertySelector"/>.
            NOTE: The targeted string value property must use a HEX value color representation!
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetCustomUIElementImplementationFactory(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Gets the custom ui element implementation factory if any that's register for the property selected by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetCustomUIElementImplementationFactory(System.String)">
            <summary>
            Gets the custom ui element implementation factory if any that's register for the property with name <paramref name="propertyName"/>
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetCustomUIElementUpdater(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Gets the custom ui element updater if any that's register for the property selected by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetCustomUIElementUpdater(System.String)">
            <summary>
            Gets the custom ui element updater if any that's register for the property with the specified <paramref name="propertyName"/>
            </summary>
            <param name="propertyName">The name of the target property</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.ShowFormulaData(Atom.Core.Formula)">
            <summary>
            Shows the formula data related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.HideFormulaData(Atom.Core.Formula)">
            <summary>
            Hides all the data related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.HideFormulaData(System.String)">
            <summary>
            Hides all the data related to the formula with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Atom#Windows#Controls#IDataPresenter#SetOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton,Atom.Windows.Controls.IDataPresenter,System.Object},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Sets a new custom option
            </summary>
            <param name="id">The id of the option</param>
            <param name="optionAction">The action that is related with the option</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Sets a new custom option
            </summary>
            <param name="id">The id of the option</param>
            <param name="optionAction">The action that is related with the option</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String)">
            <summary>
            Sets a new custom option
            </summary>
            <param name="id">The id of the option</param>
            <param name="optionAction">The action that is related with the option</param>
            <param name="buttonUpdater">The action responsible for updating the button</param>
            <param name="info">The information related with the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String,System.String,System.String)">
            <summary>
            Sets a new custom option
            </summary>
            <param name="id">The id of the option</param>
            <param name="optionAction">The action that is related with the option</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon in form of a hex value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetEditOption(System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String)">
            <summary>
            Sets an edit option
            </summary>
            <param name="optionAction">The action that is related with the option</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetEditOption(System.Func{Atom.Windows.Controls.DataForm{`2}},System.String,System.String,System.Func{`2,System.Threading.Tasks.Task{Atom.Core.IFailable}},System.String,System.String,System.Boolean)">
            <summary>
            Sets an edit option that before executing the specified <paramref name="updateAction"/> shows a form provided by the <paramref name="formImplementationFactory"/>
            in a dialog with the specified <paramref name="dialogTitle"/> and the specified <paramref name="dialogMessage"/>.
            </summary>
            <param name="formImplementationFactory">Creates and returns the form that will be used</param>
            <param name="dialogTitle">
            The dialog title.
            Ex.: Product configuration
            </param>
            <param name="dialogMessage">
            The dialog message
            </param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="pathData">The path data of the icon</param>
            <param name="id">The id of the option</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetEditOption``1(System.Func{Atom.Windows.Controls.DataForm{``0}},System.String,System.String,System.Func{`2,``0},System.Func{`2,``0,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Action{`2,`2},System.String,System.String,System.Boolean)">
            <summary>
            Sets an edit option that before executing the specified <paramref name="updateAction"/> shows a form provided by the <paramref name="formImplementationFactory"/>
            in a dialog with the specified <paramref name="dialogTitle"/> and the specified <paramref name="dialogMessage"/>.
            </summary>
            <typeparam name="TRequestModel">The type of the request model</typeparam>
            <param name="formImplementationFactory">Creates and returns the form that will be used</param>
            <param name="requestModelImplementationFactory">Uses the current model to create the request model</param>
             <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="dialogTitle">
            The title of the dialog.
            Ex.: Product configuration
            </param>
            <param name="dialogMessage">The message of the dialog</param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="pathData">The path data of the icon</param>
            <param name="id">The id of the option</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetDeleteOption(System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String)">
            <summary>
            Sets a delete option
            </summary>
            <param name="optionAction">The action related with the option</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetDeleteOption(System.String,System.String,System.Func{`2,System.Threading.Tasks.Task{Atom.Core.IFailable}},System.String,System.String,System.Boolean)">
            <summary>
            Sets a delete option that before its the execution of the specified <paramref name="deleteAction"/>
            a transitional dialog is shown with the specified <paramref name="dialogTitle"/> and the specified <paramref name="dialogMessage"/>
            </summary>
            <param name="dialogTitle">
            The dialog title.
            Ex.: Product deletion.
            </param>
            <param name="dialogMessage">
            The dialog message.
            </param>
            <param name="deleteAction">
            The delete action.
            NOTE: It usually removes the model from the data storage!
            </param>
            <param name="pathData">The path data of the icon</param>
            <param name="id">The id of the option</param>
            <param name="showDeletingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="deleteAction"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetOpenOption(System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String)">
            <summary>
            Sets an open option
            </summary>
            <param name="optionAction">The action that is related with the option</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetUpOption(System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String)">
            <summary>
            Sets an up option
            </summary>
            <param name="optionAction">The action that is related with the option</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetUpOption(System.Linq.Expressions.Expression{System.Func{`2,System.Int32}},System.Func{`2,System.Threading.Tasks.Task{Atom.Core.IFailable}},System.String)">
            <summary>
            Sets an up option that increments the property targeted by the specified <paramref name="propertySelector"/>
            before the execution of the <paramref name="updateAction"/> 
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetDownOption(System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String)">
            <summary>
            Sets a down option
            </summary>
            <param name="optionAction">The action that is related with the option</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetDownOption(System.Linq.Expressions.Expression{System.Func{`2,System.Int32}},System.Func{`2,System.Threading.Tasks.Task{Atom.Core.IFailable}},System.Boolean,System.String)">
            <summary>
            Sets a down option that decreases the property targeted by the specified <paramref name="propertySelector"/>
            before the execution of the <paramref name="updateAction"/> 
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="allowNegatives">A flag indicating whether a negative value is allowed to be set to the property</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetSelectOption(System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String,System.String)">
            <summary>
            Sets a select option
            </summary>
            <param name="optionAction">The action that is related with the option</param>
            <param name="info">The information related with the option</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetSelectOption(System.Func{`2,System.Boolean,System.Threading.Tasks.Task{Atom.Core.IFailable}},System.String,System.String,System.String,System.String)">
            <summary>
            Sets a select option
            </summary>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="selectedBackColor">The back color of option button when it's selected</param>
            <param name="deselectedBackColor">The back color of the option button when it's deselected</param>
            <param name="info">The information related with the option</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetPreviewOption(System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String)">
            <summary>
            Sets a preview option
            </summary>
            <param name="optionAction">The action that is related with the option</param>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetStandardOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String,System.String)">
            <summary>
            Sets a standard option
            </summary>
            <param name="optionAction">The action related with the option</param>
            <param name="id">The id of the option</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Atom#Windows#Controls#IDataPresenter#DisableOption(System.String)">
            <summary>
            Disable the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.DisableOption(System.String)">
            <summary>
            Disable the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Atom#Windows#Controls#IDataPresenter#EnableOption(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.EnableOption(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.Atom#Windows#Controls#IDataPresenter#RemoveOption(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.RemoveOption(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetContextMenu(System.Func{`0,`2,System.Windows.Controls.ContextMenu})">
            <summary>
            Sets a context menu for the components
            </summary>
            <param name="implementationFactor">The implementation factory of the context menu</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetComponentBackColorSetter(System.Func{`2,System.Int32,System.Windows.Media.Color})">
            <summary>
            Sets the rows' back color setter
            </summary>
            <param name="setter">The setter</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetComponentForeColorSetter(System.Func{`2,System.Int32,System.Windows.Media.Color})">
            <summary>
            Sets the rows' fore color setter
            </summary>
            <param name="setter">The setter</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetComponentBorderColorSetter(System.Func{`2,System.Int32,System.Windows.Media.Color})">
            <summary>
            Sets the rows' fore color setter
            </summary>
            <param name="setter">The setter</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.InvalidateCore">
            <summary>
            Invalidates the data presenter.
            NOTE: This method gets executed by the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.Invalidate"/> method
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnAddRangeFinished(System.Collections.Generic.IEnumerable{`2})">
            <summary>
            Handles the finish of the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.AddRange(System.Collections.Generic.IEnumerable{`0})"/> method
            </summary>
            <param name="item">The items that were added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnItemsSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnItemAdded(Atom.Core.ItemAddedEventArgs{`2,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.CreateComponent(`2)">
            <summary>
            Creates a component that represents the <paramref name="model"/>
            </summary>
            <param name="model">The model that the component represents</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.TranslateData(System.Reflection.PropertyInfo,`2)">
            <summary>
            Translates the value of the specified <paramref name="propertyInfo"/> of the specified <paramref name="model"/>
            </summary>
            <param name="propertyInfo">The property info of the <typeparamref name="TClass"/> whose value to translate</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.ModifyData(System.Reflection.PropertyInfo,`2,System.Object)">
            <summary>
            Further configures the already translated data before adding them to the <see cref="T:Atom.Windows.Controls.BaseDataComponent`1"/>.
            NOTE: This method can be used for creating a <see cref="T:System.Windows.UIElement"/> from the <paramref name="translatedData"/> and
                  then passing it to the <see cref="T:Atom.Windows.Controls.BaseDataComponent`1"/> using the 
                  <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.AddTitleDataToComponents(Atom.Core.TitleData)"/> method!
            </summary>
            <param name="propertyInfo">The property associated with the translated value</param>
            <param name="model">The model whose property value was translated</param>
            <param name="translatedData">The already translated data returned from the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.Translator"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnUpdated(`2,`1,System.Int32)">
            <summary>
            Further updates the data of the element that presents the specified <paramref name="model"/>
            </summary>
            <param name="model">The model whose element values should get updated</param>
            <param name="component">The item that presents the data of the <paramref name="model"/></param>
            <param name="index">The index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetAllTitles">
            <summary>
            Gets both the standard and the formula titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.AddStandardTitleCore(Atom.Core.TitleData)">
            <summary>
            Creates and adds the required titles and then returns an enumerable with the added <see cref="T:Atom.Windows.Controls.Title"/>s
            </summary>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.RemoveStandardTitleCore(Atom.Core.TitleData)">
            <summary>
            Removes all the titles related to the specified <paramref name="titleData"/>
            </summary>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetStandardTitles">
            <summary>
            Gets all the titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetStandardTitles(Atom.Core.TitleData)">
            <summary>
            Gets all the titles that are related to the specified <paramref name="titleData"/>
            </summary>
            <param name="titleData">The title data of the requested <see cref="T:Atom.Windows.Controls.Title"/>s</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetStandardTitles(Atom.Windows.Controls.Title)">
            <summary>
            Gets the titles related to the specified <paramref name="title"/>
            </summary>
            <param name="title">The title</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.AddFormulaTitleCore(Atom.Core.Formula)">
            <summary>
            Creates and adds the required formula titles and then returns an enumerable with the added <see cref="T:Atom.Windows.Controls.FormulaTitle"/>s
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.RemoveFormulaTitleCore(Atom.Core.Formula)">
            <summary>
            Removes all the titles related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetFormulaTitles">
            <summary>
            Gets all the formula titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetFormulaTitles(Atom.Core.Formula)">
            <summary>
            Gets all the formula titles related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.GetFormulaTitles(Atom.Windows.Controls.FormulaTitle)">
            <summary>
            Gets the titles related to the specified <paramref name="formulaTitle"/>
            </summary>
            <param name="formulaTitle">The formula title</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnOptionAdded(Atom.Windows.Controls.OptionMap{`0,`1,`2})">
            <summary>
            Handles the addition of an option
            </summary>
            <param name="optionMap">The option map related with the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnOptionRemoved(Atom.Windows.Controls.OptionMap{`0,`1,`2})">
            <summary>
            Handles the removal of an option
            </summary>
            <param name="optionMap">The option map related with the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnDataSorted">
            <summary>
            Handles the sorting aftermath
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnComponentBackColorSetterChange(System.Func{`2,System.Int32,System.Windows.Media.Color})">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBackColorSetter"/> property
            </summary>
            <param name="newSetter">The new color setter</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnComponentForeColorSetterChange(System.Func{`2,System.Int32,System.Windows.Media.Color})">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentForeColorSetter"/> property
            </summary>
            <param name="newSetter">The new color setter</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnCornerRadiusChanged(System.Func{`2,System.Int32,System.Windows.Media.Color})">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.ComponentBorderColorSetter"/> property
            </summary>
            <param name="newSetter">The new color setter</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.OnDoubleClickCommandExecutionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.DoubleClickCommandExecution"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.ModifyDataInternal(System.Reflection.PropertyInfo,`1,`2,System.Action{`0,`1,`2,System.Windows.UIElement}@)">
            <summary>
            Translates the data using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.TranslateData(System.Reflection.PropertyInfo,`2)"/> method and then before returning
            the result it modifies the already translated data using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.ModifyData(System.Reflection.PropertyInfo,`2,System.Object)"/> method
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="component">The component that presents the <paramref name="model"/></param>
            <param name="model">The model</param>
            <param name="uiElementUpdater">
            The custom ui updater set by the user when using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.SetCustomUIElement(System.Linq.Expressions.Expression{System.Func{`2,System.Object}},System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/> method</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.AddTitleInternal(Atom.Core.TitleData)">
            <summary>
            Creates and adds the required titles along with the necessary data to the components and returns the titles that were added
            </summary>
            <param name="titleData">The title data</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.AddFormulaTitleInternal(Atom.Core.Formula)">
            <summary>
            Creates and adds the required titles along with the necessary data to the components and returns the titles that were added
            </summary>
            <param name="formula">The formula</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.RemoveTitleInternal(Atom.Core.TitleData)">
            <summary>
            Removes all the titles related to the <paramref name="titleData"/> and the necessary data from the components
            </summary>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.RemoveFormulaTitleInternal(Atom.Core.Formula)">
            <summary>
            Removes all the titles related to the <paramref name="formula"/> and the necessary data from the components
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.AddTitleDataToComponents(Atom.Core.TitleData)">
            <summary>
            Adds the data related to the target property of the <paramref name="titleData"/> to the components
            </summary>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.AddFormulaTitleDataToComponent(Atom.Core.Formula)">
            <summary>
            Add the formula related elements to the components
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.TitleSort``1(Atom.Windows.Controls.Title,System.Func{`1,``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sorts the collection.
            NOTE: This method is assigned as the command of a <see cref="T:Atom.Windows.Controls.Title"/>!
            </summary>
            <typeparam name="TKey">The type of the property to sort</typeparam>
            <param name="title">The title</param>
            <param name="propertySelector">The selector that selects the target property</param>
            <param name="comparer">The optional comparer</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.FormulaTitleSort(Atom.Windows.Controls.FormulaTitle)">
            <summary>
            Sorts the collection.
            NOTE: This method is assigned as the command of a <see cref="T:Atom.Windows.Controls.FormulaTitle"/>!
            </summary>
            <param name="title">The title</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UpdateComponentCommand(Atom.Windows.Controls.BaseDataComponent{`2},System.EventHandler{`2})">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.BackgroundControl.Command"/> of the specified <paramref name="component"/> 
            using the specified <paramref name="eventHandler"/>.
            NOTE: If the <paramref name="eventHandler"/> is set to <see cref="!:null"/> then the command
                  of the component is cleared!
            </summary>
            <param name="component">The component whose command to update</param>
            <param name="eventHandler">The event handler</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{`1,`2,``0,System.Threading.Tasks.Task{Atom.Core.IFailable{`2}}},System.Func{System.String,``0},System.Func{``0,System.String},System.Action{`2,`2},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,``0,System.Boolean},System.Boolean,System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <typeparamref name="TKey"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the selected property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="updateAction">
            The update action.
            NOTE: It usually updates the model at the data storage!
            </param>
            <param name="stringToValueConverter">Converts the <see cref="T:System.String"/> inserted at the text input to a value of the specified <typeparamref name="TKey"/></param>
            <param name="valueToStringConverter">Converts the <typeparamref name="TKey"/> of the model to a <see cref="T:System.String"/> before inserting it to the text input</param>
            <param name="valuesMapper">
            Optional action that updates the values of the current model with the values of the model provided by the <paramref name="updateAction"/>.
            NOTE: The first argument is the model of the result of the <paramref name="updateAction"/> and the second argument is the model that is
                  is currently contained in the presenter!
            NOTE: This method shouldn't be used if the model of the <paramref name="updateAction"/> is the same as the current model!
            </param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to call the <paramref name="updateAction"/> or not</param>
            <param name="showUpdatingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="updateAction"/>
            gets executed or not
            </param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.SetNumericInputUIElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{System.String,``0},System.Func{``0,System.String},System.Func{`1,`2,Atom.Windows.Controls.NumericInput,``0,System.Boolean},System.Action{`1,`2,Atom.Windows.Controls.NumericInput})">
            <summary>
            Sets a <see cref="T:Atom.Windows.Controls.NumericInput"/> for the component that presents the <typeparamref name="TKey"/> property targeted by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the selected property</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="stringToValueConverter">Converts the <see cref="T:System.String"/> inserted at the text input to a value of the specified <typeparamref name="TKey"/></param>
            <param name="valueToStringConverter">Converts the <typeparamref name="TKey"/> of the model to a <see cref="T:System.String"/> before inserting it to the text input</param>
            <param name="customValueValidator">Validates the value entered to the text input and decides whether to apply the changes to the model or not</param>
            <param name="configure">Further configures the text input</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenter`3.UpdateCurrentModelValues``1(System.Reflection.PropertyInfo,``0,`2,`2,System.Action{`2,`2})">
            <summary>
            Updates the values of the <paramref name="currentModel"/> which is the model that is currently being presented by the presenter.
            </summary>
            <typeparam name="TKey">The type of the value of the <paramref name="propertyInfo"/></typeparam>
            <param name="propertyInfo">The property info</param>
            <param name="newValue">The new value assigned by the input</param>
            <param name="updateActionModel">The model that is provided by the update action</param>
            <param name="currentModel">The model that is currently being presented by the presenter</param>
            <param name="valuesMapper">The optional values mapper that will update the values of the <paramref name="currentModel"/> based on the values of the <paramref name="updateActionModel"/></param>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalDataPresenter`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDataPresenter`3"/> that has preset the GUI elements for the 
            <see cref="P:Atom.Windows.Controls.ConventionalDataPresenter`3.FiltersContainer"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <typeparam name="TComponent">The type of the item usually a <see cref="T:System.Windows.UIElement"/></typeparam>
            <typeparam name="TDataPresenter">The type of the data presenter, used for chaining the configuration methods</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDataPresenter`3.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDataPresenter`3.ComponentsContainer">
            <summary>
            The container that contains all the components
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDataPresenter`3.FiltersBorder">
            <summary>
            The filters border
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDataPresenter`3.FiltersGrid">
            <summary>
            The filters grid
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDataPresenter`3.FiltersTextBlock">
            <summary>
            The filters text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDataPresenter`3.FiltersContainer">
            <summary>
            The container that contains all the filters
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataPresenter`3.#ctor(Atom.Windows.Controls.PresentationModeDataModel)">
            <summary>
            Default constructor
            </summary>
            <param name="presentationMode">The presentation mode</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataPresenter`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataPresenter`3.CreateDataContainer">
            <summary>
            Creates and returns the data container
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataPresenter`3.AddFilterCheckBox(Atom.Windows.Controls.CheckBox)">
            <summary>
            Adds the specified <paramref name="filterCheckBox"/> to the filters container
            </summary>
            <param name="filterCheckBox">The filter to add</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataPresenter`3.PlaceSearchInput(Atom.Windows.Controls.SearchInput)">
            <summary>
            Places the specified <paramref name="input"/> in the control
            </summary>
            <param name="input">search input</param>
        </member>
        <member name="T:Atom.Windows.Controls.FiltersCondition">
            <summary>
            The filters condition
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.FiltersCondition.OR">
            <summary>
            At least one filter condition must be satisfied
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.FiltersCondition.AND">
            <summary>
            All the filter conditions must be satisfied
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.IDataPresenter">
            <summary>
            Provides abstractions for a data presenter when the type of the items is unknown
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataPresenter.PresentationMode">
            <summary>
            The presentation mode data model
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataPresenter.Translator">
            <summary>
            The translator used for translating the values for the default UI elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataPresenter.Mapper">
            <summary>
            If the mapper is set, then when a title isn't specified for a column
            then the title is retrieved using the mapper.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.Update(System.Object)">
            <summary>
            Updates the presented values of the element related to the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.UnsafeUpdate(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="model">The model</param>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.UnsafeUpdate(System.Reflection.PropertyInfo)">
            <summary>
            Updates the elements of the components of the presenter related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.UnsafeIsDataShown(System.Reflection.PropertyInfo)">
            <summary>
            Checks whether the data of the specified <paramref name="propertyInfo"/> is shown.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.UnsafeShowData(System.Reflection.PropertyInfo,System.String,System.Object,System.Boolean)">
            <summary>
            Shows the data of the models of the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="columnTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.UnsafeHideData(System.Reflection.PropertyInfo)">
            <summary>
            Hides the data of the models of the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.HideAllData">
            <summary>
            Hides all the shown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.IDataPresenter,System.Object,System.Windows.UIElement},System.Action{Atom.Windows.Controls.IDataPresenter,System.Object,System.Windows.UIElement})">
            <summary>
            Sets a custom ui element for the component that presents the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="uiElementImplementationFactory">The element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.UnsafeSetCustomUIElement``1(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.IDataPresenter,System.Object,``0},System.Action{Atom.Windows.Controls.IDataPresenter,System.Object,``0})">
            <summary>
            Sets a custom ui element for the component that presents the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <typeparam name="TElement">The type of the element that is created</typeparam>
            <param name="propertyInfo">The property info</param>
            <param name="uiElementImplementationFactory">The element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.ShowFormulaData(Atom.Core.Formula)">
            <summary>
            Shows the formula data related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.HideFormulaData(Atom.Core.Formula)">
            <summary>
            Hides all the data related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula"></param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.HideFormulaData(System.String)">
            <summary>
            Hides all the data related to the formula with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.SetOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton,Atom.Windows.Controls.IDataPresenter,System.Object},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Sets a new custom option
            </summary>
            <param name="id">The id of the option</param>
            <param name="optionAction">The action that is related with the option</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.DisableOption(System.String)">
            <summary>
            Disable the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.EnableOption(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter.RemoveOption(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IDataPresenter`1">
            <summary>
            Provides abstractions for a data presenter
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.IDataPresenter`1.Atom#Windows#Controls#IDataPresenter#Mapper">
            <summary>
            If the mapper is set, then when a title isn't specified for a column
            then the title is retrieved using the mapper.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataPresenter`1.Mapper">
            <summary>
            If the mapper is set, then when a title isn't specified for a column
            then the title is retrieved using the mapper.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataPresenter`1.Atom#Windows#Controls#IDataPresenter#Translator">
            <summary>
            The translator used for translating the values for the default UI elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IDataPresenter`1.Translator">
            <summary>
            The translator used for translating the values for the default UI elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.Atom#Windows#Controls#IDataPresenter#Update(System.Object)">
            <summary>
            Updates the presented values of the element related to the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.Update(`0)">
            <summary>
            Updates the presented values of the element related to the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.Update(`0,System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="model">The model</param>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.Atom#Windows#Controls#IDataPresenter#UnsafeUpdate(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="model">The model</param>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.UnsafeUpdate(`0,System.Reflection.PropertyInfo)">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="model">The model</param>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.Update(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Updates the elements of the components of the presenter related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.GetComponent(`0)">
            <summary>
            Gets the component associated with the specified <paramref name="model"/>
            </summary>
            <param name="model">The model of the component that we want to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.IsDataShown(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Checks whether the data of the property that is targeted from the <paramref name="propertySelector"/>
            is shown
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.ShowData``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>
            Shows the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDataPresenter`1.HideData(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Hides the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="T:Atom.Windows.Controls.ICollapsibleDataPresenter">
            <summary>
            Provides abstractions for a data presenter that can present hidden sub elements when the type of the items is unknown
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter.UnsafeSetSubElement``2(System.Reflection.PropertyInfo,System.Func{System.Object,``0},System.Action{System.Object,``0},System.Action{``0,System.Boolean},System.Func{System.Object,System.Threading.Tasks.Task{``1}},System.Action{System.Object,``1})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="clickElementImplementationFactory">Creates and returns the element that when clicked reveals the sub element</param>
            <param name="clickElementStateUpdater">Update the element that when clicked reveals the sub element based on the value of the target property</param>
            <param name="clickElementUpdater">Update the element that when clicked reveals the sub element based on the sub element's visibility state</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter.UnsafeSetSubElement``1(System.Reflection.PropertyInfo,System.Func{System.Object,System.String},System.Func{System.Object,System.Threading.Tasks.Task{``0}},System.Action{System.Object,``0})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ICollapsibleDataPresenter`1">
            <summary>
            Provides abstractions for a data presenter that can present hidden sub elements
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter`1.Atom#Windows#Controls#ICollapsibleDataPresenter#UnsafeSetSubElement``2(System.Reflection.PropertyInfo,System.Func{System.Object,``0},System.Action{System.Object,``0},System.Action{``0,System.Boolean},System.Func{System.Object,System.Threading.Tasks.Task{``1}},System.Action{System.Object,``1})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="clickElementImplementationFactory">Creates and returns the element that when clicked reveals the sub element</param>
            <param name="clickElementStateUpdater">Update the element that when clicked reveals the sub element based on the value of the target property</param>
            <param name="clickElementUpdater">Update the element that when clicked reveals the sub element based on the sub element's visibility state</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter`1.Atom#Windows#Controls#ICollapsibleDataPresenter#UnsafeSetSubElement``1(System.Reflection.PropertyInfo,System.Func{System.Object,System.String},System.Func{System.Object,System.Threading.Tasks.Task{``0}},System.Action{System.Object,``0})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter`1.SetSubElement``2(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{Atom.Core.IDataComponent{`0},`0,``0},System.Action{Atom.Core.IDataComponent{`0},`0,``0},System.Action{``0,System.Boolean},System.Func{Atom.Core.IDataComponent{`0},`0,System.Threading.Tasks.Task{``1}},System.Action{Atom.Core.IDataComponent{`0},`0,``1})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="clickElementImplementationFactory">Creates and returns the element that when clicked reveals the sub element</param>
            <param name="clickElementStateUpdater">Update the element that when clicked reveals the sub element based on the value of the target property</param>
            <param name="clickElementUpdater">Update the element that when clicked reveals the sub element based on the sub element's visibility state</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter`1.UnsafeSetSubElement``2(System.Reflection.PropertyInfo,System.Func{Atom.Core.IDataComponent{`0},`0,``0},System.Action{Atom.Core.IDataComponent{`0},`0,``0},System.Action{``0,System.Boolean},System.Func{Atom.Core.IDataComponent{`0},`0,System.Threading.Tasks.Task{``1}},System.Action{Atom.Core.IDataComponent{`0},`0,``1})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="clickElementImplementationFactory">Creates and returns the element that when clicked reveals the sub element</param>
            <param name="clickElementStateUpdater">Update the element that when clicked reveals the sub element based on the value of the target property</param>
            <param name="clickElementUpdater">Update the element that when clicked reveals the sub element based on the sub element's visibility state</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter`1.SetSubElement``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{`0,System.String},System.Func{Atom.Core.IDataComponent{`0},`0,System.Threading.Tasks.Task{``0}},System.Action{Atom.Core.IDataComponent{`0},`0,``0})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter`1.UnsafeSetSubElement``1(System.Reflection.PropertyInfo,System.Func{`0,System.String},System.Func{Atom.Core.IDataComponent{`0},`0,System.Threading.Tasks.Task{``0}},System.Action{Atom.Core.IDataComponent{`0},`0,``0})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ICollapsibleDataPresenter`1.UnsafeSetSubElement(System.Reflection.PropertyInfo,System.Func{`0,System.String},System.Func{Atom.Core.IDataComponent{`0},`0,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.Action{Atom.Core.IDataComponent{`0},`0,System.Windows.FrameworkElement})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ISelectionDataPresenter`1">
            <summary>
            Provides abstractions for a data presenter that can select its items
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="T:Atom.Windows.Controls.StandardDataPresenter`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDataPresenter`3"/> that has the ability to set result calculators and filters.
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <typeparam name="TComponent">The type of the item usually a <see cref="T:System.Windows.UIElement"/></typeparam>
            <typeparam name="TDataPresenter">The type of the data presenter, used for chaining the configuration methods</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataPresenter`3.mFilters">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.Filters"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.FiltersCondition">
            <summary>
            The filters condition
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.Filters">
            <summary>
            The filters
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchInput">
            <summary>
            The search input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchRule">
            <summary>
            The search rule
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.SortedCollection">
            <summary>
            The collection of items that we care about and should be used for all of our actions (ex. Sorting)
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.Targets">
            <summary>
            A safe to call property that returns an enumerable with the targeted items that should be taken into consideration when calculating data results
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.FilteredData">
            <summary>
            The filtered data
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataPresenter`3.FilteredDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.FilteredData"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.BorderBrush">
            <summary>
            The border brush
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataPresenter`3.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.BorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.CornerRadius">
            <summary>
            The corner radius of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataPresenter`3.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.CornerRadius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnCornerRadiusPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.CornerRadius"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.BorderThickness">
            <summary>
            The thickness of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataPresenter`3.BorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.BorderThickness"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnBorderThicknessPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.BorderThickness"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchInputHint">
            <summary>
            The hint of the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchInput"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataPresenter`3.SearchInputHintProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchInputHint"/> dependency property
            Localization
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchValue">
            <summary>
            The hint of the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchInput"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataPresenter`3.SearchValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchValue"/> dependency property
            Localization
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.#ctor(Atom.Windows.Controls.PresentationModeDataModel)">
            <summary>
            Default constructor
            </summary>
            <param name="presentationMode">The presentation mode</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.SetSearchRule(System.Func{`2,Atom.Windows.Controls.SearchTarget,System.String,System.Boolean})">
            <summary>
            Sets the search rule
            </summary>
            <param name="searchRule">The rule used for searching the items</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.AddSearchTarget(Atom.Windows.Controls.SearchTarget)">
            <summary>
            Adds a search target for the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchInput"/>
            </summary>
            <param name="searchTarget">The search target</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.SetDataFilter(System.Object,System.String,System.Func{`2,System.Boolean},System.Boolean)">
            <summary>
            Sets a data filter
            </summary>
            <param name="id">The unique identifier of the filter</param>
            <param name="name">The name (text) of the filter</param>
            <param name="filter">The filter delegate</param>
            <param name="isSelected">If true, then the filter is preselected, otherwise it's not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.SetFiltersCondition(Atom.Windows.Controls.FiltersCondition)">
            <summary>
            Sets the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.FiltersCondition"/>
            </summary>
            <param name="condition">The filters condition</param>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.FilteredItems">
            <summary>
            Gets the filtered data
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.FilteredItemsCount">
            <summary>
            Gets the number of the filtered data
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.FiltersCount">
            <summary>
            Get the number of active filters
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenter`3.ActiveFiltersCount">
            <summary>
            Gets the number of active filters
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.Filter">
            <summary>
            Filters all the data based on the set up filters
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.InvalidateCore">
            <summary>
            Invalidates the data presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnItemAdded(Atom.Core.ItemAddedEventArgs{`2,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnItemAddedCore(Atom.Core.ItemAddedEventArgs{`2,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`2,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnItemRemovedCore(Atom.Core.ItemRemovedEventArgs{`2,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{`2,`1})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnItemReplacedCore(Atom.Core.ItemReplacedEventArgs{`2,`1})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`2,`1})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnItemsClearedCore(Atom.Core.ItemsClearedEventArgs{`2,`1})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.AddFilterCheckBox(Atom.Windows.Controls.CheckBox)">
            <summary>
            Adds the specified <paramref name="filterCheckBox"/> to the filters container
            </summary>
            <param name="filterCheckBox">The filter to add</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.PlaceSearchInput(Atom.Windows.Controls.SearchInput)">
            <summary>
            Places the specified <paramref name="input"/> in the control
            </summary>
            <param name="input">search input</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.ValidateSearchConditions">
            <summary>
            Checks whether or not the user suits the search conditions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.CreateFilterCheckBox(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.CheckBox"/> that's used for filtering purposes
            </summary>
            <param name="filterName">The name of the filter that the check box represents</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnFilterApplied">
            <summary>
            Handles the filtering aftermath
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.OnBorderThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.BorderThickness"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.GetEnabledFilterDelegates">
            <summary>
            Gets the delegates of the filters that are enabled
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.FilterModel(`2,System.Collections.Generic.List{System.Func{`2,System.Boolean}})">
            <summary>
            Filters the specified <paramref name="model"/> and returns a flag
            indicating whether the <paramref name="model"/> should be shown or not
            </summary>
            <param name="model">The model to filter</param>
            <param name="filterDelegates">The filter delegates to filter against</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenter`3.FilterModel(`2)">
            <summary>
            Filters the specified <paramref name="model"/> and returns a flag
            indicating whether the <paramref name="model"/> should be shown or not
            </summary>
            <param name="model">The model to filter</param>
            <returns></returns>
        </member>
        <member name="E:Atom.Windows.Controls.StandardDataPresenter`3.SearchRequested">
            <summary>
            Fires every time the user presses Enter while having focused the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchInput"/> and the search conditions are suited
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.StandardDataPresenter`3.TypingFinished">
            <summary>
            Fires every time the user finishes typing in the <see cref="P:Atom.Windows.Controls.StandardDataPresenter`3.SearchInput"/> and the search conditions are suited
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DataGrid`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ConventionalDataPresenter`3"/> that takes the form of a data grid view
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <typeparam name="TDataGridRow">The type of the data grid row</typeparam>
            <typeparam name="TDataPresenter">The type of the data presenter, used for chaining the configuration methods</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DataGrid`3.ComponentsContainer">
            <summary>
            The container that contains all the components
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataGrid`3.ColumnsContainer">
            <summary>
            The container that contains the column headers
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataGrid`3.OptionsTitle">
            <summary>
            The options title
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataGrid`3.RowsContainer">
            <summary>
            The container that contains all the rows
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataGrid`3.RowsHeight">
            <summary>
            The height of the <see cref="T:Atom.Windows.Controls.DataGridRow`1"/>s
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataGrid`3.RowsHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DataGrid`3.RowsHeight"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.CreateDataContainer">
            <summary>
            Creates and returns the data container
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.GetStandardTitles">
            <summary>
            Gets all the titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.AddStandardTitleCore(Atom.Core.TitleData)">
            <summary>
            Creates and adds the required titles and then returns an enumerable with the added <see cref="T:Atom.Windows.Controls.Title"/>s
            </summary>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.RemoveStandardTitleCore(Atom.Core.TitleData)">
            <summary>
            Removes all the titles related to the specified <paramref name="titleData"/>
            </summary>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.GetFormulaTitles">
            <summary>
            Gets all the formula titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.AddFormulaTitleCore(Atom.Core.Formula)">
            <summary>
            Creates and adds the required formula titles and then returns an enumerable with the added <see cref="T:Atom.Windows.Controls.FormulaTitle"/>s
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.RemoveFormulaTitleCore(Atom.Core.Formula)">
            <summary>
            Removes all the titles related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnItemAddedCore(Atom.Core.ItemAddedEventArgs{`2,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnItemAddedInternal(Atom.Core.ItemAddedEventArgs{`2,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnItemRemovedCore(Atom.Core.ItemRemovedEventArgs{`2,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnItemRemovedInternal(Atom.Core.ItemRemovedEventArgs{`2,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnItemReplacedCore(Atom.Core.ItemReplacedEventArgs{`2,`1})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnItemReplacedInternal(Atom.Core.ItemReplacedEventArgs{`2,`1})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnDataSorted">
            <summary>
            Handles the sorting aftermath
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnFilterApplied">
            <summary>
            Handles the filtering aftermath
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnOptionAdded(Atom.Windows.Controls.OptionMap{`0,`1,`2})">
            <summary>
            Handles the addition of an option
            </summary>
            <param name="optionMap">The option map related with the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.OnOptionRemoved(Atom.Windows.Controls.OptionMap{`0,`1,`2})">
            <summary>
            Handles the removal of an option
            </summary>
            <param name="optionMap">The option map related with the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`3.InitializeComponent">
            <summary>
            Initializes the components
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DataGrid`1">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.DataGrid`3"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGrid`1.CreateComponent(`0)">
            <summary>
            Creates a component that represents the <paramref name="model"/>
            </summary>
            <param name="model">The model that the component represents</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.CollapsibleDataGrid`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DataGrid`1"/> that has the ability to present sub elements at its rows
            </summary>
            <typeparam name="TCollapsibleDataGrid">The type of the collapsible data grid</typeparam>
            <typeparam name="TCollapsibleDataGridRow">The type of the collapsible data grid row</typeparam>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.Atom#Windows#Controls#ICollapsibleDataPresenter{TClass}#SetSubElement``2(System.Linq.Expressions.Expression{System.Func{`2,System.Object}},System.Func{Atom.Core.IDataComponent{`2},`2,``0},System.Action{Atom.Core.IDataComponent{`2},`2,``0},System.Action{``0,System.Boolean},System.Func{Atom.Core.IDataComponent{`2},`2,System.Threading.Tasks.Task{``1}},System.Action{Atom.Core.IDataComponent{`2},`2,``1})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="clickElementImplementationFactory">Creates and returns the element that when clicked reveals the sub element</param>
            <param name="clickElementStateUpdater">Update the element that when clicked reveals the sub element based on the value of the target property</param>
            <param name="clickElementUpdater">Update the element that when clicked reveals the sub element based on the sub element's visibility state</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetSubElement``2(System.Linq.Expressions.Expression{System.Func{`2,System.Object}},System.Func{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,``0},System.Action{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,``0},System.Action{``0,System.Boolean},System.Func{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,System.Threading.Tasks.Task{``1}},System.Action{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,``1})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="clickElementImplementationFactory">Creates and returns the element that when clicked reveals the sub element</param>
            <param name="clickElementStateUpdater">Update the element that when clicked reveals the sub element based on the value of the target property</param>
            <param name="clickElementUpdater">Update the element that when clicked reveals the sub element based on the sub element's visibility state</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.Atom#Windows#Controls#ICollapsibleDataPresenter{TClass}#UnsafeSetSubElement``2(System.Reflection.PropertyInfo,System.Func{Atom.Core.IDataComponent{`2},`2,``0},System.Action{Atom.Core.IDataComponent{`2},`2,``0},System.Action{``0,System.Boolean},System.Func{Atom.Core.IDataComponent{`2},`2,System.Threading.Tasks.Task{``1}},System.Action{Atom.Core.IDataComponent{`2},`2,``1})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="clickElementImplementationFactory">Creates and returns the element that when clicked reveals the sub element</param>
            <param name="clickElementStateUpdater">Update the element that when clicked reveals the sub element based on the value of the target property</param>
            <param name="clickElementUpdater">Update the element that when clicked reveals the sub element based on the sub element's visibility state</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.UnsafeSetSubElement``2(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,``0},System.Action{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,``0},System.Action{``0,System.Boolean},System.Func{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,System.Threading.Tasks.Task{``1}},System.Action{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,``1})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="clickElementImplementationFactory">Creates and returns the element that when clicked reveals the sub element</param>
            <param name="clickElementStateUpdater">Update the element that when clicked reveals the sub element based on the value of the target property</param>
            <param name="clickElementUpdater">Update the element that when clicked reveals the sub element based on the sub element's visibility state</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.Atom#Windows#Controls#ICollapsibleDataPresenter{TClass}#SetSubElement``1(System.Linq.Expressions.Expression{System.Func{`2,System.Object}},System.Func{`2,System.String},System.Func{Atom.Core.IDataComponent{`2},`2,System.Threading.Tasks.Task{``0}},System.Action{Atom.Core.IDataComponent{`2},`2,``0})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetSubElement``1(System.Linq.Expressions.Expression{System.Func{`2,System.Object}},System.Func{`2,System.String},System.Func{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,System.Threading.Tasks.Task{``0}},System.Action{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,``0})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.Atom#Windows#Controls#ICollapsibleDataPresenter{TClass}#UnsafeSetSubElement``1(System.Reflection.PropertyInfo,System.Func{`2,System.String},System.Func{Atom.Core.IDataComponent{`2},`2,System.Threading.Tasks.Task{``0}},System.Action{Atom.Core.IDataComponent{`2},`2,``0})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.UnsafeSetSubElement``1(System.Reflection.PropertyInfo,System.Func{`2,System.String},System.Func{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,System.Threading.Tasks.Task{``0}},System.Action{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,``0})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.Atom#Windows#Controls#ICollapsibleDataPresenter{TClass}#UnsafeSetSubElement(System.Reflection.PropertyInfo,System.Func{`2,System.String},System.Func{Atom.Core.IDataComponent{`2},`2,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.Action{Atom.Core.IDataComponent{`2},`2,System.Windows.FrameworkElement})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.UnsafeSetSubElement(System.Reflection.PropertyInfo,System.Func{`2,System.String},System.Func{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.Action{Atom.Windows.Controls.CollapsibleDataGridRow{`2},`2,System.Windows.FrameworkElement})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a sub element for the specified <paramref name="propertyInfo"/>
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="elementImplementationFactory">Creates and returns the sub element</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataPresenterSubElement``1(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{``0}}},System.Func{`2,System.String},System.Func{`2,Atom.Windows.Controls.IDataPresenter{``0}})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a presenter provided by the specified <paramref name="presenterImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the values</typeparam>
            <param name="propertySelector">
            Expression that selects a property from the <typeparamref name="TClass"/>
            NOTE: The value of the selected property is set as the items source of the data presenter!
            </param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="presenterImplementationFactory">
            Creates and returns a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/> that will be used for presenting the items of the property selected by the <paramref name="propertySelector"/>.
            NOTE: The presenter that is provided must have preset its shown columns!
            NOTE: The methods that provide such presenters are usually have the prefix "CreateDefault"!
                  Ex.: CreateDefaultProductDataGrid()
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataPresenterSubElement``1(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{``0}}},System.Func{`2,System.String},System.Func{`2,Atom.Windows.Controls.IDataPresenter{``0}},System.Action{Atom.Windows.Controls.IDataPresenter{``0},`2,Atom.Windows.Controls.IconButton})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a presenter provided by the specified <paramref name="presenterImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the values</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="presenterImplementationFactory">
            Creates and returns a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/> that will be used for presenting the items of the property selected by the <paramref name="propertySelector"/>.
            NOTE: The presenter that is provided must have preset its shown columns!
            NOTE: The methods that provide such presenters are usually have the prefix "CreateDefault"!
                  Ex.: CreateDefaultProductDataGrid()
            </param>
            <param name="optionButtonConfiguration">Action that configures the option button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataPresenterSubElement``1(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{``0}}},System.Func{`2,System.String},System.Func{`2,Atom.Windows.Controls.IDataPresenter{``0}},System.Func{System.Threading.Tasks.Task{Atom.Core.IFailable{Atom.Core.PreviewOptionsDataModel}}},System.Func{Atom.Core.PropertyMapper{``0}})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a presenter provided by the specified <paramref name="presenterImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the values</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="presenterImplementationFactory">
            Creates and returns a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/> that will be used for presenting the items of the property selected by the <paramref name="propertySelector"/>.
            NOTE: The presenter that is provided mustn't have any data pre-shown!
            NOTE: The data that must be shown will be retrieved by the <paramref name="previewOptionsRetriever"/>
            </param>
            <param name="previewOptionsRetriever">Retrieves the options that must be shown by the presenter</param>
            <param name="mapperRetriever">Retrieves the mapper used for getting the titles for the preview options</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataPresenterSubElement``1(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{``0}}},System.Func{`2,System.String},System.Func{`2,Atom.Windows.Controls.IDataPresenter{``0}},System.Func{System.Threading.Tasks.Task{Atom.Core.IFailable{Atom.Core.PreviewOptionsDataModel}}},System.Func{Atom.Core.PropertyMapper{``0}},System.Action{Atom.Windows.Controls.IDataPresenter{``0},`2,Atom.Windows.Controls.IconButton})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a presenter provided by the specified <paramref name="presenterImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the values</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="presenterImplementationFactory">
            Creates and returns a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/> that will be used for presenting the items of the property selected by the <paramref name="propertySelector"/>.
            NOTE: The presenter that is provided mustn't have any data pre-shown!
            NOTE: The data that must be shown will be retrieved by the <paramref name="previewOptionsRetriever"/>
            </param>
            <param name="previewOptionsRetriever">Retrieves the options that must be shown by the presenter</param>
            <param name="mapperRetriever">Retrieves the mapper used for getting the titles for the preview options</param>
            <param name="optionButtonConfiguration">Action that configures the option button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataPresenterSubElement``2(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{``0}}},System.Func{`2,System.String},System.Func{`2,System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``1}}}},System.Func{`2,Atom.Windows.Controls.IDataPresenter{``1}},System.Boolean)">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a presenter provided by the specified <paramref name="presenterImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the property values</typeparam>
            <typeparam name="TModel">The type of the models presented by the presenter</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="itemsRetriever">
            Uses the values provided by the selected property to retrieve the actual models that will be presented by the presenter
            </param>
            <param name="presenterImplementationFactory">
            Creates and returns a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/> that will be used for presenting the items of the property selected by the <paramref name="propertySelector"/>.
            NOTE: The presenter that is provided must have preset its shown columns!
            NOTE: The methods that provide such presenters are usually have the prefix "CreateDefault"!
                  Ex.: CreateDefaultProductDataGrid()
            </param>
            <param name="showLoadingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="itemsRetriever"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataPresenterSubElement``2(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{``0}}},System.Func{`2,System.String},System.Func{`2,System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``1}}}},System.Func{`2,Atom.Windows.Controls.IDataPresenter{``1}},System.Action{Atom.Windows.Controls.IDataPresenter{``1},`2,Atom.Windows.Controls.IconButton},System.Boolean)">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a presenter provided by the specified <paramref name="presenterImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the property values</typeparam>
            <typeparam name="TModel">The type of the models presented by the presenter</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="itemsRetriever">
            Uses the values provided by the selected property to retrieve the actual models that will be presented by the presenter
            </param>
            <param name="presenterImplementationFactory">
            Creates and returns a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/> that will be used for presenting the items of the property selected by the <paramref name="propertySelector"/>.
            NOTE: The presenter that is provided must have preset its shown columns!
            NOTE: The methods that provide such presenters are usually have the prefix "CreateDefault"!
                  Ex.: CreateDefaultProductDataGrid()
            </param>
            <param name="optionButtonConfiguration">Action that configures the option button</param>
            <param name="showLoadingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="itemsRetriever"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataPresenterSubElement``2(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{``0}}},System.Func{`2,System.String},System.Func{`2,System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``1}}}},System.Func{`2,Atom.Windows.Controls.IDataPresenter{``1}},System.Func{System.Threading.Tasks.Task{Atom.Core.IFailable{Atom.Core.PreviewOptionsDataModel}}},System.Func{Atom.Core.PropertyMapper{``1}},System.Boolean)">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a presenter provided by the specified <paramref name="presenterImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the property values</typeparam>
            <typeparam name="TModel">The type of the models presented by the presenter</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="itemsRetriever">
            Uses the values provided by the selected property to retrieve the actual models that will be presented by the presenter
            </param>
            <param name="presenterImplementationFactory">
            Creates and returns a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/> that will be used for presenting the items of the property selected by the <paramref name="propertySelector"/>.
            NOTE: The presenter that is provided mustn't have any data pre-shown!
            NOTE: The data that must be shown will be retrieved by the <paramref name="previewOptionsRetriever"/>
            </param>
            <param name="previewOptionsRetriever">Retrieves the options that must be shown by the presenter</param>
            <param name="mapperRetriever">Retrieves the mapper used for getting the titles for the preview options</param>
            <param name="showLoadingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="itemsRetriever"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataPresenterSubElement``2(System.Linq.Expressions.Expression{System.Func{`2,System.Collections.Generic.IEnumerable{``0}}},System.Func{`2,System.String},System.Func{`2,System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``1}}}},System.Func{`2,Atom.Windows.Controls.IDataPresenter{``1}},System.Func{System.Threading.Tasks.Task{Atom.Core.IFailable{Atom.Core.PreviewOptionsDataModel}}},System.Func{Atom.Core.PropertyMapper{``1}},System.Action{Atom.Windows.Controls.IDataPresenter{``1},`2,Atom.Windows.Controls.IconButton},System.Boolean)">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a presenter provided by the specified <paramref name="presenterImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the property values</typeparam>
            <typeparam name="TModel">The type of the models presented by the presenter</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="itemsRetriever">
            Uses the values provided by the selected property to retrieve the actual models that will be presented by the presenter
            </param>
            <param name="presenterImplementationFactory">
            Creates and returns a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/> that will be used for presenting the items of the property selected by the <paramref name="propertySelector"/>.
            NOTE: The presenter that is provided mustn't have any data pre-shown!
            NOTE: The data that must be shown will be retrieved by the <paramref name="previewOptionsRetriever"/>
            </param>
            <param name="previewOptionsRetriever">Retrieves the options that must be shown by the presenter</param>
            <param name="mapperRetriever">Retrieves the mapper used for getting the titles for the preview options</param>
            <param name="optionButtonConfiguration">Action that configures the option button</param>
            <param name="showLoadingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="itemsRetriever"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.SetDataFormSubElement``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.Func{`2,System.String},System.Func{`2,System.String},System.Func{`2,Atom.Windows.Controls.DataForm{``0}})">
            <summary>
            Creates a custom ui element using the <see cref="M:Atom.Windows.Controls.BaseDataPresenter`3.UnsafeSetCustomUIElement(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})"/>
            that when clicked reveals a form provided by the specified <paramref name="formImplementationFactory"/> for the property selected by the specified <paramref name="propertySelector"/>.
            </summary>
            <typeparam name="TKey">The type of the value</typeparam>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="textValueExtractor">Returns the value of the button that shows or hides the sub element</param>
            <param name="sectionTitleExtractor">Returns the title of the section that contains the form provided by the <paramref name="formImplementationFactory"/></param>
            <param name="formImplementationFactory">Creates and returns a <see cref="T:Atom.Windows.Controls.DataForm`2"/> that will be used for presenting the data</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.OnItemAddedInternal(Atom.Core.ItemAddedEventArgs{`2,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.OnItemRemovedInternal(Atom.Core.ItemRemovedEventArgs{`2,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.OnItemsClearedCore(Atom.Core.ItemsClearedEventArgs{`2,`1})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.DataPresenter">
            <summary>
            The data presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.OptionButton">
            <summary>
            The option button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.OptionButtonConfiguration">
            <summary>
            Configures the option button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.#ctor(Atom.Windows.Controls.IDataPresenter{`3},System.Action{Atom.Windows.Controls.IDataPresenter{`3},Atom.Windows.Controls.IconButton})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.SetItemsSource(System.Collections.Generic.IEnumerable{`3})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`3.CollapsibleDataGridDataPresenterContainerPage`1.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CollapsibleDataGrid`1">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.CollapsibleDataGrid`3"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGrid`1.CreateComponent(`0)">
            <summary>
            Creates a component that represents the <paramref name="model"/>
            </summary>
            <param name="model">The model that the component represents</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DataGridRow`1">
            <summary>
            A row for a <see cref="T:Atom.Windows.Controls.DataGrid`3"/> presenter
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DataGridRow`1.DataContainer">
            <summary>
            The container that contains all the data
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataGridRow`1.OptionsContainer">
            <summary>
            The options container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DataGridRow`1.RowHeight">
            <summary>
            The height of the <see cref="T:Atom.Windows.Controls.DataGridRow`1"/>s
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataGridRow`1.RowHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DataGridRow`1.RowHeight"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.#ctor(`0)">
            <summary>
            Default constructor
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="P:Atom.Windows.Controls.DataGridRow`1.Data">
            <summary>
            The data that is contained in the row
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.GetOptions">
            <summary>
            Gets all the registered options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.OnBackColorChangedCore">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnBackColorChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> and the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnAutoSetStateBackColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.BackgroundControl.BackColor"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.AddTitleElementCore(System.Windows.UIElement)">
            <summary>
            Adds the specified element to the component
            </summary>
            <param name="element">the element to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.RemoveTitleElementCore(System.Windows.UIElement)">
            <summary>
            Removes the specified <paramref name="element"/> from the data grid row
            </summary>
            <param name="element">The element to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.ReplaceTitleElementCore(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Replaces the <paramref name="oldElement"/> with the <paramref name="newElement"/>
            </summary>
            <param name="newElement">The new element</param>
            <param name="oldElement">The old element</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.AddOptionCore(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.Action{Atom.Windows.Controls.IOptionButton},System.String)">
            <summary>
            Adds an option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="info">The information related with the option</param>
            <param name="updater">The action responsible for updating the button</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.DisableOptionCore(System.String)">
            <summary>
            Disables the option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.EnableOptionCore(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridRow`1.RemoveOptionCore(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="T:Atom.Windows.Controls.CollapsibleDataGridRow`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DataGridRow`1"/> that has the ability so show extra content
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.CollapsibleDataGridRow`1.mClickToActualElementsMapper">
            <summary>
            Maps the click elements to their related elements.
            NOTE: The elements are mapped to the dictionary while using lazy loading after their initial creation!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.ClickElements">
            <summary>
            Contains all the buttons that when clicked show a collapsed element.
            The list is populated by the SetSubElement method.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.SelectedClickElement">
            <summary>
            The element that is selected and presents its content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.IndexRectangle">
            <summary>
            The index rectangle
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.ShownElement">
            <summary>
            The element that is currently being shown
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.ClickElement">
            <summary>
            The element that when clicked reveals the <see cref="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.ShownElement"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CollapsibleDataGridRow`1.IsSubElementVisiblePropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.CollapsibleDataGridRow`1.IsSubElementVisibleProperty"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGridRow`1.OnIsSubElementVisiblePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.IsSubElementVisible"/> property changes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CollapsibleDataGridRow`1.IsSubElementVisibleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.IsSubElementVisible"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.IsSubElementVisible">
            <summary>
            The background of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGridRow`1.#ctor(`0)">
            <summary>
            Default constructor
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGridRow`1.GetRelatedSubElementOrDefault(System.Windows.FrameworkElement)">
            <summary>
            Attempts to get the related element of the specified <paramref name="clickElement"/>
            </summary>
            <param name="clickElement">The click element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGridRow`1.ShowElement(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Shows the specified <paramref name="element"/>
            </summary>
            <param name="clickElement">The element that when clicked reveals the <paramref name="element"/></param>
            <param name="element">The element to show</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGridRow`1.HideElement">
            <summary>
            Hides the <see cref="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.ShownElement"/> if any
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGridRow`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleDataGridRow`1.OnIsSubElementVisibleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CollapsibleDataGridRow`1.IsSubElementVisible"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DataPresenterContants">
            <summary>
            Constants related to <see cref="T:Atom.Windows.Controls.BaseDataPresenter`3"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DataPresenterContants.DataGridRowHeight">
            <summary>
            The height of the <see cref="T:Atom.Windows.Controls.DataGridRow`1"/> components of the <see cref="T:Atom.Windows.Controls.DataGrid`3"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.PresenterHelpers">
            <summary>
            Helpers methods for the data presenters
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PresenterHelpers.SetOptions``1(Atom.Windows.Controls.IDataPresenter{``0},Atom.Core.PreviewOptionsDataModel,Atom.Core.PropertyMapper{``0})">
            <summary>
            Sets the specified <paramref name="options"/> to the specified <paramref name="presenter"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <param name="presenter">The presenter</param>
            <param name="options">The options</param>
            <param name="mapper">The mapper</param>
        </member>
        <member name="T:Atom.Windows.Controls.Tile`1">
            <summary>
            A tile for a <see cref="T:Atom.Windows.Controls.TilesPresenter`2"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.DataContainer">
            <summary>
            The container that contains all the data
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.OptionsStackPanel">
            <summary>
            The stack panel that contains the <see cref="P:Atom.Windows.Controls.Tile`1.OptionsTitle"/> and the <see cref="P:Atom.Windows.Controls.Tile`1.OptionsContainer"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.OptionsTitle">
            <summary>
            The options title
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.OptionsContainer">
            <summary>
            The options container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.TitleBorder">
            <summary>
            The border that contains the title
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.Title">
            <summary>
            The title of the tile
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Tile`1.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Tile`1.Title"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.OnTitlePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.Tile`1.Title"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.TitleForeground">
            <summary>
            The foreground of the tile
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Tile`1.TitleForegroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Tile`1.TitleForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.TitleBackground">
            <summary>
            The foreground of the tile
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Tile`1.TitleBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Tile`1.TitleBackground"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.#ctor(`0,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="model">The model</param>
            <param name="title">The title</param>
        </member>
        <member name="P:Atom.Windows.Controls.Tile`1.Data">
            <summary>
            The data that is contained in the row
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.GetOptions">
            <summary>
            Gets all the registered options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.AddTitleElementCore(System.Windows.UIElement)">
            <summary>
            Adds the specified element to the component
            </summary>
            <param name="element">the element to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.RemoveTitleElementCore(System.Windows.UIElement)">
            <summary>
            Removes the specified <paramref name="element"/> from the data component
            </summary>
            <param name="element">The element to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.ReplaceTitleElementCore(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Replaces the <paramref name="oldElement"/> with the <paramref name="newElement"/>
            </summary>
            <param name="newElement">The new element</param>
            <param name="oldElement">The old element</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.CreateStandardTitleUIElement(System.String,Atom.Core.TitleData)">
            <summary>
            Creates the standard data presentation ui element
            </summary>
            <param name="text">The text that should get presented</param>
            <param name="titleData">The title data associated with the property whose translated value is the <paramref name="text"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.UpdateTitleElementDataCore(System.Windows.UIElement,System.Object)">
            <summary>
            Updates the specified <paramref name="element"/> with the specified <paramref name="value"/>
            </summary>
            <param name="element">The element to update</param>
            <param name="value">The value to set to the element</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.AddOptionCore(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.Action{Atom.Windows.Controls.IOptionButton},System.String)">
            <summary>
            Adds an option with the specified <paramref name="id"/> internally
            </summary>
            <param name="id">The id of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="info">The information related with the option</param>
            <param name="updater">The action responsible for updating the button</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.DisableOptionCore(System.String)">
            <summary>
            Disables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.EnableOptionCore(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.RemoveOptionCore(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.OnTitleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.Tile`1.Title"/>
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.Tile`1.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BorderControl.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.TilesPresenter`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ConventionalDataPresenter`3"/> that takes the form of tiles
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <typeparam name="TDataPresenter">The type of the data presenter, used for chaining the configuration methods</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.TilesPresenter`2.mTitleTargetProperty">
            <summary>
            The property info that represents the property of the <typeparamref name="TClass"/> whose value 
            will be used as the <see cref="P:Atom.Windows.Controls.Tile`1.Title"/> of every <see cref="T:Atom.Windows.Controls.Tile`1"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TilesPresenter`2.DefaultLeftLineColor">
            <summary>
            The default left line fore color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TilesPresenter`2.mColorMaps">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.TilesPresenter`2.ColorMaps"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TilesPresenter`2.ColorMaps">
            <summary>
            The color maps
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TilesPresenter`2.ComponentsContainer">
            <summary>
            The container that contains all the components
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TilesPresenter`2.TilesContainer">
            <summary>
            The container that contains all the tiles
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TilesPresenter`2.TitlesContainer">
            <summary>
            The container that contains all the titles
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.UpdateAllTilesTitles">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.Tile`1.Title"/>s of all the tiles
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.UpdateTileTitle(Atom.Windows.Controls.Tile{`1})">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.Tile`1.Title"/> of the specified <paramref name="tile"/>
            </summary>
            <param name="tile">The tile whose title should get updated</param>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.UpdateAllTilesLeftLineColors">
            <summary>
            Updates the left line colors of the data presenters of all the tiles
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.UpdateTileLeftLineColors(Atom.Windows.Controls.Tile{`1})">
            <summary>
            Updates the left line colors of the data presenters of the specified <paramref name="tile"/>
            </summary>
            <param name="tile">The tile whose data presenters colors to update</param>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.SetTitle(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})">
            <summary>
            Sets the title to the tiles based on the value of the property selected by the <paramref name="targetPropertySelector"/>
            </summary>
            <param name="targetPropertySelector">The selector that selects the target property</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.ClearTitle">
            <summary>
            Clears the titles of the tiles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.SetDefaultLeftLineColor(System.Windows.Media.Color)">
            <summary>
            Sets the <see cref="T:System.Windows.Media.Color"/> that will be used as the left line color of the data presenter of the <see cref="T:Atom.Windows.Controls.Tile`1"/>s
            if the <see cref="P:Atom.Windows.Controls.TilesPresenter`2.ColorMaps"/> list doesn't contain a map for the property whose value is represented as a <see cref="T:System.Windows.UIElement"/>
            in the <see cref="T:Atom.Windows.Controls.Tile`1"/>
            </summary>
            <param name="color">The default color</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.SetLeftLineColor(System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Windows.Media.Color)">
            <summary>
            Sets a custom <see cref="T:System.Windows.Media.Color"/> to be used in the <see cref="T:System.Windows.UIElement"/> that presents the data of the property
            of the <typeparamref name="TClass"/> that is selected by the <paramref name="targetPropertySelector"/>
            </summary>
            <param name="targetPropertySelector">The selector that selects the target property</param>
            <param name="color">The color</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.CreateDataContainer">
            <summary>
            Creates and returns the data container
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.CreateComponent(`1)">
            <summary>
            Creates a component that represents the <paramref name="model"/>
            </summary>
            <param name="model">The model that the component represents</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.CalculateTitle(`1)">
            <summary>
            Calculates the title for the specified <paramref name="model"/>
            </summary>
            <param name="model">The model whose title to calculate</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.CalculateLeftLineColor(System.String)">
            <summary>
            Calculates the color of the left line based on the target property
            </summary>
            <param name="propertyName">The name of the target property</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.ModifyData(System.Reflection.PropertyInfo,`1,System.Object)">
            <summary>
            Further configures the already translated data before adding them to the <see cref="T:Atom.Windows.Controls.BaseDataComponent`1"/>.
            NOTE: This method can be used for creating a <see cref="T:System.Windows.UIElement"/> from the <paramref name="translatedData"/> and
                  then passing it to the <see cref="T:Atom.Windows.Controls.BaseDataComponent`1"/> using the 
                  <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.AddTitleElement(System.Object,Atom.Core.TitleData,System.Action{`0,System.Windows.UIElement})"/> method!
            </summary>
            <param name="propertyInfo">The property associated with the translated value</param>
            <param name="model">The model whose property value was translated</param>
            <param name="translatedData">The already translated data returned from the <see cref="P:Atom.Windows.Controls.BaseDataPresenter`3.Translator"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.OnUpdated(`1,Atom.Windows.Controls.Tile{`1},System.Int32)">
            <summary>
            Further updates the data of the element that presents the specified <paramref name="model"/>
            </summary>
            <param name="model">The model whose element values should get updated</param>
            <param name="component">The item that presents the data of the <paramref name="model"/></param>
            <param name="index">The index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.AddFilterCheckBox(Atom.Windows.Controls.CheckBox)">
            <summary>
            Adds the specified <paramref name="filterCheckBox"/> to the filters container
            </summary>
            <param name="filterCheckBox">The filter to add</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.GetStandardTitles">
            <summary>
            Gets all the titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.AddStandardTitleCore(Atom.Core.TitleData)">
            <summary>
            Creates and adds the required titles and then returns an enumerable with the added <see cref="T:Atom.Windows.Controls.Title"/>s
            </summary>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.RemoveStandardTitleCore(Atom.Core.TitleData)">
            <summary>
            Removes all the titles related to the specified <paramref name="titleData"/>
            </summary>
            <param name="titleData">The title data</param>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.GetFormulaTitles">
            <summary>
            Gets all the formula titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.AddFormulaTitleCore(Atom.Core.Formula)">
            <summary>
            Creates and adds the required formula titles and then returns an enumerable with the added <see cref="T:Atom.Windows.Controls.FormulaTitle"/>s
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.RemoveFormulaTitleCore(Atom.Core.Formula)">
            <summary>
            Removes all the titles related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`2.InitializeComponent">
            <summary>
            Initializes the component
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TilesPresenter`1">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.TilesPresenter`2"/>
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.TilesPresenter`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.MenuPlacement">
            <summary>
            All the available position that the menu can be placed
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.MenuPresenter">
            <summary>
            A content presenter that has a side menu
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.MenuStateButton">
            <summary>
            The button that shows or hides the menu
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.Separator">
            <summary>
            The separator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.HasMenuBeenLoaded">
            <summary>
            A flag indicating whether the menu has been loaded or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.Content">
            <summary>
            The ui element that's in between the bubble canvas and the content grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.MenuPresenter.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.MenuPresenter.Content"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuPresenter.Content"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.MenuContent">
            <summary>
            The ui element that's in between the bubble canvas and the content grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.MenuPresenter.MenuContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuContent"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuContent"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.IsOpen">
            <summary>
            A flag indicating whether the menu is open or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.MenuPresenter.IsOpenProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.MenuPresenter.IsOpen"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnIsOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuPresenter.IsOpen"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement">
            <summary>
            The ui element that's in between the bubble canvas and the content grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.MenuPresenter.MenuPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuPlacementPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.MenuAnimationDuration">
            <summary>
            The duration of the menu slide animation
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.MenuPresenter.MenuAnimationDurationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuAnimationDuration"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenter.MenuLocked">
            <summary>
            A flag indicating whether the menu is locked or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.MenuPresenter.MenuLockedProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuLocked"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuLockedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuLocked"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnContentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.Content"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuContentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuContent"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnIsOpenChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.IsOpen"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuLockedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuLocked"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.UpdateContentLocation">
            <summary>
            Sets the location of the <see cref="P:Atom.Windows.Controls.MenuPresenter.Content"/> in the <see cref="P:Atom.Windows.Controls.MenuPresenter.ContentGrid"/> based on the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.UpdateMenuContentLocation">
            <summary>
            Sets the location of the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuContent"/> in the <see cref="P:Atom.Windows.Controls.MenuPresenter.ContentGrid"/> based on the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.UpdateContentGridDefinitions">
            <summary>
            Updates the column and row definitions of the <see cref="P:Atom.Windows.Controls.MenuPresenter.ContentGrid"/> based on the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnContentChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.Content"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuContentChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuContent"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuLockedChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuLocked"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnMenuPlacementChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenter.OnIsOpenChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuPresenter.IsOpen"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.MenuPresenter.MenuPlacementChanged">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuPresenter.MenuPlacement"/> property changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.MenuPresenter.IsOpenChanged">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuPresenter.IsOpen"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.MenuPresenterSwitchButton">
            <summary>
            Button that is used by the <see cref="T:Atom.Windows.Controls.MenuPresenter"/> and is used to hide or show the menu
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.MenuPresenterSwitchButton.Menu">
            <summary>
            The menu content presenter that contains that button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenterSwitchButton.#ctor(Atom.Windows.Controls.MenuPresenter)">
            <summary>
            Default constructor
            </summary>
            <param name="menu">The menu content presenter that contains this button</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuPresenterSwitchButton.Update">
            <summary>
            Updates the menu state button
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NavigationBar`2">
            <summary>
            A navigation bar
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <typeparam name="TNavigationBarButton">The type of the navigation bar buttons</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TNavigationBarButton"/> that is associate with the inserted <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`2.RemoveAfter(`0)">
            <summary>
            Removes all the items placed after the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`2.GetAfter(`0)">
            <summary>
            Gets all the items placed after the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`2.AddUIElement(`1,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`2.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NavigationBar`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.NavigationBar`2"/> that uses the default navigation bar buttons
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`1.#ctor(System.Func{`0,Atom.Windows.Controls.NavigationBarButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.NavigationBarButton"/> that is associate with the inserted <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar`1.AddUIElement(Atom.Windows.Controls.NavigationBarButton,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="elementToAdd">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="T:Atom.Windows.Controls.NavigationBar">
            <summary>
            A navigation bar control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBar.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NavigationBarButtonHeightToCornerRadiousConverter">
            <summary>
            Converter that sets the corner radius of a navigation button based on its actual height and its existing corner radius
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NavigationBarButton">
            <summary>
            A button specifically themed for a navigation bar
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NavigationBarButton.Content">
            <summary>
            The content that the navigation bar button navigates to
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NavigationBarButton.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NavigationBarButton.Content"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NavigationBarButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NodeComponent`2">
            <summary>
            Node component used for creating a node tree with multiple sub branches
            </summary>
            <typeparam name="TNodeComponent">The type of the node component</typeparam>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.NodeComponent`2.mModels">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.NodeComponent`2.Models"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.NodeComponent`2.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.IsRoot">
            <summary>
            A flag indicating whether this node is the route
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.ParentNode">
            <summary>
            The node that contains this node
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.Models">
            <summary>
            The models available for selection
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.Model">
            <summary>
            The selected model of the current node
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.ChildNodesRetriever">
            <summary>
            Uses the selected parent node model (that's the first inserted parameter)
            to retrieve the available child node models
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.Validator">
            <summary>
            The validator.
            NOTE: The validator uses the model of the current node and the models of the child nodes
                  to validate the state of the component!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.CurrentModelDropDownMenu">
            <summary>
            The current model drop down menu used for selecting the <see cref="P:Atom.Windows.Controls.NodeComponent`2.Model"/> model
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.DeleteButton">
            <summary>
            The delete button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.ArrowIcon">
            <summary>
            The arrow icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.ChildNodesGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.NodeComponent`2.ChildNodesContainer"/> and the <see cref="P:Atom.Windows.Controls.NodeComponent`2.AddButton"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.ChildNodesContainer">
            <summary>
            The child nodes container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.AddButtonContainer">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.NodeComponent`2.AddButton"/>.
            NOTE: This is used with a fixed with to keep the add button fixed
                  at the center directly bellow the child nodes that are created
                  by it!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.AddButton">
            <summary>
            The add button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.NodePath">
            <summary>
            The selected file name
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NodeComponent`2.NodePathProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NodeComponent`2.NodePath"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.OnNodePathPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.NodeComponent`2.NodePath"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodeComponent`2.Orientation">
            <summary>
            The orientation
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NodeComponent`2.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NodeComponent`2.Orientation"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.NodeComponent`2.Orientation"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.#ctor(System.Collections.Generic.IEnumerable{`1},System.Func{`1,System.Collections.Generic.IEnumerable{`1}},System.Func{`1,System.String},System.Func{`1,System.Collections.Generic.IEnumerable{`1},System.Boolean},`0)">
            <summary>
            Default constructor
            </summary>
            <param name="models">The models available for selection</param>
            <param name="childNodesRetriever">
            Uses the selected parent node model (that's the first inserted parameter)
            to retrieve the available child node models
            </param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="validator">
            The validator.
            NOTE: The validator uses the model of the current node and the models of the child nodes
                  to validate the state of the component!
            </param>
            <param name="parentNode">The node that contains this node</param>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.Validate">
            <summary>
            Validates the state of the component
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.GetRoot">
            <summary>
            Gets the root node
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.GetSameLevelNodes">
            <summary>
            Gets the nodes placed at the same level
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.GetNodePath(`0)">
            <summary>
            Gets the node path starting from the specified <paramref name="node"/>
            </summary>
            <param name="node">The node</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.CreateChildNode(System.Collections.Generic.IEnumerable{`1},System.Func{`1,System.Collections.Generic.IEnumerable{`1}},System.Func{`1,System.String},System.Func{`1,System.Collections.Generic.IEnumerable{`1},System.Boolean},`0)">
            <summary>
            Creates and returns a node component
            </summary>
            <param name="models">The models available for selection</param>
            <param name="childNodesRetriever">
            Uses the selected parent node model (that's the first inserted parameter)
            to retrieve the available child node models
            </param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="validator">
            The validator.
            NOTE: The validator uses the model of the current node and the models of the child nodes
                  to validate the state of the component!
            </param>
            <param name="parentNode">The node that contains this node</param>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.OnNodePathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.NodeComponent`2.NodePath"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.OnNodePathChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.NodeComponent`2.NodePath"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.OnOrientationChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.NodeComponent`2.Orientation"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`2.GetNodePathInternal(Atom.Windows.Controls.NodeComponent{`0,`1},Atom.Windows.Controls.NodePath{`1},System.Int32)">
            <summary>
            Used to recursively create the node path of the specified <paramref name="node"/>
            </summary>
            <param name="node">The node</param>
            <param name="nodePath">The node path of the node</param>
            <param name="index">The current node index</param>
            <returns></returns>
        </member>
        <member name="E:Atom.Windows.Controls.NodeComponent`2.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.NodeComponent`2.NodePath"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NodeComponent`1">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.NodeComponent`2"/>
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.Collections.Generic.IEnumerable{`0}},System.Func{`0,System.String},System.Func{`0,System.Collections.Generic.IEnumerable{`0},System.Boolean},Atom.Windows.Controls.NodeComponent{`0})">
            <summary>
            Default constructor
            </summary>
            <param name="models">The models available for selection</param>
            <param name="childNodesRetriever">
            Uses the selected parent node model (that's the first inserted parameter)
            to retrieve the available child node models
            </param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="validator">
            The validator.
            NOTE: The validator uses the model of the current node and the models of the child nodes
                  to validate the state of the component!
            </param>
            <param name="parentNode">The node that contains this node</param>
        </member>
        <member name="M:Atom.Windows.Controls.NodeComponent`1.CreateChildNode(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.Collections.Generic.IEnumerable{`0}},System.Func{`0,System.String},System.Func{`0,System.Collections.Generic.IEnumerable{`0},System.Boolean},Atom.Windows.Controls.NodeComponent{`0})">
            <summary>
            Creates and returns a node component
            </summary>
            <param name="models">The models available for selection</param>
            <param name="childNodesRetriever">
            Uses the selected parent node model (that's the first inserted parameter)
            to retrieve the available child node models
            </param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="validator">
            The validator.
            NOTE: The validator uses the model of the current node and the models of the child nodes
                  to validate the state of the component!
            </param>
            <param name="parentNode">The node that contains this node</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.NodePath`1">
            <summary>
            Represents a node of node tree
            </summary>
            <typeparam name="TClass">The type of models</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.NodePath`1.mNodes">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.NodePath`1.Nodes"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodePath`1.Model">
            <summary>
            The current node
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodePath`1.Nodes">
            <summary>
            The child nodes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodePath`1.Index">
            <summary>
            The node index level
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodePath`1.DistinctModels">
            <summary>
            Gets all the models that are a part of the node path.
            NOTE: A distinct selection of models is applied, meaning that if a model
                  appears multiple times, it will only be selected once!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodePath`1.Models">
            <summary>
            Gets all the models that are a part of the node path.
            NOTE: The models appear to the result as many times as they appear
                  to the node path!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NodePath`1.Pairs">
            <summary>
            Gets all the pairs
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NodePath`1.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NodePath`1.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NodePath`1.Equals(Atom.Windows.Controls.NodePath{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NodePath`1.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PropertyPathNodeComponent">
            <summary>
            Component node that can be chained with other nodes to generate property paths
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.PropertyPathNodeComponent.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.ParentNode">
            <summary>
            The node that contains this node
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.Type">
            <summary>
            The type
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.IsEnumerable">
            <summary>
            A flag indicating if the <see cref="P:Atom.Windows.Controls.PropertyPathNodeComponent.Type"/> is an enumerable or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.NonEnumerableType">
            <summary>
            The non enumerable <see cref="P:Atom.Windows.Controls.PropertyPathNodeComponent.Type"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.Property">
            <summary>
            The selected property of the <see cref="P:Atom.Windows.Controls.PropertyPathNodeComponent.NonEnumerableType"/> if any
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.RootPropertyDropDownMenu">
            <summary>
            The drop down menu for the root property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.ArrowIcon">
            <summary>
            The arrow icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.ChildNode">
            <summary>
            The node component
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyPathNodeComponent.ParentPath">
            <summary>
            The parent path from this node to its children
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyPathNodeComponent.ParentPathProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyPathNodeComponent.ParentPath"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponent.OnParentPathPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.PropertyPathNodeComponent.ParentPath"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponent.#ctor(System.Type,Atom.Windows.Controls.PropertyPathNodeComponent)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponent.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponent.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponent.OnParentPathChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.PropertyPathNodeComponent.ParentPath"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponent.InvalidateParentPaths">
            <summary>
            Updates the current node and its parent nodes parent paths
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyPathNodeComponent.OnParentPathChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.PropertyPathNodeComponent.ParentPath"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.PropertyPathNodeComponent.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.PropertyPathNodeComponent.ParentPath"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CollapsibleOptionsContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CircularItemsControl`1"/> used for presenting <see cref="T:Atom.Windows.Controls.CollapsibleOptionsContainerOptionButton"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleOptionsContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleOptionsContainer.OptionsCount">
            <summary>
            Gets the number of options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleOptionsContainer.Options">
            <summary>
            The registered options
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleOptionsContainer.AddOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Adds an option button
            </summary>
            <param name="id">The identifier of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="pathData">The source for the svg image</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleOptionsContainer.GetOption(System.String)">
            <summary>
            Gets the option button related to the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The identifier of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleOptionsContainer.DisableOption(System.String)">
            <summary>
            Disables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleOptionsContainer.EnableOption(System.String)">
            <summary>
            Enables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleOptionsContainer.RemoveOption(System.String)">
            <summary>
            Removes the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="T:Atom.Windows.Controls.CollapsibleOptionsContainerOptionButton">
            <summary>
            An option button for a <see cref="T:Atom.Windows.Controls.CollapsibleOptionsContainer"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleOptionsContainerOptionButton.Container">
            <summary>
            The container that contains the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleOptionsContainerOptionButton.Element">
            <summary>
            The element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleOptionsContainerOptionButton.OptionId">
            <summary>
            The identifier of the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleOptionsContainerOptionButton.MetaData">
            <summary>
            Meta data related to the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleOptionsContainerOptionButton.Info">
            <summary>
            The info related to the option
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleOptionsContainerOptionButton.#ctor(System.String,Atom.Windows.Controls.IOptionsContainer,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Default constructor
            </summary>
            <param name="id">The identifier of the option</param>
            <param name="container">The container that contains the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
        </member>
        <member name="T:Atom.Windows.Controls.IOptionButton">
            <summary>
            Provides abstractions for an option button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.Container">
            <summary>
            The container that contains the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.Element">
            <summary>
            The element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.OptionId">
            <summary>
            The identifier of the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.MetaData">
            <summary>
            Meta data related to the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.Info">
            <summary>
            The info related to the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.IsEnabled">
            <summary>
            A flag indicating whether the button is enabled or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.Selected">
            <summary>
            A flag indicating whether the button is selected or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.PathData">
            <summary>
            The path data
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.BackColor">
            <summary>
            The back color
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.ForeColor">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.SelectedBackColor">
            <summary>
            The selected back color
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionButton.SelectedForeColor">
            <summary>
            The selected for color
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.IOptionsContainer">
            <summary>
            Provides abstractions for an options container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionsContainer.Element">
            <summary>
            The container element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionsContainer.OptionsCount">
            <summary>
            Gets the number of registered options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IOptionsContainer.Options">
            <summary>
            The registered options
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainer.AddOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Adds an option button
            </summary>
            <param name="id">The identifier of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainer.GetOption(System.String)">
            <summary>
            Gets the option button related to the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainer.DisableOption(System.String)">
            <summary>
            Disables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainer.EnableOption(System.String)">
            <summary>
            Enables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainer.RemoveOption(System.String)">
            <summary>
            Removes the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
        </member>
        <member name="T:Atom.Windows.Controls.IOptionsContainerExtensions">
            <summary>
            Extension methods for <see cref="T:Atom.Windows.Controls.IOptionsContainer"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainerExtensions.AddSettingsOption(Atom.Windows.Controls.IOptionsContainer,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String)">
            <summary>
            Creates and adds an settings option to the specified <paramref name="container"/>.
            Localization
            </summary>
            <param name="container">The container</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="info">The information</param>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainerExtensions.AddExcelExportOption(Atom.Windows.Controls.IOptionsContainer,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.String)">
            <summary>
            Creates and adds an excel export option to the specified <paramref name="container"/>.
            Localization
            </summary>
            <param name="container">The container</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="info">The information</param>
            <param name="pathData">The path data of the icon</param>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainerExtensions.AddDaySpanLimitOption(Atom.Windows.Controls.IOptionsContainer,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String)">
            <summary>
            Creates and adds a day span limit option to the specified <paramref name="container"/>.
            Localization
            </summary>
            <param name="container">The container</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="info">The information</param>
            <param name="id">The id of the option</param>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainerExtensions.AddDaySpanLimitOption(Atom.Windows.Controls.IOptionsContainer,System.Linq.Expressions.Expression{System.Func{System.Nullable{Atom.Core.DaySpan}}},System.Action{System.Nullable{Atom.Core.DaySpan}},System.String,System.String)">
            <summary>
            Creates and adds a day span limit option to the specified <paramref name="container"/>
            Localization
            </summary>
            <param name="container">The container</param>
            <param name="propertySelector">Selects the property that stores the selected day span</param>
            <param name="daySpanChangedHandler">Handles the change of the days pan</param>
            <param name="id">The id of the option</param>
            <param name="info">The information</param>
        </member>
        <member name="M:Atom.Windows.Controls.IOptionsContainerExtensions.AddExitOption(Atom.Windows.Controls.IOptionsContainer,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String)">
            <summary>
            Creates and adds an exit option to the specified <paramref name="container"/>
            Localization
            </summary>
            <param name="container">The container</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="id">The id of the option</param>
            <param name="info">The information</param>
        </member>
        <member name="T:Atom.Windows.Controls.OptionConstants">
            <summary>
            Constants related to options
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionConstants.EditOptionId">
            <summary>
            The id of the edit options.
            NOTE: Use the <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.GetOption(System.String)"/>
                  with this id to retrieve the related option!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionConstants.DeleteOptionId">
            <summary>
            The id of the delete options.
            NOTE: Use the <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.GetOption(System.String)"/>
                  with this id to retrieve the related option!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionConstants.OpenOptionId">
            <summary>
            The id of the open options.
            NOTE: Use the <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.GetOption(System.String)"/>
                  with this id to retrieve the related option!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionConstants.UpOptionId">
            <summary>
            The id of the up options.
            NOTE: Use the <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.GetOption(System.String)"/>
                  with this id to retrieve the related option!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionConstants.DownOptionId">
            <summary>
            The id of the down options.
            NOTE: Use the <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.GetOption(System.String)"/>
                  with this id to retrieve the related option!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionConstants.SelectOptionId">
            <summary>
            The id of the select options.
            NOTE: Use the <see cref="M:Atom.Windows.Controls.BaseDataComponent`1.GetOption(System.String)"/>
                  with this id to retrieve the related option!
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.OptionsContainer">
            <summary>
            A container that contains options in a form of <see cref="T:Atom.Windows.Controls.IconAndTextButton"/>s
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.Element">
            <summary>
            The container element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.OptionButtonsContainer">
            <summary>
            The uniform grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.ButtonsHeight">
            <summary>
            The height of the buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsContainer.ButtonsHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OptionsContainer.ButtonsHeight"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.OnButtonsHeightPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.OptionsContainer.ButtonsHeight"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.ButtonsWidth">
            <summary>
            The height of the buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsContainer.ButtonsWidthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OptionsContainer.ButtonsWidth"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.OnButtonsWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.OptionsContainer.ButtonsWidth"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.BorderBrush">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsContainer.BorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OptionsContainer.BorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.BorderThickness">
            <summary>
            The thickness of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsContainer.BorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OptionsContainer.BorderThickness"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.OnBorderThicknessPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.OptionsContainer.BorderThickness"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.CornerRadius">
            <summary>
            The corner radius of the border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsContainer.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OptionsContainer.CornerRadius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.OnCornerRadiusPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the corner radius property <see cref="P:Atom.Windows.Controls.OptionsContainer.CornerRadius"/> property changed
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.OptionsCount">
            <summary>
            Gets the number of the options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsContainer.Options">
            <summary>
            The registered options
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.AddOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Adds an option button
            </summary>
            <param name="id">The identifier of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.AddOption(Atom.Windows.Controls.OptionButton)">
            <summary>
            Adds the specified <paramref name="button"/>
            </summary>
            <param name="button">The button</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.GetOption(System.String)">
            <summary>
            Gets the option button related to the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The identifier of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.DisableOption(System.String)">
            <summary>
            Disables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.EnableOption(System.String)">
            <summary>
            Enables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.RemoveOption(System.String)">
            <summary>
            Removes the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.OnButtonsHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.OptionsContainer.ButtonsHeight"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.OnButtonsWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.OptionsContainer.ButtonsWidth"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.OnBorderThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.OptionsContainer.BorderThickness"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsContainer.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.OptionsContainer.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.OptionsUniformGridItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.UniformGridItemsControl"/> used for presenting multiple <see cref="T:Atom.Windows.Controls.OptionButton"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsUniformGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsUniformGridItemsControl.Update">
            <summary>
            Updates the container
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsUniformGridItemsControl.OnItemAdded(Atom.Core.ItemAddedEventArgs{Atom.Windows.Controls.OptionButton,Atom.Windows.Controls.OptionButton})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsUniformGridItemsControl.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{Atom.Windows.Controls.OptionButton,Atom.Windows.Controls.OptionButton})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsUniformGridItemsControl.OnItemMoved(Atom.Core.ItemMovedEventArgs{Atom.Windows.Controls.OptionButton,Atom.Windows.Controls.OptionButton})">
            <summary>
            Handles the move of two items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsUniformGridItemsControl.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{Atom.Windows.Controls.OptionButton,Atom.Windows.Controls.OptionButton})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.OptionButton">
            <summary>
            A <see cref="T:Atom.Windows.Controls.IconAndTextButton"/> personalized to look like an option button
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionButton.mCurrentIndex">
            <summary>
            The current index of the button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionButton.Container">
            <summary>
            The container that contains the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionButton.Element">
            <summary>
            The element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionButton.OptionId">
            <summary>
            The identifier of the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionButton.MetaData">
            <summary>
            Meta data related to the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionButton.Info">
            <summary>
            The info related to the option
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionButton.#ctor(System.String,Atom.Windows.Controls.IOptionsContainer,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Default constructor
            </summary>
            <param name="id">The identifier of the option</param>
            <param name="container">The container that contains the option</param>
            <param name="command">The command of the option</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionButton.CreateFirstContentElement">
            <summary>
            Creates and returns the first content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the cursor enters this element
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the cursor leaves this element
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Atom.Windows.Controls.Section`1">
            <summary>
            A section control
            </summary>
            <typeparam name="TContent">The type of the content the section contains</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.Section`1.SectionInfoGrid">
            <summary>
            The grid that contains the content of the section info
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Section`1.SectionInfoTextBlock">
            <summary>
            The textblock that displays general information about the section
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Section`1.GeneralInfoGrid">
            <summary>
            The grid that contains the general info
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Section`1.Content">
            <summary>
            The content that the section contains
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Section`1.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Section`1.Content"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Section`1.Title">
            <summary>
            The title of the section
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Section`1.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Section`1.Title"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Section`1.Padding">
            <summary>
            The padding of the section
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Section`1.PaddingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Section`1.Padding"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Section`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Section`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.Section">
            <summary>
            A <see cref="T:Atom.Windows.Controls.Section`1"/> that uses <see cref="T:System.Windows.UIElement"/> as the type of its content
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.OptionsSelectionForm`2">
            <summary>
            Form that allows the user to configure and select options of any type
            </summary>
            <typeparam name="TOptionsSelectionForm">The type of the options selection form</typeparam>
            <typeparam name="TOption">The type of the options</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsSelectionForm`2.mMapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsSelectionForm`2.mFormInputsToCategoriesMapper">
            <summary>
            Maps the form inputs to their related categories
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.Forms">
            <summary>
            The presenter forms
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.SearchInput">
            <summary>
            The search input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.MainItemsControl">
            <summary>
            The items control that contains all the other item controls
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.Options">
            <summary>
            The presented options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.CheckBoxesText">
            <summary>
            Extracts the <see cref="T:System.String"/> that will be presented at the option check box
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.SearchEnabled">
            <summary>
            A flag indicating whether search is enabled or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsSelectionForm`2.SearchEnabledProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OptionsSelectionForm`2.SearchEnabled"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.Columns">
            <summary>
            The number of columns of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsSelectionForm`2.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OptionsSelectionForm`2.Columns"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionForm`2.Rows">
            <summary>
            The number of rows of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OptionsSelectionForm`2.RowsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OptionsSelectionForm`2.Rows"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.#ctor(System.String)">
            <summary>
            Default constructor
            Localization
            </summary>
            <param name="checkBoxesText">The text of the check boxes</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.ShowOption(`1,System.String,System.String,System.String,System.Boolean,System.Windows.Media.Color)">
            <summary>
            Shows the specified <paramref name="option"/> for selection
            </summary>
            <param name="option">The option</param>
            <param name="title">The title</param>
            <param name="categoryName">The category name</param>
            <param name="description">The description</param>
            <param name="preSelected">A flag indicating whether the option is preselected or not</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.ShowOption(`1,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Shows the specified <paramref name="option"/> for selection
            </summary>
            <param name="option">The option</param>
            <param name="title">The title</param>
            <param name="categoryName">The category name</param>
            <param name="description">The description</param>
            <param name="preSelected">A flag indicating whether the option is preselected or not</param>
            <param name="color">The hex value of the color</param>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.GetOptions">
            <summary>
            Gets the options selected by the user
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.CreateMainItemsControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.OptionsSelectionForm`2.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.CreateInnerItemsControl(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.DataForm`2.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.CreateUncategorizedInnerItemsControl">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.DataForm`2.MainItemsControl"/>
            and will be used for storing elements that are not categorized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`2.AddFormInputCore(Atom.Windows.Controls.CheckBoxInputContainer,System.String)">
            <summary>
            Adds the specified <paramref name="formInput"/> in the <see cref="P:Atom.Windows.Controls.OptionsSelectionForm`2.MainItemsControl"/>
            </summary>
            <param name="formInput">The form input</param>
            <param name="categoryName">The category name</param>
        </member>
        <member name="T:Atom.Windows.Controls.OptionsSelectionForm`1">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.OptionsSelectionForm`2"/>
            </summary>
            <typeparam name="TOption">The type of the options</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionForm`1.#ctor(System.String)">
            <summary>
            Default constructor
            Localization
            </summary>
            <param name="checkBoxesText">The text of the check boxes</param>
        </member>
        <member name="T:Atom.Windows.Controls.PropertyShortcodeComponent`3">
            <summary>
            Used for configuring and creating a custom shortcode
            </summary>
            <typeparam name="TPropertyShortcodeComponent">The type of the property shortcode component</typeparam>
            <typeparam name="TPropertyShortcodeValueTranslatorComponent">The type of the property shortcode value translator component</typeparam>
            <typeparam name="TPropertyShortcodeFilterComponent">The type of the property shortcode filter component</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.mOptions">
            <summary>
            The custom shortcode options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Instance">
            <summary>
            The base instance, that's the one that it or any of its sub-properties contain the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Property"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.InstanceType">
            <summary>
            The type of the instance that contains all the shortcode information
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Property">
            <summary>
            The property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.PropertyValue">
            <summary>
            An instance of the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.PropertyType"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.PropertyType">
            <summary>
            The type of the instance whose properties are used for creating custom shortcodes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.ParentPath">
            <summary>
            The parent path.
            NOTE: This is used for shortcodes of a property of a sub-property and so on, of the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.PropertyType"/>!
            NOTE: This is set to <see cref="!:null"/> when the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.PropertyType"/> is the base!
            Ex: FirstLevelProperty.SecondLevelProperty
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.CompleteParentPath">
            <summary>
            The complete parent path
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NonEnumerableType">
            <summary>
            The non-enumerable type.
            NOTE: In case the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.PropertyType"/> is an <see cref="T:System.Collections.Generic.IEnumerable`1"/> then its T, otherwise it's the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.PropertyType"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NonNullableType">
            <summary>
            The non-nullable type of the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NonEnumerableType"/>.
            NOTE: If the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NonEnumerableType"/> isn't of type <see cref="T:System.Nullable`1"/>
                  then the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NonNullableType"/> is the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NonEnumerableType"/>!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NonEnumerableInstance">
            <summary>
            The non enumerable value
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.IsEnumerable">
            <summary>
            A flag indicating whether the target property is an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Linker">
            <summary>
            Creates or extracts the <see cref="T:Atom.Windows.Controls.ShortcodePresenter"/> that is associate with the inserted <see cref="T:Atom.Core.Shortcode"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.TitleTextBlock">
            <summary>
            The title textblock
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.ShortcodeNameInput">
            <summary>
            The input for the shortcode name
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.CategoryNameInput">
            <summary>
            The name of the category
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NewLineAfterEveryItemInput">
            <summary>
            The input for the new line after every item flag
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.FallbackValueInput">
            <summary>
            The input for the fallback value
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.ColorInput">
            <summary>
            The input for the color
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.FormulaInput">
            <summary>
            The formula input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.DataPresenter">
            <summary>
            The container for the shortcodes created by the properties contained in the type of the specified <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.PropertyType"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.AddCustomShortcodeButton">
            <summary>
            The add custom shortcode button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.TranslatorsContainer">
            <summary>
            The container for the translators
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.AddTranslatorButton">
            <summary>
            The add translator button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.FiltersContainer">
            <summary>
            The container for the filters
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.AddFilterButton">
            <summary>
            The add filter button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.ShortcodeName">
            <summary>
            The name of the shortcode
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.ShortcodeNameProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.ShortcodeName"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.CategoryName">
            <summary>
            The name of the category
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.CategoryNameProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.CategoryName"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NewLineAfterEveryItem">
            <summary>
            If this is set to true a new line character is set after every item.
            NOTE: This applies only to enumerables!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.NewLineAfterEveryItemProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.NewLineAfterEveryItem"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.FallbackValue">
            <summary>
            The fallback value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.FallbackValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.FallbackValue"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Formula">
            <summary>
            A string value that represents the shortcode formula
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.FormulaProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Formula"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Color">
            <summary>
            The color of the shortcode
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.ColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Color"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Translators">
            <summary>
            The translators of the shortcode
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.TranslatorsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Translators"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Filters">
            <summary>
            The filters of the shortcode
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeComponent`3.FiltersProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Filters"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.#ctor(System.Object,System.Type,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="instance">The base instance, that's the one that it or any of its sub-properties contain the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Property"/></param>
            <param name="instanceType">The type of the instance that contains all the shortcode information</param>
            <param name="propertyInfo">The property info</param>
            <param name="parentPath">The parent path</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.#ctor(Atom.Core.PropertyShortcode,System.Type)">
            <summary>
            Shortcode based constructor
            </summary>
            <param name="shortcode">The shortcode</param>
            <param name="instanceType">The type of the instance that contains all the shortcode information</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Update">
            <summary>
            Updates all the custom shortcodes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Validate">
            <summary>
            Validates the state of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateShortcode">
            <summary>
            Creates and returns a <see cref="T:Atom.Core.PropertyShortcode"/> from the values inserted to the component.
            NOTE: The <see cref="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Validate"/> must be called before calling this method to ensure the validity of the inserted data!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.SetItemsSource(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Contains(Atom.Core.Shortcode)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.IndexOf(Atom.Core.Shortcode)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Add(Atom.Core.Shortcode)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.AddRange(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Insert(System.Int32,Atom.Core.Shortcode)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Remove(Atom.Core.Shortcode)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Replace(Atom.Core.Shortcode,Atom.Core.Shortcode)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.GetElement(Atom.Core.Shortcode)">
            <summary>
            Gets the <see cref="T:Atom.Windows.Controls.ShortcodePresenter"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.Get(Atom.Windows.Controls.ShortcodePresenter)">
            <summary>
            Returns the <see cref="T:Atom.Core.Shortcode"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.ContainsElement(Atom.Windows.Controls.ShortcodePresenter)">
            <summary>
            Checks if the items control contains the specified <paramref name="element"/>
            </summary>
            <param name="element">The element to check if exists</param>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeComponent`3.Elements">
            <summary>
            Gets the elements contained in the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateShortcodeComponent(System.Object,System.Type,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Creates and returns a shortcode component
            </summary>
            <param name="instance">The instance of the value of the property if any</param>
            <param name="instanceType">The type of the instance that contains all the shortcode information</param>
            <param name="propertyInfo">The property info</param>
            <param name="parentPath">The parent path</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateValueTranslatorComponent(System.Reflection.PropertyInfo)">
            <summary>
            Creates and returns a value translator component
            </summary>
            <param name="propertyInfo">The property of the shortcode that the translator is created for</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateValueTranslatorComponent(Atom.Core.PropertyShortcodeValueTranslator,System.Reflection.PropertyInfo)">
            <summary>
            Creates and returns a value translator component
            </summary>
            <param name="translator">The translator</param>
            <param name="propertyInfo">The property of the shortcode that the translator is created for</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateFilterComponent(System.Type)">
            <summary>
            Creates and returns a property shortcode filter component
            </summary>
            <param name="nonEnumerableType">The type of the instance</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateFilterComponent(Atom.Core.PropertyShortcodeFilter,System.Type)">
            <summary>
            Creates and returns a property shortcode filter component
            </summary>
            <param name="nonEnumerableType">The type of the instance</param>
            <param name="filter">The filter</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.OnShortcodeCreated(Atom.Core.PropertyShortcode)">
            <summary>
            Handles the creation of a shortcode.
            NOTE: Override the <see cref="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateShortcode(Atom.Core.ShortcodeCreationEventArgs)"/>
                  method to provide a custom shortcode implementation!
            </summary>
            <param name="shortcode">The shortcode</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.OnCustomShortcodeAdded(Atom.Core.PropertyShortcode)">
            <summary>
            Handles the addition of a custom shortcode.
            NOTE: This method should be overridden to attach functionality to the shortcode
                  after its addition (ex. the data storage save) has been completed!
                  Ex. Attach a context menu to the shortcode.
            NOTE: This method is called both when a custom shortcode is created and on the
                  <see cref="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.OnInitialized(System.EventArgs)"/>
                  method where all the pre-existing custom shortcodes are retrieved and placed
                  in the container!
            </summary>
            <param name="shortcode">The shortcode</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.CreateShortcode(Atom.Core.ShortcodeCreationEventArgs)">
            <summary>
            Creates and returns a <see cref="T:Atom.Core.PropertyShortcode"/> from the specified <paramref name="e"/>
            </summary>
            <param name="e">The event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.GetShortcodeCategoryName(System.Reflection.PropertyInfo)">
            <summary>
            Gets the category name of the shortcode of the specified <paramref name="propertyInfo"/>
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.GetCustomShortcodesAsync">
            <summary>
            Gets the custom shortcodes related to the component
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Thrown when unable to retrieve the shortcodes</exception>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeComponent`3.OnShortcodeCreatedCore(Atom.Core.ShortcodeCreationEventArgs)">
            <summary>
            Handles the creation of a shortcode internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.PropertyShortcodeComponent`3.ShortcodeCreated">
            <summary>
            Fires every time a new shortcode gets created
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.PropertyShortcodeFilterComponent">
            <summary>
            A component for creating and updating <see cref="T:Atom.Core.PropertyShortcodeFilter"/>s
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.InstanceType">
            <summary>
            The type of the instance
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.PropertyInput">
            <summary>
            The property input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.ValueInput">
            <summary>
            The value input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.Property">
            <summary>
            The selected property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeFilterComponent.PropertyProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.Property"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.Value">
            <summary>
            The value that the <see cref="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.Property"/> should have
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeFilterComponent.ValueConversionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeFilterComponent.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeFilterComponent.#ctor(System.Type)">
            <summary>
            Default constructor
            </summary>
            <param name="nonEnumerableType">The type of the instance</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeFilterComponent.#ctor(Atom.Core.PropertyShortcodeFilter,System.Type)">
            <summary>
            Filter based constructor
            </summary>
            <param name="filter">The filter</param>
            <param name="nonEnumerableType">The type of the instance</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeFilterComponent.Validate">
            <summary>
            Validates the state of the control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeFilterComponent.CreatePropertyShortcodeFilter">
            <summary>
            Creates and returns a <see cref="T:Atom.Core.PropertyShortcodeFilter"/> from the values inserted to the component.
            NOTE: The <see cref="M:Atom.Windows.Controls.PropertyShortcodeFilterComponent.Validate"/> must be called before calling this method to ensure the validity of the inserted data!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeFilterComponent.UpdatePropertyShortcodeFilter(Atom.Core.PropertyShortcodeFilter)">
            <summary>
            Updates the specified <paramref name="filter"/> with the values inserted to the component.
            NOTE: The <see cref="M:Atom.Windows.Controls.PropertyShortcodeFilterComponent.Validate"/> must be called before calling this method to ensure the validity of the inserted data!
            </summary>
            <param name="filter">The filter</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeFilterComponent.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PropertyShortcodesTextInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ShortcodesTextInput"/> for creating formulas for properties
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodesTextInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodesTextInput.OnCreatedAndPlacedRequiredLabels(System.String,System.Int32,System.Int32)">
            <summary>
            Handles the creation and the addition of labels
            </summary>
            <param name="text">The text</param>
            <param name="lineNumber">The number of the line the text is placed</param>
            <param name="start">The index of the starting character of the <paramref name="text"/></param>
        </member>
        <member name="T:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent">
            <summary>
            A component for creating and updating <see cref="T:Atom.Core.PropertyShortcodeValueTranslator"/>s
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Property">
            <summary>
            The property of the shortcode that the translator is created for
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.PropertyType">
            <summary>
            The type of the instance whose properties are used for creating custom shortcodes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.NonEnumerableType">
            <summary>
            NOTE: In case the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.PropertyType"/> is an <see cref="T:System.Collections.Generic.IEnumerable`1"/> then its T, otherwise it's the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.PropertyType"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.IsEnumerable">
            <summary>
            A flag indicating whether the target property is an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Linker">
            <summary>
            Creates or extracts the <see cref="T:Atom.Windows.Controls.ShortcodePresenter"/> that is associate with the inserted <see cref="T:Atom.Core.Shortcode"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ValueConversionInput">
            <summary>
            The value conversion input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromValueInput">
            <summary>
            The value input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FormulaInput">
            <summary>
            The formula input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.DataPresenter">
            <summary>
            The container for the shortcodes created by the properties contained in the type of the specified <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.PropertyType"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementInput">
            <summary>
            The enable word replacement input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementOperationInput">
            <summary>
            The word replacement operation input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromWordInput">
            <summary>
            The from word input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ToWordInput">
            <summary>
            The to word input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ValueConversion">
            <summary>
            A flag indicating whether value conversion is enabled or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ValueConversionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ValueConversion"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromValue">
            <summary>
            The name of the shortcode
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromValue"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Formula">
            <summary>
            A string value that represents the translator formula
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FormulaProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Formula"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacement">
            <summary>
            A flag indicating whether word replacement is enabled or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacement"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementOperation">
            <summary>
            The word replacement operation
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementOperationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementOperation"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.OnWordReplacementOperationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementOperation"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromWord">
            <summary>
            The word to replace
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromWordProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromWord"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ToWord">
            <summary>
            The word that the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.FromWord"/> is replaced with
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ToWordProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ToWord"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property of the shortcode that the translator is created for</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.#ctor(Atom.Core.PropertyShortcodeValueTranslator,System.Reflection.PropertyInfo)">
            <summary>
            Translator based constructor
            </summary>
            <param name="translator">The translator</param>
            <param name="propertyInfo">The property of the shortcode that the translator is created for</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Validate">
            <summary>
            Validates the state of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.CreatePropertyShortcodeValueTranslator">
            <summary>
            Creates and returns a <see cref="T:Atom.Core.PropertyShortcodeValueTranslator"/> from the values inserted to the component.
            NOTE: The <see cref="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Validate"/> must be called before calling this method to ensure the validity of the inserted data!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.UpdatePropertyShortcodeValueTranslator(Atom.Core.PropertyShortcodeValueTranslator)">
            <summary>
            Updates the values of the specified <paramref name="translator"/> based on the values inserted to the component.
            NOTE: The <see cref="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Validate"/> must be called before calling this method to ensure the validity of the inserted data!
            </summary>
            <param name="translator">The translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.SetItemsSource(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Contains(Atom.Core.Shortcode)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.IndexOf(Atom.Core.Shortcode)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Add(Atom.Core.Shortcode)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.AddRange(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Insert(System.Int32,Atom.Core.Shortcode)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Remove(Atom.Core.Shortcode)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Replace(Atom.Core.Shortcode,Atom.Core.Shortcode)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.GetElement(Atom.Core.Shortcode)">
            <summary>
            Gets the <see cref="T:Atom.Windows.Controls.ShortcodePresenter"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Get(Atom.Windows.Controls.ShortcodePresenter)">
            <summary>
            Returns the <see cref="T:Atom.Core.Shortcode"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.ContainsElement(Atom.Windows.Controls.ShortcodePresenter)">
            <summary>
            Checks if the items control contains the specified <paramref name="element"/>
            </summary>
            <param name="element">The element to check if exists</param>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.Elements">
            <summary>
            Gets the elements contained in the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.GetShortcodeCategoryName(System.Reflection.PropertyInfo)">
            <summary>
            Gets the category name of the shortcode of the specified <paramref name="propertyInfo"/>
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.OnWordReplacementOperationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementOperation"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.OnWordReplacementOperationChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.PropertyShortcodeValueTranslatorComponent.WordReplacementOperation"/> property internally
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Atom.Windows.Controls.ShortcodesContainer`4">
            <summary>
            Contains a <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.FormulaInput"/> and a <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.DataPresenter"/> for creating a formula and custom shortcodes
            </summary>
            <typeparam name="TShortcodesContainer">The type of the shortcodes container</typeparam>
            <typeparam name="TPropertyShortcodeComponent">The type of the property shortcode component</typeparam>
            <typeparam name="TPropertyShortcodeValueTranslatorComponent">The type of the property value translator component</typeparam>
            <typeparam name="TPropertyShortcodeFilterComponent">The type of the property shortcode filter component</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.ShortcodesContainer`4.mOptions">
            <summary>
            The custom shortcode options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.ShortcodesContainer`4.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.Instance">
            <summary>
            An instance of the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.InstanceType"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.InstanceType">
            <summary>
            The type of the instance whose properties are used for creating custom shortcodes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.Linker">
            <summary>
            Creates or extracts the <see cref="T:Atom.Windows.Controls.ShortcodePresenter"/> that is associate with the inserted <see cref="T:Atom.Core.Shortcode"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.FormulaInput">
            <summary>
            The formula input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.CharactersCountPresenter">
            <summary>
            The counter of the message characters
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.DataPresenter">
            <summary>
            The data presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.AddButton">
            <summary>
            The add button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.Value">
            <summary>
            A string value that represents the shortcode formula
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ShortcodesContainer`4.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.Value"/> property changes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ShortcodesContainer`4.ActualValuePropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnActualValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue"/> property changes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ShortcodesContainer`4.ActualValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue">
            <summary>
            The actual message that's the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.Value"/> but with the actual shortcode values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.#ctor(System.Object,System.Type)">
            <summary>
            Default constructor
            </summary>
            <param name="instanceType">
            The type of the instance whose properties are used for creating custom shortcodes.
            NOTE: This parameter is mandatory!
            </param>
            <param name="instance">
            An instance of the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.InstanceType"/>
            NOTE: This parameter is optional!
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Update">
            <summary>
            Updates all the shortcodes and then the actual value.
            NOTE: This method should be called after every change that is being made to the shortcodes!
                  That includes the showing of a property shortcode component!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.SetItemsSource(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Contains(Atom.Core.Shortcode)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.IndexOf(Atom.Core.Shortcode)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Add(Atom.Core.Shortcode)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.AddRange(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Insert(System.Int32,Atom.Core.Shortcode)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Remove(Atom.Core.Shortcode)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Replace(Atom.Core.Shortcode,Atom.Core.Shortcode)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.GetElement(Atom.Core.Shortcode)">
            <summary>
            Gets the <see cref="T:Atom.Windows.Controls.ShortcodePresenter"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.Get(Atom.Windows.Controls.ShortcodePresenter)">
            <summary>
            Returns the <see cref="T:Atom.Core.Shortcode"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.ContainsElement(Atom.Windows.Controls.ShortcodePresenter)">
            <summary>
            Checks if the items control contains the specified <paramref name="element"/>
            </summary>
            <param name="element">The element to check if exists</param>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesContainer`4.Elements">
            <summary>
            Gets the elements contained in the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnShortcodesLoaded">
            <summary>
            Further handles the load of the shortcodes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.CreateShortcodeComponent(System.Object,System.Type,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Creates and returns a shortcode component
            </summary>
            <param name="instance">The instance of the value of the property if any</param>
            <param name="instanceType">The type of the instance whose properties are used for creating custom shortcodes</param>
            <param name="propertyInfo">The property info</param>
            <param name="parentPath">The parent path</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnCustomShortcodeCreated(Atom.Core.PropertyShortcode)">
            <summary>
            Handles the creation of a shortcode.
            NOTE: This method is usually used to save the shortcode to the data storage!
            NOTE: Use the <see cref="M:Atom.Windows.Controls.ShortcodesContainer`4.OnCustomShortcodeAdded(Atom.Core.PropertyShortcode)"/>
                  method to provide extra functionality to the shortcode since its called at all the places in the code where a custom shortcode is added!
                  Ex. On the <see cref="M:Atom.Windows.Controls.ShortcodesContainer`4.OnInitialized(System.EventArgs)"/> where all the
                  pre-existing shortcodes are retrieved!
            NOTE: Override the <see cref="M:Atom.Windows.Controls.ShortcodesContainer`4.CreateShortcode(Atom.Core.ShortcodeCreationEventArgs)"/>
                  method to provide a custom shortcode implementation!
            </summary>
            <param name="shortcode">The shortcode</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnCustomShortcodeAdded(Atom.Core.PropertyShortcode)">
            <summary>
            Handles the addition of a custom shortcode.
            NOTE: This method should be overridden to attach functionality to the shortcode
                  after its addition (ex. the data storage save) has been completed!
                  Ex. Attach a context menu to the shortcode.
            NOTE: This method is called both when a custom shortcode is created and on the
                  <see cref="M:Atom.Windows.Controls.ShortcodesContainer`4.OnInitialized(System.EventArgs)"/>
                  method where all the pre-existing custom shortcodes are retrieved and placed
                  in the container!
            </summary>
            <param name="shortcode">The shortcode</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.CreateShortcode(Atom.Core.ShortcodeCreationEventArgs)">
            <summary>
            Creates and returns a <see cref="T:Atom.Core.PropertyShortcode"/> from the specified <paramref name="e"/>
            </summary>
            <param name="e">The event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.GetAllCustomShortcodesAsync">
            <summary>
            Gets all the custom shortcodes to be set to the <see cref="P:Atom.Core.PropertyShortcode.CustomShortcodes"/>
            of every <see cref="T:Atom.Core.PropertyShortcode"/> in order for its formula to be calculated correctly
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Thrown when unable to retrieve the shortcodes</exception>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.UpdateActualValueOnTextChanged">
            <summary>
            A flag indicating if the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue"/> should be applied after every keystroke or after the user has finished typing
            changes.
            NOTE: If set to <see cref="!:false"/>, then the property gets updated when the user finishes typing!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.UpdateActualValue">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue"/> property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnActualValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.GetShortcodeCategoryName(System.Reflection.PropertyInfo)">
            <summary>
            Gets the category name of the shortcode of the specified <paramref name="propertyInfo"/>
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnShortcodeCreatedCore(Atom.Core.ShortcodeCreationEventArgs)">
            <summary>
            Handles the creation of a shortcode internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesContainer`4.OnActualValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.ShortcodesContainer`4.ShortcodeCreated">
            <summary>
            Fires every time a new shortcode gets created
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.ShortcodesContainer`4.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.Value"/> property changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.ShortcodesContainer`4.ActualValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.ShortcodesContainer`4.ActualValue"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardContentPresenter`1">
            <summary>
            A content presenter that uses a <see cref="T:Atom.Windows.Controls.StandardHeaderComponent"/> as its header
            </summary>
            <typeparam name="TContent">The type of the content</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.HearderComponent">
            <summary>
            The header component
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.ComponentContainer">
            <summary>
            The stack panel that contains the component
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.Content">
            <summary>
            The content of the presenter
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardContentPresenter`1.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardContentPresenter`1.Content"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContentPresenter`1.OnContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StandardContentPresenter`1.Content"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.PathData">
            <summary>
            The path data of the svg icon to use as a header
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardContentPresenter`1.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardContentPresenter`1.PathData"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.ImageColor">
            <summary>
            The color of the image
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardContentPresenter`1.ImageColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardContentPresenter`1.ImageColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.Title">
            <summary>
            The title of the dialog
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardContentPresenter`1.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardContentPresenter`1.Title"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.TitleForeground">
            <summary>
            The foreground of the title
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardContentPresenter`1.TitleForegroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardContentPresenter`1.TitleForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardContentPresenter`1.Description">
            <summary>
            The description of the dialog
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardContentPresenter`1.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardContentPresenter`1.Description"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContentPresenter`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContentPresenter`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContentPresenter`1.OnContentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardContentPresenter`1.Content"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StandardContentPresenter">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.StandardContentPresenter`1"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContentPresenter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.HeaderGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.StepsPresenter.IndicatorsContainer"/> and the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepsLine"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.IndicatorsContainer">
            <summary>
            The indicators container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepsLine">
            <summary>
            The steps line
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContainersContainer">
            <summary>
            The step containers container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.CurrentStep">
            <summary>
            The current step
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.CurrentStepProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.CurrentStep"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnCurrentStepPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StepsPresenter.CurrentStep"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepsColor">
            <summary>
            The color that represents the steps
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.StepsColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepsColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnStepsColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepsColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.Orientation">
            <summary>
            The orientation of the step indicators.
            NOTE: The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.OrientationProperty">
            <summary>
            The separator color property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when <see cref="P:Atom.Windows.Controls.StepsPresenter.Orientation"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.FinishCommand">
            <summary>
            The command that gets executed when the finish button is pressed
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.FinishCommandProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.FinishCommand"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.AllowArbitraryNavigation">
            <summary>
            A flag indicating whether arbitrary navigation is allowed or not.
            Setting this flag to <see cref="!:false"/> will allow the navigation
            only by the Next and Back buttons.
            NOTE: The default value is <see cref="!:true"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.AllowArbitraryNavigationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.AllowArbitraryNavigation"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.Validate">
            <summary>
            Validates the component
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.Validate(Atom.Windows.Controls.StepsPresenterDataModel)">
            <summary>
            Validates the specified <paramref name="step"/>
            </summary>
            <param name="step">The step to validate</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.Add``1(System.String,``0,System.Func{``0,System.Boolean})">
            <summary>
            Adds a step using the specified data
            </summary>
            <typeparam name="TElement">The type of the element</typeparam>
            <param name="title">The title</param>
            <param name="element">The element</param>
            <param name="validator">The validator</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.Add``1(System.String,``0)">
            <summary>
            Adds a steps using the specified data
            </summary>
            <typeparam name="TElement">The type of the validatable element</typeparam>
            <param name="title">The title</param>
            <param name="element">The element</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.NextStep">
            <summary>
            Navigates to the next step
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.PreviousStep">
            <summary>
            Navigates to the previous step
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.GoToStep(System.Int32)">
            <summary>
            Navigates to the step with the specified <paramref name="index"/>
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnItemAdded(Atom.Core.ItemAddedEventArgs{Atom.Windows.Controls.StepsPresenterDataModel})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{Atom.Windows.Controls.StepsPresenterDataModel})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnItemMoved(Atom.Core.ItemMovedEventArgs{Atom.Windows.Controls.StepsPresenterDataModel})">
            <summary>
            Handles the move of two items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{Atom.Windows.Controls.StepsPresenterDataModel})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{Atom.Windows.Controls.StepsPresenterDataModel})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnCurrentStepChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StepsPresenter.CurrentStep"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StepsPresenter.Orientation"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnStepsColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepsColor"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.HandleAddition(Atom.Windows.Controls.StepsPresenterDataModel)">
            <summary>
            Handles the addition of the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.HandleRemoval(Atom.Windows.Controls.StepsPresenterDataModel)">
            <summary>
            Handles the removal of the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.UpdateContainerContainers">
            <summary>
            Updates the containers
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.UpdateStepsLine">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepsLine"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.UpdateIndicatorsContainer">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.StepsPresenter.IndicatorsContainer"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.UpdateIndicator(Atom.Windows.Controls.StepsPresenter.StepIndicator)">
            <summary>
            Updates the specified <paramref name="indicator"/> using the current value of the
            <see cref="P:Atom.Windows.Controls.StepsPresenter.Orientation"/> property
            </summary>
            <param name="indicator">The indicator</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnCurrentStepChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StepsPresenter.CurrentStep"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnOrientationChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StepsPresenter.Orientation"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.OnStepsColorChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepsColor"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.StepsPresenter.CurrentStepChanged">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StepsPresenter.CurrentStep"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.Presenter">
            <summary>
            The steps presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.Model">
            <summary>
            The model
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.ContentPresenter">
            <summary>
            The content presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.BackButton">
            <summary>
            The back button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.NextButton">
            <summary>
            The next button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.Content">
            <summary>
            The content
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.StepContentContainer.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.Content"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.BackAllowed">
            <summary>
            A flag indicating whether navigation to the previous step is allowed
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.StepContentContainer.BackAllowedProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.BackAllowed"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.PositiveFeedbackText">
            <summary>
            The string of the positive feedback text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.StepContentContainer.PositiveFeedbackTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.PositiveFeedbackText"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.NegativeFeedbackText">
            <summary>
            The string of the negative feedback text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.StepContentContainer.NegativeFeedbackProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepContentContainer.NegativeFeedbackText"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepContentContainer.#ctor(Atom.Windows.Controls.StepsPresenter,Atom.Windows.Controls.StepsPresenterDataModel)">
            <summary>
            Default constructor
            </summary>
            <param name="presenter">The steps presenter</param>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepContentContainer.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.StepIndicator.CircleSize">
            <summary>
            The size of the circle
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.Presenter">
            <summary>
            The steps presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.Model">
            <summary>
            The model
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.TitleTextBlock">
            <summary>
            The title text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.CircleBorder">
            <summary>
            The circle border
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.StepIndicator.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.Title"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.Orientation">
            <summary>
            The orientation of the step indicators.
            NOTE: The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StepsPresenter.StepIndicator.OrientationProperty">
            <summary>
            The separator color property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepIndicator.OrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when <see cref="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.Orientation"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepIndicator.#ctor(Atom.Windows.Controls.StepsPresenter,Atom.Windows.Controls.StepsPresenterDataModel)">
            <summary>
            Default constructor
            </summary>
            <param name="presenter">The presenter</param>
            <param name="model">The model</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepIndicator.Validate">
            <summary>
            Validates the indicator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepIndicator.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepIndicator.OnSelectedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseControl.Selected"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepIndicator.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.Orientation"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenter.StepIndicator.OnOrientationChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StepsPresenter.StepIndicator.Orientation"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StepsPresenterDataModel">
            <summary>
            Represents a step used by the <see cref="T:Atom.Windows.Controls.StepsPresenter"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenterDataModel.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenterDataModel.Element">
            <summary>
            The element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StepsPresenterDataModel.Validator">
            <summary>
            The validator
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenterDataModel.#ctor(System.String,System.Windows.UIElement,System.Func{System.Boolean})">
            <summary>
            Default constructor
            </summary>
            <param name="title">The title</param>
            <param name="element">The element</param>
            <param name="validator">The validator</param>
        </member>
        <member name="M:Atom.Windows.Controls.StepsPresenterDataModel.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StepsPresenterConstants">
            <summary>
            Constants relate to <see cref="T:Atom.Windows.Controls.StepsPresenter"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.VerticalMenu">
            <summary>
            A vertical menu that links buttons with elements and presents only an element at a time based on the selected button
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.VerticalMenu.mMapper">
            <summary>
            The mapper that contains the menu buttons pair with their content that has been initialized
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.Buttons">
            <summary>
            Gets the existing buttons
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.MenuPresenter">
            <summary>
            The menu content container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.MenuContentScrollViewer">
            <summary>
            The scroll viewer of the <see cref="P:Atom.Windows.Controls.VerticalMenu.ButtonsContainer"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.MenuContentGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.VerticalMenu.ButtonsContainer"/> and the <see cref="P:Atom.Windows.Controls.VerticalMenu.IndexRectangle"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.ButtonsContainer">
            <summary>
            The container that contains all the menu buttons
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.IndexRectangle">
            <summary>
            The index rectangle
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.ContentContainerGrid">
            <summary>
            The grid that contains the elements of the buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.VerticalMenu.SelectedButtonPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.VerticalMenu.SelectedButtonProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.VerticalMenu.SelectedButtonProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.VerticalMenu.SelectedButton"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.SelectedButton">
            <summary>
            The currently selected button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.OnSelectedButtonPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.VerticalMenu.SelectedButton"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.IndexColor">
            <summary>
            The color of the selection index
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.VerticalMenu.IndexColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.VerticalMenu.IndexColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.IsOpen">
            <summary>
            A flag indicating whether the menu is open or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.VerticalMenu.IsOpenProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.VerticalMenu.IsOpen"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenu.MenuLocked">
            <summary>
            A flag indicating whether the menu is locked or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.VerticalMenu.MenuLockedProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.VerticalMenu.MenuLocked"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.Update">
            <summary>
            Updates the menu presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.Select(Atom.Windows.Controls.VerticalMenuButton)">
            <summary>
            Selects the specified <paramref name="button"/>
            </summary>
            <param name="button">The button to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.IsContentLoaded(Atom.Windows.Controls.VerticalMenuButton)">
            <summary>
            Checks whether the content of the specified <paramref name="button"/> is loaded or not
            </summary>
            <param name="button">The button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.Add(System.String,System.Func{Atom.Windows.Controls.VerticalMenu,Atom.Windows.Controls.VerticalMenuButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.String,System.Boolean)">
            <summary>
            Adds and returns a <see cref="T:Atom.Windows.Controls.VerticalMenuButton"/> with the specified <paramref name="text"/> that presents 
            the specified element provided by the <paramref name="elementImplementationFactory"/> when clicked
            </summary>
            <param name="text">The text of the button</param>
            <param name="elementImplementationFactory">The element implementation factory</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.Add(System.String,System.String,System.Func{Atom.Windows.Controls.VerticalMenu,Atom.Windows.Controls.VerticalMenuButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.String,System.Boolean)">
            <summary>
            Adds and returns a <see cref="T:Atom.Windows.Controls.VerticalMenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            that presents the specified element provided by the <paramref name="elementImplementationFactory"/> when clicked
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
            <param name="elementImplementationFactory">The element implementation factory</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.Add(Atom.Windows.Controls.VerticalMenuButton,System.String,System.Boolean)">
            <summary>
            Adds the specified <paramref name="button"/> that presents the specified element provided by the implementation factory of the specified <paramref name="button"/> when clicked
            </summary>
            <param name="button">The menu button</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.GetContent(Atom.Windows.Controls.VerticalMenuButton)">
            <summary>
            Gets the content of the specified <paramref name="button"/>
            </summary>
            <param name="button">The button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.Remove(Atom.Windows.Controls.VerticalMenuButton)">
            <summary>
            Removes the specified <paramref name="button"/> and its related content
            </summary>
            <param name="button">The menu button to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.CalculateIndexRectangleSize(Atom.Windows.Controls.VerticalMenuButton)">
            <summary>
            Calculates the width of the <see cref="P:Atom.Windows.Controls.VerticalMenu.IndexRectangle"/> using the currently <paramref name="selectedButton"/>.
            NOTE: This method should not be called with a <see cref="!:null"/> parameter value!
            </summary>
            <param name="selectedButton">The button that is currently selected</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.CalculateIndexRectangleYLocation(Atom.Windows.Controls.VerticalMenuButton)">
            <summary>
            Calculates the x location of the <see cref="P:Atom.Windows.Controls.VerticalMenu.IndexRectangle"/> using the currently <paramref name="selectedButton"/>.
            NOTE: This method should not be called with a <see cref="!:null"/> parameter value!
            </summary>
            <param name="selectedButton">The button that is currently selected</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.OnSelectedButtonChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.VerticalMenu.SelectedButton"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenu.OnSelectedButtonChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.VerticalMenu.SelectedButton"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.VerticalMenu.SelectedButtonChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.VerticalMenu.SelectedButton"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.VerticalMenuButton">
            <summary>
            A <see cref="T:Atom.Windows.Controls.MenuButton"/> used by the <see cref="T:Atom.Windows.Controls.VerticalMenu"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenuButton.MenuPresenter">
            <summary>
            The menu content presenter that contains this button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenuButton.ElementImplementationFactory">
            <summary>
            The implementation factory for the content element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenuButton.#ctor(Atom.Windows.Controls.VerticalMenu,System.Func{Atom.Windows.Controls.VerticalMenu,Atom.Windows.Controls.VerticalMenuButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}})">
            <summary>
            Default constructor
            </summary>
            <param name="menuPresenter">The menu content presenter that contains this button</param>
            <param name="elementImplementationFactory">The implementation factory for the content element</param>
        </member>
        <member name="T:Atom.Windows.Controls.BorderedTextBlock">
            <summary>
            A text block wrapped in a <see cref="T:System.Windows.Controls.Border"/> that provides vertical centering functionality
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderedTextBlock.TextBlock">
            <summary>
            The text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderedTextBlock.Text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderedTextBlock.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderedTextBlock.Text"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderedTextBlock.FontSize">
            <summary>
            The font size of the text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderedTextBlock.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderedTextBlock.FontSize"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderedTextBlock.Padding">
            <summary>
            The margin of the inner text block
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderedTextBlock.PaddingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderedTextBlock.Padding"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderedTextBlock.HorizontalContentAlignment">
            <summary>
            The horizontal alignment of the inner text block
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderedTextBlock.HorizontalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderedTextBlock.HorizontalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BorderedTextBlock.VerticalContentAlignment">
            <summary>
            The vertical alignment of the inner text block
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BorderedTextBlock.VerticalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BorderedTextBlock.VerticalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BorderedTextBlock.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.Location">
            <summary>
            The available locations of the bubble content pointer
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.OffsetCondition">
            <summary>
            The offset condition
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.ContentGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.BubbleContent.ContentBorder"/> and the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerPath"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.PointerPath">
            <summary>
            The path of the pointer
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.ContentBorder">
            <summary>
            The border that contains the <see cref="P:Atom.Windows.Controls.BubbleContent.Content"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.Shadow">
            <summary>
            The drop shadow effect
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.ContentScrollViewer">
            <summary>
            The content scroll viewer
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.Content">
            <summary>
            The content that is presented in the bubble
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.Content"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.Content"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.Padding">
            <summary>
            The padding of the bubble
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.PaddingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.Padding"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnPaddingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.Padding"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.IsPointerVibile">
            <summary>
            A flag indicating whether the pointer is visible or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.IsPointerVibileProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.IsPointerVibile"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.PointerLocation">
            <summary>
            The location of the pointer.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.PointerLocationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerLocation"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnPointerLocationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerLocation"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.PointerOffsetCondition">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffset"/> dependency property
            NOTE: The <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffset"/> property still has an effect event when the <see cref="F:Atom.Windows.Controls.OffsetCondition.Center"/> is selected!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.PointerOffsetConditionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffsetCondition"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.PointerOnOffsetConditionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffsetCondition"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.PointerOffset">
            <summary>
            The offset of the pointer
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.PointerOffsetProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffset"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnPointerOffsetPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffset"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.ShadowBlurRadius">
            <summary>
            The blur radius of the drop shadow
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.ShadowBlurRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowBlurRadius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnShadowBlurRadiusPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowBlurRadius"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.ShadowColor">
            <summary>
            The color of the drop shadow
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.ShadowColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnShadowColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.ShadowDepth">
            <summary>
            The shadow depth drop shadow
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.ShadowDepthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowDepth"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnShadowDepthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowDepth"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BubbleContent.ShadowOpacity">
            <summary>
            The shadow depth drop shadow
            NOTE: The values must be between 0 and 1!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BubbleContent.ShadowOpacityProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowOpacity"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnShadowOpacityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowOpacity"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.MeasureOverride(System.Windows.Size)">
            <summary>
            Measure the size of the element and also take into consideration its drop shadow effect
            </summary>
            <param name="availableSize">The available size</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnContentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BubbleContent.Content"/> property
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnDropShadowBlurRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowBlurRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnDropShadowColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowColor"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnShadowDepthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowDepth"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnShadowOpacityChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BubbleContent.ShadowOpacity"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnPointerLocationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerLocation"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnPointerOffsetChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffset"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.OnPointerOffsetConditionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffsetCondition"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.SetPointerLocation">
            <summary>
            Sets the location of the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerPath"/> in the <see cref="P:Atom.Windows.Controls.BubbleContent.ContentGrid"/>
            based on the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerLocation"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.SetPointerData">
            <summary>
            Sets the <see cref="P:System.Windows.Shapes.Path.Data"/> of the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerPath"/> based on the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerLocation"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.SetPointerMargin">
            <summary>
            Sets the <see cref="P:System.Windows.FrameworkElement.Margin"/> of the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerPath"/> 
            based on the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffset"/> and the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerLocation"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BubbleContent.SetPointerAlignment">
            <summary>
            Sets the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment"/> and the <see cref="P:System.Windows.FrameworkElement.VerticalAlignment"/>
            based on the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerOffsetCondition"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DaySpanPresenter">
            <summary>
            The graphical representation of a <see cref="T:Atom.Core.DaySpan"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanPresenter.SpanPresenter">
            <summary>
            The span presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanPresenter.DaySpan">
            <summary>
            The day span that is presenter
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanPresenter.DaySpanProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanPresenter.DaySpan"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenter.OnDaySpanPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.DaySpanPresenter.DaySpan"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanPresenter.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanPresenter.ColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanPresenter.Color"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanPresenter.TextColor">
            <summary>
            The color of the text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanPresenter.TextColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanPresenter.TextColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenter.Update">
            <summary>
            Updates the presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenter.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenter.OnDaySpanChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DaySpanPresenter.DaySpan"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenter.OnDaySpanChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DaySpanPresenter.DaySpan"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.GridDecorator">
            <summary>
            Grid that draws horizontal and vertical lines
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.GridDecorator.DecoratorGrid">
            <summary>
            The grid that's used as the decorator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.GridDecorator.NumberOfHorizontalLines">
            <summary>
            The number of horizontal lines that are drawn
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.GridDecorator.NumberOfHorizontalLinesProperty">
            <summary>
            The number of horizontal lines property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.GridDecorator.OnNumberOfHorizontalLinesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.GridDecorator.NumberOfHorizontalLines"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.GridDecorator.NumberOfVerticalLines">
            <summary>
            The number of vertical lines that are drawn
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.GridDecorator.NumberOfVerticalLinesProperty">
            <summary>
            The number of vertical lines property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.GridDecorator.OnNumberOfVerticalLinesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.GridDecorator.NumberOfVerticalLines"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.GridDecorator.LinesColor">
            <summary>
            The color of the separator
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.GridDecorator.LinesColorProperty">
            <summary>
            The separator color property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.GridDecorator.OnLinesColorPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when <see cref="P:Atom.Windows.Controls.GridDecorator.LinesColor"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.GridDecorator.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.GridDecorator.UpdateGrid">
            <summary>
            Updates the grid
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseInputContainer">
            <summary>
            The base for all the input containers
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.TitleStackPanel">
            <summary>
            The stack panel that contains the <see cref="P:Atom.Windows.Controls.BaseInputContainer.TitleTextBlock"/> and the <see cref="P:Atom.Windows.Controls.BaseInputContainer.RequiredIndicatorTextBlock"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.TitleTextBlock">
            <summary>
            The title text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.RequiredIndicatorTextBlock">
            <summary>
            The required indicator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.DescriptionTextBlock">
            <summary>
            The description text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.InputControlPresenter">
            <summary>
            The presenter that presents the input control 
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.ErrorTextBlock">
            <summary>
            The error text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseInputContainer.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseInputContainer.Title"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.Description">
            <summary>
            The optional description
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseInputContainer.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseInputContainer.Description"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.IsRequired">
            <summary>
            A flag indicating whether the value of this input is valid or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseInputContainer.IsRequiredProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseInputContainer.IsRequired"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.ValidationErrorMessage">
            <summary>
            The error that is displayed to the user when the validation fails
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseInputContainer.ValidationErrorMessageProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseInputContainer.ValidationErrorMessage"/> dependency property
            Localization
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.HasError">
            <summary>
            A flag indicating whether the input has an error or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseInputContainer.HasErrorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseInputContainer.HasError"/> dependency property
            Localization
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer.Color">
            <summary>
            The color of the texts
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseInputContainer.ColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseInputContainer.Color"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseInputContainer`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer"/> with a predefined input control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer`2.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.BaseInputContainer`2.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl">
            <summary>
            The input control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInputContainer`2.Value">
            <summary>
            The value of the picker
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseInputContainer`2.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer`2.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.Value"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer`2.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>.
            NOTE: This method is created and run by the <see cref="M:Atom.Windows.Controls.BaseInputContainer`2.CreateBaseGUIElement"/>!
            NOTE: This method can't be used for input controls that require construction injection to work properly, use the <see cref="T:Atom.Windows.Controls.InputContainer`1"/>
                  and set the input control at the <see cref="P:Atom.Windows.Controls.InputContainer`1.Content"/> if that's the case! 
                  Ex. <see cref="T:Atom.Windows.Controls.DropDownMenu`2"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer`2.OnInputControlCreated(`0)">
            <summary>
            Handles the creation of the <paramref name="control"/>.
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer`2.GetValueProperty(`0)">
            <summary>
            Gets the value property from the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <param name="control">The input control</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer`2.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInputContainer`2.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseInputContainer`2.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.Value"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardInputContainer`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer`2"/> for standard input controls.
            NOTE: This container sets the width of the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/> to <see cref="F:Atom.Windows.Controls.DataFormConstants.StandardInputElementWidth"/>
            </summary>
            <typeparam name="TInputControl"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StandardInputContainer`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardInputContainer`2.OnInputControlCreated(`0)">
            <summary>
            Handles the creation of the <paramref name="control"/>.
            NOTE: By default the control
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="T:Atom.Windows.Controls.InputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer"/> that uses the <see cref="P:Atom.Windows.Controls.InputContainer`1.Content"/> property to present an input control
            </summary>
            <typeparam name="TContent">The type of the content</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.InputContainer`1.Content">
            <summary>
            The content that the container contains
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.InputContainer`1.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.InputContainer`1.Content"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.InputContainer`1.HorizontalContentAlignment">
            <summary>
            The horizontal alignment of the <see cref="P:Atom.Windows.Controls.InputContainer`1.Content"/>.
            NOTE: The default value is <see cref="F:System.Windows.HorizontalAlignment.Left"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.InputContainer`1.HorizontalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.InputContainer`1.HorizontalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.InputContainer`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.InputContainer`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBoxInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer`2"/> for a <see cref="T:Atom.Windows.Controls.CheckBox"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxInputContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxInputContainer.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBoxInputContainer.GetValueProperty(Atom.Windows.Controls.CheckBox)">
            <summary>
            Gets the value property from the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <param name="control">The input control</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ColorPickerInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer`2"/> for a <see cref="T:Atom.Windows.Controls.ColorPicker"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPickerInputContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPickerInputContainer.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPickerInputContainer.GetValueProperty(Atom.Windows.Controls.ColorPicker)">
            <summary>
            Gets the value property from the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <param name="control">The input control</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DataGridInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer`2"/> for a <see cref="T:Atom.Windows.Controls.DataGrid`1"/>
            </summary>
            <typeparam name="TClass"></typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridInputContainer`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>.
            NOTE: This method is created and run by the <see cref="M:Atom.Windows.Controls.BaseInputContainer`2.CreateBaseGUIElement"/>!
            NOTE: This method can't be used for input controls that require construction injection to work properly, use the <see cref="T:Atom.Windows.Controls.InputContainer`1"/>
                  and set the input control at the <see cref="P:Atom.Windows.Controls.InputContainer`1.Content"/> if that's the case! 
                  Ex. <see cref="T:Atom.Windows.Controls.DropDownMenu`2"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridInputContainer`1.OnInputControlCreated(Atom.Windows.Controls.DataGrid{`0})">
            <summary>
            Handles the creation of the <paramref name="control"/>.
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataGridInputContainer`1.GetValueProperty(Atom.Windows.Controls.DataGrid{`0})">
            <summary>
            Gets the value property from the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <param name="control">The input control</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DirectoryInputInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer`2"/> for a <see cref="T:Atom.Windows.Controls.OpenDirectoryInput"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputInputContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputInputContainer.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DirectoryInputInputContainer.GetValueProperty(Atom.Windows.Controls.OpenDirectoryInput)">
            <summary>
            Gets the value property from the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <param name="control">The input control</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenuInputContainer`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer`2"/> for a <see cref="T:Atom.Windows.Controls.DropDownMenu`2"/>
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.DropDownMenuInputContainer`2.mLinker">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.Linker"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DropDownMenuInputContainer`2.mTextSelector">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.TextSelector"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.Linker">
            <summary>
            Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.IconPathDataSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.Elements">
            <summary>
            Gets the elements contained in the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.MenuButton"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Add(`0)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Contains(`0)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.ContainsElement(`1)">
            <summary>
            Checks if the items control contains the specified <paramref name="element"/>
            </summary>
            <param name="element">The element to check if exists</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Get(`1)">
            <summary>
            Returns the <typeparamref name="TItem"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.GetElement(`0)">
            <summary>
            Gets the <typeparamref name="TElement"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Remove(`0)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Select(System.Int32)">
            <summary>
            Selects the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Select(`0)">
            <summary>
            Selects the specified <paramref name="item"/>
            </summary>
            <param name="item">The item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.Select(`1)">
            <summary>
            Selects the <typeparamref name="TItem"/> that associated with the specified <paramref name="element"/>
            </summary>
            <param name="element">The element whose associated item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.OnInputControlCreated(Atom.Windows.Controls.DropDownMenu{`0,`1})">
            <summary>
            Handles the creation of the <paramref name="control"/>.
            NOTE: By default the control
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.GetValueProperty(Atom.Windows.Controls.DropDownMenu{`0,`1})">
            <summary>
            Gets the value property from the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <param name="control">The input control</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.OnLinkerChanged(System.Func{`0,`1})">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.Linker"/> property
            </summary>
            <param name="newLinker">The new linker</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`2.OnTextSelectorChanged(System.Func{`0,System.String})">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DropDownMenuInputContainer`2.TextSelector"/> property
            </summary>
            <param name="newTextSelector">The new text selector</param>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenuInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownMenuInputContainer`2"/> that has pre-set the type of the associated elements to <see cref="T:Atom.Windows.Controls.MenuButton"/>
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.MenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.MenuButton"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuInputContainer`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer`2"/> for a <see cref="T:Atom.Windows.Controls.ShortcodesTextInput"/>
            </summary>
            <typeparam name="TShortcodesTextInput">The type of the shortcodes text input</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.CaretIndex">
            <summary>
            Gets the caret index
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.ShortcodesUsed">
            <summary>
            A flag indicating whether shortcodes where used or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Update">
            <summary>
            Updates the object
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.SetItemsSource(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Contains(Atom.Core.Shortcode)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.IndexOf(Atom.Core.Shortcode)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the shortcodes source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Add(Atom.Core.Shortcode)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.AddRange(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Insert(System.Int32,Atom.Core.Shortcode)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Remove(Atom.Core.Shortcode)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the shortcodes source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Replace(Atom.Core.Shortcode,Atom.Core.Shortcode)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.CreateShortcodesTextInput">
            <summary>
            Creates and returns the <see cref="T:Atom.Windows.Controls.ShortcodesTextInput"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.OnInputControlCreated(`0)">
            <summary>
            Handles the creation of the <paramref name="control"/>
            </summary>
            <param name="control">The control</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1.GetValueProperty(`0)">
            <summary>
            Gets the value property from the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <param name="control">The input control</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ShortcodesTextInputInputContainer">
            <summary>
            A standard <see cref="T:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInputInputContainer.CreateShortcodesTextInput">
            <summary>
            Creates and returns the <see cref="T:Atom.Windows.Controls.ShortcodesTextInput"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PropertyShortcodesTextInputInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ShortcodesTextInputInputContainer`1"/> that uses a <see cref="T:Atom.Windows.Controls.PropertyShortcodesTextInput"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertyShortcodesTextInputInputContainer.CreateShortcodesTextInput">
            <summary>
            Creates and returns the <see cref="T:Atom.Windows.Controls.ShortcodesTextInput"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.TextInputInputContainer">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInputContainer`2"/> for a <see cref="T:Atom.Windows.Controls.TextInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputInputContainer.CaretIndex">
            <summary>
            Gets the caret index
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputInputContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputInputContainer.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputInputContainer.GetValueProperty(Atom.Windows.Controls.TextInput)">
            <summary>
            Gets the value property from the <see cref="P:Atom.Windows.Controls.BaseInputContainer`2.InputControl"/>
            </summary>
            <param name="control">The input control</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.LoadingComponent">
            <summary>
            A component that indicates a loading state
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LoadingComponent.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LoadingComponent.LoadingIndicator">
            <summary>
            The loading indicator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LoadingComponent.Text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.LoadingComponent.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.LoadingComponent.Text"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LoadingComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LoadingComponent.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.MultipleCircularImagesPresenter">
            <summary>
            A presenter for multiple <see cref="T:Atom.Windows.Controls.CircularImage"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MultipleCircularImagesPresenter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseOverlayContainer`1">
            <summary>
            The base of all the overlay containers
            </summary>
            <typeparam name="TContent">The type of the inner content</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOverlayContainer`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOverlayContainer`1.ContentPresenter">
            <summary>
            The presenter that presents the <see cref="P:Atom.Windows.Controls.BaseOverlayContainer`1.Content"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOverlayContainer`1.ForeContentGrid">
            <summary>
            The grid that contains the foreground content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseOverlayContainer`1.Content">
            <summary>
            The content that the container contains
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseOverlayContainer`1.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseOverlayContainer`1.Content"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseOverlayContainer`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StandardOverlayContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseOverlayContainer`1"/> that show the <see cref="P:Atom.Windows.Controls.BaseOverlayContainer`1.ForeContentGrid"/>
            </summary>
            <typeparam name="TContent"></typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardOverlayContainer`1.ForeContentPresenter">
            <summary>
            The presenter that contains all the foreground content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardOverlayContainer`1.IsOverlayVisible">
            <summary>
            If true, then the overlay is visible, otherwise it's not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardOverlayContainer`1.IsOverlayVisibleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardOverlayContainer`1.IsOverlayVisible"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardOverlayContainer`1.OnIsOverlayVisiblePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StandardOverlayContainer`1.IsOverlayVisible"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardOverlayContainer`1.OverlayColor">
            <summary>
            The color of the overlay
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardOverlayContainer`1.OverlayColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardOverlayContainer`1.OverlayColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardOverlayContainer`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardOverlayContainer`1.OnOverlay_MouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse down event of the overlay
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardOverlayContainer`1.OnIsOverlayVisibleChange(System.Boolean)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardOverlayContainer`1.IsOverlayVisible"/> property
            </summary>
            <param name="newValue">The new value</param>
        </member>
        <member name="T:Atom.Windows.Controls.ShortcodePresenter">
            <summary>
            Presenter used for presenting a <see cref="P:Atom.Windows.Controls.ShortcodePresenter.Shortcode"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodePresenter.Shortcode">
            <summary>
            The shortcode that the present presents
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodePresenter.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodePresenter.ShortcodeTextblock">
            <summary>
            The shortcode that presents the actual shortcode value
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodePresenter.Label">
            <summary>
            The label
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodePresenter.#ctor(Atom.Core.Shortcode)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodePresenter.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodePresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse enter of the cursor
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodePresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse leave of the cursor
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodePresenter.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SpanPresenter">
            <summary>
            The visual representation of a span
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.BarGrid">
            <summary>
            The grid that contains the bar
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.StartingPointTextBlock">
            <summary>
            The text block that presents the starting date
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.MiddlePointTextBlock">
            <summary>
            The day span length text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.EndingPointTextBlock">
            <summary>
            The text block that presents the ending date
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SpanPresenter.ColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SpanPresenter.Color"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.TextColor">
            <summary>
            The color of the texts
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SpanPresenter.TextColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SpanPresenter.TextColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.StartingPointText">
            <summary>
            The text of the starting point
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SpanPresenter.StartingPointTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SpanPresenter.StartingPointText"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.MiddlePointText">
            <summary>
            The text of the middle point
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SpanPresenter.MiddlePointTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SpanPresenter.MiddlePointText"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SpanPresenter.EndingPointText">
            <summary>
            The text of the ending point
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SpanPresenter.EndingPointTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SpanPresenter.EndingPointText"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SpanPresenter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SpanPresenter.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StackedImages`2">
            <summary>
            Merges and presents multiple images
            </summary>
            <typeparam name="TSource">The type of the source of the image</typeparam>
            <typeparam name="TImageElement">The image element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StackedImages`2.PresentedImagesCount">
            <summary>
            The number of the presented images
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StackedImages`2.PresentedImagesCountProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StackedImages`2.PresentedImagesCount"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.OnPresentedImagesCountPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StackedImages`2.PresentedImagesCount"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StackedImages`2.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StackedImages`2.CounterTextBlock">
            <summary>
            The textblock that displays the number of images that are presented
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TImageElement"/> that is associate with the inserted <typeparamref name="TSource"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.AddUIElement(`1,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.RemoveUIElement(`1,System.Int32)">
            <summary>
            Removes the element from the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to remove</param>
            <param name="index">The index that the element has in the ItemsSource before get removed</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.MoveUIElement(`1,`1,System.Int32,System.Int32)">
            <summary>
            Switches the location of the two elements
            </summary>
            <param name="element1">The first index to move</param>
            <param name="element2">The second index to move</param>
            <param name="element1Index">The new index of the first element</param>
            <param name="element2Index">The new index of the second element</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.ClearUIElements">
            <summary>
            Clears the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.OnPresentedImagesCountChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StackedImages`2.PresentedImagesCount"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.UpdateImages(System.Int32)">
            <summary>
            Updates the margin of the items with index bigger that the <paramref name="startingIndex"/>
            </summary>
            <param name="startingIndex">The starting index</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages`2.UpdateCounterTextBlock">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.StackedImages`2.CounterTextBlock"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StackedImages">
            <summary>
            Merges and presents multiple images
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackedImages.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StackedPathIcons">
            <summary>
            Merges and presents multiple svg images
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackedPathIcons.#ctor">
            <summary>
            Default constructors
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardContextMenu">
            <summary>
            A <see cref="T:System.Windows.Controls.ContextMenu"/> configured to suit most of the cases
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.Add(System.String,System.Windows.Input.ICommand,System.Boolean)">
            <summary>
            Creates and adds a <see cref="T:Atom.Windows.Controls.MenuButton"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="command">The command of the button</param>
            <param name="closeContextMenu">A flag indicating whether the context menu should get closed or not after the user click</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.Add(System.String,System.String,System.Windows.Input.ICommand,System.Boolean)">
            <summary>
            Creates and adds a <see cref="T:Atom.Windows.Controls.MenuButton"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
            <param name="command">The command of the button</param>
            <param name="closeContextMenu">A flag indicating whether the context menu should get closed or not after the user click</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.Add(Atom.Windows.Controls.MenuButton,System.Boolean)">
            <summary>
            Adds the specified <paramref name="button"/>
            </summary>
            <param name="button">The button to add</param>
            <param name="closeContextMenu">A flag indicating whether the context menu should get closed or not after the user click</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.AddEditOption(System.Windows.Input.ICommand,System.String)">
            <summary>
            Adds an edit option to the context menu.
            Localization
            </summary>
            <param name="command">The command that is run when clicked</param>
            <param name="text">The text</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.AddDeleteOption(System.Windows.Input.ICommand,System.String)">
            <summary>
            Adds a delete option to the context menu.
            Localization
            </summary>
            <param name="command">The command that is run when clicked</param>
            <param name="text">The text</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.AddRemoveOption(System.Windows.Input.ICommand,System.String)">
            <summary>
            Adds a remove option to the context menu.
            Localization
            </summary>
            <param name="command">The command that is run when clicked</param>
            <param name="text">The text</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.AddEnterOption(System.Windows.Input.ICommand,System.String)">
            <summary>
            Adds an enter option to the context menu.
            Localization
            </summary>
            <param name="command">The command that is run when clicked</param>
            <param name="text">The text</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.AddCopyOption(System.Windows.Input.ICommand,System.String)">
            <summary>
            Adds a copy option to the context menu.
            Localization
            </summary>
            <param name="command">The command that is run when clicked</param>
            <param name="text">The text</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.AddCutOption(System.Windows.Input.ICommand,System.String)">
            <summary>
            Adds a cut option to the context menu.
            Localization
            </summary>
            <param name="command">The command that is run when clicked</param>
            <param name="text">The text</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardContextMenu.AddSeparator">
            <summary>
            Adds a separator
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardHeaderComponent">
            <summary>
            A header component with an image, a title and a description
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.ContentGrid">
            <summary>
            The content grid
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.HeaderGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.HeaderCircularBorder"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.HeaderCircularBorder">
            <summary>
            The circular border that contains the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.HeaderImage"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.HeaderImage">
            <summary>
            The image that's presented in the header
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.TitleTextBlock">
            <summary>
            The title text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.DescriptionTextBlock">
            <summary>
            The message text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.PathData">
            <summary>
            The path data of the header icon
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardHeaderComponent.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.PathData"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.OnPathDataPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.PathData"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.ImageColor">
            <summary>
            The color of the image
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardHeaderComponent.ImageColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.ImageColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.ImageColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.ImageColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.Title">
            <summary>
            The title of the dialog
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardHeaderComponent.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.Title"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.TitlePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.Title"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.TitleForeground">
            <summary>
            The foreground of the title
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardHeaderComponent.TitleForegroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.TitleForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardHeaderComponent.Description">
            <summary>
            The description of the dialog
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardHeaderComponent.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.Description"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.DescriptionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.Description"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.OnPathDataChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.PathData"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.OnImageColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.ImageColor"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.OnTitleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.Title"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardHeaderComponent.OnDescriptionChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardHeaderComponent.Description"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StandardPopup">
            <summary>
            A <see cref="T:System.Windows.Controls.Primitives.Popup"/> that can adjust itself based on the bounds of the screen and update
            the <see cref="P:Atom.Windows.Controls.BubbleContent.PointerPath"/> as well.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardPopup.ContentBubble">
            <summary>
            The content presenter that's a bubble
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardPopup.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardPopup.OnOpened(System.EventArgs)">
            <summary>
            Handles the opening of the popup
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardPopup.InvertLocation">
            <summary>
            Inverts the placement of the pointer of the bubble based on the placement of the popup
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardPopup.DefaultLocation">
            <summary>
            Sets the placement of the pointer of bubble based on the placement of the popup
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardPopup.ShouldInvertLocation(System.Windows.Size,System.Windows.Point,System.Double,System.Double)">
            <summary>
            Checks whether the popup's location should get inverted or not
            </summary>
            <param name="popupSize">The size of the popup</param>
            <param name="popupLocation">The desired location of the popup</param>
            <param name="screenWidth">The width of the screen</param>
            <param name="screenHeight">The height of the screen</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StandardSeparator">
            <summary>
            Separator that switches between horizontal and vertical mode based on its parent orientation
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardSeparator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DialogOverlayContainer`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseOverlayContainer`1"/> used for presenting dialogs to the user
            </summary>
            <typeparam name="TContent">The type of the inner content</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DialogOverlayContainer`1.BottomHintDialogComponentContainer">
            <summary>
            The stack panel that contains the hint dialog components and is placed at the bottom
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DialogOverlayContainer`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DialogOverlayContainer`1.ShowDialogAsync``2(``0)">
            <summary>
            Shows a dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input and uses a <typeparamref name="TDialogOverlay"/> as the overlay
            </summary>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <typeparam name="TDialogOverlay">The type of the dialog overlay</typeparam>
            <param name="dialogOverlay">The overlay that contains the dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogOverlayContainer`1.ShowHintDialogAsync``2(``0,System.Boolean,System.Single)">
            <summary>
            Shows a minimal dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input
            </summary>
            <typeparam name="THintDialogComponent">The type of the hint dialog component</typeparam>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <param name="hintDialogComponent">The hint dialog component</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogOverlayContainer`1.AutoHideHintDialog``1(Atom.Windows.Controls.BaseHintDialogComponent{``0},System.Single)">
            <summary>
            Auto hides the specified <paramref name="hintDialogComponent"/> by setting its <see cref="P:Atom.Windows.Controls.BaseHintDialogComponent`1.Result"/>
            to no interaction.
            </summary>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <param name="hintDialogComponent">The hint dialog component</param>
            <param name="seconds">The seconds after which we want the dialog component to get hidden</param>
        </member>
        <member name="M:Atom.Windows.Controls.DialogOverlayContainer`1.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.IDialogOverlayContainer">
            <summary>
            Provides abstractions for a dialog overlay container
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IDialogOverlayContainer.ShowDialogAsync``2(``0)">
            <summary>
            Shows a dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input and uses a <typeparamref name="TDialogOverlay"/> as the overlay
            </summary>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <typeparam name="TDialogOverlay">The type of the dialog overlay</typeparam>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IDialogOverlayContainer.ShowHintDialogAsync``2(``0,System.Boolean,System.Single)">
            <summary>
            Shows a minimal dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input
            </summary>
            <typeparam name="THintDialogComponent">The type of the hint dialog component</typeparam>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <param name="hintDialogComponent">The hint dialog component</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DialogConstants">
            <summary>
            Constants related to dialogs
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DialogConstants.StandardDialogMinWidth">
            <summary>
            The minimum width used by the standard dialogs.
            Ex. The info and the error dialogs
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DialogHelpers">
            <summary>
            Helpers methods for showing dialogs.
            NOTE: These helper methods use the <see cref="P:Atom.Windows.Controls.WindowsControlsDI.GetWindowsDialogManager"/> to show the dialogs!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowDialogAsync``2(System.Windows.UIElement,``0)">
            <summary>
            Shows a dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input and uses a <typeparamref name="TDialogOverlay"/> as the overlay
            </summary>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <typeparam name="TDialogOverlay">The type of the dialog overlay</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="dialogOverlay">The overlay that contains the dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowDialogAsync``2(``0)">
            <summary>
            Shows a dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input and uses a <typeparamref name="TDialogOverlay"/> as the overlay
            </summary>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <typeparam name="TDialogOverlay">The type of the dialog overlay</typeparam>
            <param name="dialogOverlay">The overlay that contains the dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowPreviewDialogAsync(System.Windows.UIElement,System.Windows.UIElement,System.String,System.String,System.String,System.Action{Atom.Windows.Controls.PreviewDialogOverlay})">
            <summary>
            Shows a dialog that presents the specified <paramref name="element"/>
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="element">The element to present</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="pathData">The path data of the icon</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowValidationDialogAsync``1(System.Windows.UIElement,System.String,System.String,``0,System.Func{``0,System.Boolean},System.String,System.Action{Atom.Windows.Controls.ValidationDialogOverlay{``0}})">
            <summary>
            Shows a dialog that presents the specified <paramref name="element"/>
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="element">The element to present</param>
            <param name="validator">The validator that validates the state of the <paramref name="element"/></param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="pathData">The path data of the icon</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowErrorDialogAsync(System.Windows.UIElement,System.String,System.String,System.Action{Atom.Windows.Controls.ErrorDialogOverlay})">
            <summary>
            Shows an error dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowErrorDialogAsync(System.Windows.UIElement,System.String,System.Action{Atom.Windows.Controls.ErrorDialogOverlay})">
            <summary>
            Shows an error dialog.
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowInfoDialogAsync(System.Windows.UIElement,System.String,System.String,System.Action{Atom.Windows.Controls.InfoDialogOverlay})">
            <summary>
            Shows an info dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowDeletionTransitionalDialogAsync(System.Windows.UIElement,System.String,System.String,System.String,System.Action{Atom.Windows.Controls.TransitionalDialogOverlay})">
            <summary>
            Shows a transitional dialog used for confirming the deletion of an object
            Localization
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="pathData">The path data of the icon</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowTransitionalDialogAsync(System.Windows.UIElement,System.String,System.String,System.String,System.String,System.String,System.Action{Atom.Windows.Controls.TransitionalDialogOverlay})">
            <summary>
            Shows a transitional dialog
            Localization
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="pathData">The path data of the icon</param>
            <param name="positiveFeedbackText">The text of the positive feedback button</param>
            <param name="negativeFeedbackText">The text of the negative feedback button</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowConventionalAddDialogAsync``1(System.Windows.UIElement,System.String,System.String,Atom.Windows.Controls.DataForm{``0},System.String,System.Boolean,System.Action{Atom.Windows.Controls.ConventionalAddDataFormDialogOverlay{``0}})">
            <summary>
            Shows a data form that dynamically creates the data form using the <typeparamref name="TClass"/> instead of 
            a derivative of <see cref="T:Atom.Core.Controls.BaseDialogResult"/> and is used for add operations.
            NOTE: The dialog updates the values of the model of the <paramref name="form"/> if any, when completed!
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">
            The title of the dialog.
            Ex.: Product creation
            </param>
            <param name="message">The message of the dialog</param>
            <param name="form">The form to present</param>
            <param name="pathData">The path data of the icon</param>
            <param name="setNoInteractionOnOverlayClick">A flag indicating whether or not <see cref="P:Atom.Core.Controls.BaseDialogResult.NoInteraction"/> is set to true whether the overlay is clicked</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowAddDialogAsync``1(System.Windows.UIElement,System.String,System.String,Atom.Windows.Controls.DataForm{``0},System.String,System.Boolean,System.Action{Atom.Windows.Controls.AddDataFormDialogOverlay{``0}})">
            <summary>
            Shows the specified <paramref name="form"/> in a <see cref="T:Atom.Windows.Controls.AddDataFormDialogOverlay`1"/> for the user
            to fill and is used for add operations.
            NOTE: The dialog updates the values of the model of the <paramref name="form"/> if any, when completed!
            </summary>
            <typeparam name="TResult">The type of the dialog result</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">
            The title of the dialog.
            Ex.: Product creation
            </param>
            <param name="message">The message of the dialog</param>
            <param name="form">The form to present</param>
            <param name="pathData">The path data of the icon</param>
            <param name="setNoInteractionOnOverlayClick">A flag indicating whether or not <see cref="P:Atom.Core.Controls.BaseDialogResult.NoInteraction"/> is set to true whether the overlay is clicked</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowConventionalEditDialogAsync``1(System.Windows.UIElement,System.String,System.String,Atom.Windows.Controls.DataForm{``0},System.String,System.Action{Atom.Windows.Controls.ConventionalEditDataFormDialogOverlay{``0}})">
            <summary>
            Shows a data form that dynamically creates the data form using the <typeparamref name="TClass"/> instead of 
            a derivative of <see cref="T:Atom.Core.Controls.BaseDialogResult"/> and is used for edit operations.
            NOTE: The dialog updates the values of the model of the <paramref name="form"/> if any, when completed!
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">
            The title of the dialog.
            Ex. Product modification.
            </param>
            <param name="message">The message of the dialog</param>
            <param name="form">The form to present</param>
            <param name="pathData">The path data of the icon</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowEditDialogAsync``1(System.Windows.UIElement,System.String,System.String,Atom.Windows.Controls.DataForm{``0},System.String,System.Action{Atom.Windows.Controls.EditFormDialogOverlay{``0}})">
            <summary>
            Shows the specified <paramref name="form"/> in a <see cref="T:Atom.Windows.Controls.AddDataFormDialogOverlay`1"/> for the user
            to fill and is used for edit operations.
            NOTE: The dialog updates the values of the model of the <paramref name="form"/> if any, when completed!
            </summary>
            <typeparam name="TResult">The type of the dialog result</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">
            The title of the dialog.
            Ex. Product modification.
            </param>
            <param name="message">The message of the dialog</param>
            <param name="form">The form to present</param>
            <param name="pathData">The path data of the icon</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowSearchDialogAsync``1(System.Windows.UIElement,System.String,System.String,System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,System.String},System.Func{``0,System.String},System.String,System.Action{Atom.Windows.Controls.ValidationDialogOverlay{Atom.Windows.Controls.SearchMenuInput{``0}}})">
            <summary>
            Shows a dialog that supports searching for an item
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="dataRetriever">The data retriever</param>
            <param name="pathData">The path data of the icon</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowImageSearchDialogAsync``1(System.Windows.UIElement,System.String,System.String,System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{``0}}}},System.Func{``0,System.String},System.Func{``0,System.Windows.Media.ImageSource},System.Func{``0,System.String},System.String,System.Action{Atom.Windows.Controls.ValidationDialogOverlay{Atom.Windows.Controls.ImageSearchMenuInput{``0}}})">
            <summary>
            Shows a dialog that supports searching for an item
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="dataRetriever">The data retriever</param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="pathData">The path data of the icon</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowStepsDialogAsync(System.Windows.UIElement,System.String,System.String,Atom.Windows.Controls.StepsPresenter,System.String,System.Double,System.Action{Atom.Windows.Controls.PreviewDialogOverlay})">
            <summary>
            Shows a dialog that contains the specified <paramref name="stepsPresenter"/>
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog.</param>
            <param name="message">The message of the dialog</param>
            <param name="stepsPresenter">The steps presenter</param>
            <param name="stepsPresenterWidth">
            The width of the steps presenter.
            NOTE: It's recommended for the width property of the presenter to be set  in order to prevent it from resizing it's time 
                  the current step is changed!
            </param>
            <param name="pathData">The path data of the icon</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowSelectSingleDialogAsync``3(System.Windows.UIElement,System.String,System.String,Atom.Windows.Controls.BaseSelectItemsControl{``0,``1,``2},System.String,System.Action{Atom.Windows.Controls.SelectDialogOverlay{``0,``1,``2}})">
            <summary>
            Shows a select dialog
            </summary>
            <typeparam name="TInnerItemsControl">The type of the item controls</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="itemsControl">The items control</param>
            <param name="pathData">The source of the header image</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowStackPanelSelectSingleDialogAsync``2(System.Windows.UIElement,System.String,System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,System.String},System.String)">
            <summary>
            Show a select dialog that uses a <see cref="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`2"/> as its items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="items">The items to show for selection</param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="pathData">The source of the header image</param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowUniformGridSelectSingleDialogAsync``2(System.Windows.UIElement,System.String,System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,System.String},System.String,System.Action{Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl{``0,``1}})">
            <summary>
            Show a select dialog that uses a <see cref="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2"/> as its items container.
            NOTE: By default the <see cref="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.Columns"/> property is set to 3!
                  Use the <paramref name="configureItemsControl"/> to further modify the items control!
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="items">The items to show for selection</param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="pathData">The source of the header image</param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
            <param name="configureItemsControl">Action that further configures the items control</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowCopySelectDialogAsync(System.Windows.UIElement,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Shows a copy dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="copyText">The text of the copy button</param>
            <param name="copyDescription">The description of the copy button</param>
            <param name="cutText">The text of the cut button</param>
            <param name="cutDescription">The description of the cut button</param>
            <param name="pathData">The path data of the icon of the dialog</param>
            <param name="copyPathData">The path data of the icon of the copy button</param>
            <param name="cutPathData">The path data of the icon of the cut button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowDateDialogAsync(System.Windows.UIElement,System.String,System.String,System.Action{Atom.Windows.Controls.DateDialogOverlay})">
            <summary>
            Shows a date dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowDateDialogAsync(System.String,System.String,System.Action{Atom.Windows.Controls.DateDialogOverlay})">
            <summary>
            Shows a date dialog
            </summary>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowColorDialogAsync(System.Windows.UIElement,System.String,System.String,System.Action{Atom.Windows.Controls.ColorDialogOverlay})">
            <summary>
            Shows a color dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowLongDaySpanDialogAsync(System.Windows.UIElement,System.String,System.String,System.Action{Atom.Windows.Controls.LongDaySpanDialogOverlay})">
            <summary>
            Shows a long day span dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowImagesDialogAsync(System.Windows.UIElement,System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Shows a dialog that presents multiple images
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="imagesSource">The source of the images</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowImageDialogAsync(System.Windows.UIElement,System.Windows.Media.ImageSource)">
            <summary>
            Shows a dialog that presents a single image
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="imageSource">The source of the image</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowTextDialogAsync(System.Windows.UIElement,System.String,System.String,System.String,System.Action{Atom.Windows.Controls.TextDialogOverlay})">
            <summary>
            Shows a text dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">The title of the dialog</param>
            <param name="message">The message of the dialog</param>
            <param name="pathData">The path data of the icon of the dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowOptionsSelectionDialogAsync``1(System.Windows.UIElement,System.String,System.String,Atom.Windows.Controls.OptionsSelectionForm{``0},System.String,System.Action{Atom.Windows.Controls.OptionsSelectionDialogOverlay{``0}})">
            <summary>
            Shows an options selection form as a dialog
            </summary>
            <typeparam name="TOption">The type of the options</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="title">
            The title of the dialog
            Ex.: Product selection
            </param>
            <param name="message">The message of the dialog</param>
            <param name="form">The form</param>
            <param name="pathData">The source of the header image</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowHintDialogAsync``2(System.Windows.UIElement,``0,System.Boolean,System.Single)">
            <summary>
            Shows a minimal dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input
            </summary>
            <typeparam name="THintDialogComponent">The type of the hint dialog component</typeparam>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="hintDialogComponent">The hint dialog component</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowHintDialogAsync``2(``0,System.Boolean,System.Single)">
            <summary>
            Shows a minimal dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input
            </summary>
            <typeparam name="THintDialogComponent">The type of the hint dialog component</typeparam>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <param name="hintDialogComponent">The hint dialog component</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowInfoHintDialogAsync(System.Windows.UIElement,System.String,System.Boolean,System.Single,System.Action{Atom.Windows.Controls.InfoHintDialogComponent})">
            <summary>
            Shows a hint dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="message">The message of the hint dialog</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowSuccessHintDialogAsync(System.Windows.UIElement,System.String,System.Boolean,System.Single,System.Action{Atom.Windows.Controls.SuccessHintDialogComponent})">
            <summary>
            Shows a success hint dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="message">The message of the hint dialog</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowChangesSavedHintDialogAsync(System.Windows.UIElement)">
            <summary>
            Shows a successful save hint dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowErrorHintDialogAsync(System.Windows.UIElement,System.String,System.Boolean,System.Single,System.Action{Atom.Windows.Controls.ErrorHintDialogComponent})">
            <summary>
            Shows an error hint dialog
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="message">The message of the hint dialog</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowLoadingHintDialogAsync(System.Windows.UIElement,System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows an loading hint dialog.
            NOTE: In order for the dialog to get closed, the user must use the <see cref="M:Atom.Windows.Controls.LoadingHintDialogComponent.SetCompleted"/> method
                  from the dialog component that is returned!
            Localization
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="message">The message of the hint dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowLoadingHintDialogAsync(System.Windows.UIElement,System.Func{System.Threading.Tasks.Task},System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> that's visible until the completion of the specified <paramref name="task"/>
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="task">The task</param>
            <param name="message">The message</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowLoadingHintDialogAsync``1(System.Windows.UIElement,System.Func{System.Threading.Tasks.Task{``0}},System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> that's visible until the completion of the specified <paramref name="task"/>
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="task">The task</param>
            <param name="message">The message</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowAddLoadingHintDialogAsync(System.Windows.UIElement,System.Func{System.Threading.Tasks.Task},System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> that's visible until the completion of the specified <paramref name="task"/>
            and is used for adding tasks
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="task">The task</param>
            <param name="message">The message</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowAddLoadingHintDialogAsync``1(System.Windows.UIElement,System.Func{System.Threading.Tasks.Task{``0}},System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> that's visible until the completion of the specified <paramref name="task"/>
            and is used for adding tasks
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="task">The task</param>
            <param name="message">The message</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowUpdateLoadingHintDialogAsync(System.Windows.UIElement,System.Func{System.Threading.Tasks.Task},System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> that's visible until the completion of the specified <paramref name="task"/>
            and is used for updating tasks
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="task">The task</param>
            <param name="message">The message</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowUpdateLoadingHintDialogAsync``1(System.Windows.UIElement,System.Func{System.Threading.Tasks.Task{``0}},System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> that's visible until the completion of the specified <paramref name="task"/>
            and is used for updating tasks
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="task">The task</param>
            <param name="message">The message</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowDeleteLoadingHintDialogAsync(System.Windows.UIElement,System.Func{System.Threading.Tasks.Task},System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> that's visible until the completion of the specified <paramref name="task"/>
            and is used for deleting tasks
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="task">The task</param>
            <param name="message">The message</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowDeleteLoadingHintDialogAsync``1(System.Windows.UIElement,System.Func{System.Threading.Tasks.Task{``0}},System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> that's visible until the completion of the specified <paramref name="task"/>
            and is used for deleting tasks
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="task">The task</param>
            <param name="message">The message</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DialogHelpers.ShowSavingHintDialogAsync(System.Windows.UIElement,System.String,System.Action{Atom.Windows.Controls.LoadingHintDialogComponent})">
            <summary>
            Shows an saving hint dialog.
            NOTE: In order for the dialog to get closed, the user must use the <see cref="M:Atom.Windows.Controls.LoadingHintDialogComponent.SetCompleted"/> method
                  from the dialog component that is returned!
            Localization
            </summary>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="message">The message of the hint dialog</param>
            <param name="configure">Action that further configures the overlay</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DialogTaskCompletionSource`1">
            <summary>
            A <see cref="T:System.Threading.Tasks.TaskCompletionSource`1"/> specialized for returning dialog results
            </summary>
            <typeparam name="TResult">The type of the result</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DialogTaskCompletionSource`1.AcceptsNoInteraction">
            <summary>
            A flag indicating whether no user interaction with the dialog component is accepted
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DialogTaskCompletionSource`1.SetNoInteraction">
            <summary>
            Creates a <see cref="T:Atom.Core.Controls.BaseDialogResult"/> and sets the <see cref="P:Atom.Core.Controls.BaseDialogResult.NoInteraction"/> flag to true and then returns the result
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.IDialogTaskCompletionSource">
            <summary>
            Provides abstractions for a <see cref="T:Atom.Windows.Controls.DialogTaskCompletionSource`1"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IDialogTaskCompletionSource.SetNoInteraction">
            <summary>
            Creates a <see cref="T:Atom.Core.Controls.BaseDialogResult"/> and sets the <see cref="P:Atom.Core.Controls.BaseDialogResult.NoInteraction"/> flag to true and then returns the result
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseHintDialogComponent`1">
            <summary>
            The base for all the hint dialog overlays
            </summary>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseHintDialogComponent`1.Result">
            <summary>
            The result in a form of a <see cref="T:Atom.Windows.Controls.DialogTaskCompletionSource`1"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseHintDialogComponent`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseHintDialogComponent`1.MessageTextBlock">
            <summary>
            The message text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseHintDialogComponent`1.Message">
            <summary>
            The message of the hint dialog
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseHintDialogComponent`1.MessageProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseHintDialogComponent`1.Message"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseHintDialogComponent`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseHintDialogComponent`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseHintDialogComponent`1.CreateControlButtons">
            <summary>
            Creates and returns the control buttons
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ErrorHintDialogComponent">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseHintDialogComponent`1"/> used for displaying error messages to the user
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ErrorHintDialogComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.InfoHintDialogComponent">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseHintDialogComponent`1"/> used for displaying informational messages to the user
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.InfoHintDialogComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.LoadingHintDialogComponent">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseHintDialogComponent`1"/> that is show when want to indicate a loading state
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LoadingHintDialogComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LoadingHintDialogComponent.SetCompleted">
            <summary>
            Sets the <see cref="P:Atom.Windows.Controls.BaseHintDialogComponent`1.Result"/> to no interaction
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LoadingHintDialogComponent.CreateControlButtons">
            <summary>
            Creates and returns the control buttons
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.LoadingHintDialogComponent.ActualHeightToMarginConverter">
            <summary>
            Calculates the appropriate margin values for the loading image
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SuccessHintDialogComponent">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseHintDialogComponent`1"/> used for showing success messages to the user
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SuccessHintDialogComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ValidationDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> that presents the specified <typeparamref name="TElement"/> and
            used a <see cref="P:Atom.Windows.Controls.ValidationDialogOverlay`1.Validator"/> to validate its state
            </summary>
            <typeparam name="TElement">The type of the element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ValidationDialogOverlay`1.Element">
            <summary>
            The element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ValidationDialogOverlay`1.Validator">
            <summary>
            The validator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ValidationDialogOverlay`1.PositiveFeedbackText">
            <summary>
            The string of the positive feedback text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ValidationDialogOverlay`1.PositiveFeedbackTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ValidationDialogOverlay`1.PositiveFeedbackText"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ValidationDialogOverlay`1.NegativeFeedbackText">
            <summary>
            The string of the negative feedback text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ValidationDialogOverlay`1.NegativeFeedbackProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ValidationDialogOverlay`1.NegativeFeedbackText"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ValidationDialogOverlay`1.#ctor(`0,System.Func{`0,System.Boolean})">
            <summary>
            Default constructor
            </summary>
            <param name="element">The element</param>
            <param name="validator">The validator</param>
        </member>
        <member name="M:Atom.Windows.Controls.ValidationDialogOverlay`1.CreateGUI(`0)">
            <summary>
            Creates and adds the required GUI elements
            </summary>
            <param name="element">The element</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDialogOverlay`1">
            <summary>
            The base for all the dialog overlays
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.mOverlayGrid">
            <summary>
            The overlay grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder">
            <summary>
            The content border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.mMouseDownPos">
            <summary>
            The mouse down position coordinates on the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/>.
            NOTE: If this value is not null then the dragging of the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/> is active!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.Result">
            <summary>
            The result in a form of a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.OverlayColor">
            <summary>
            The color of the overlay
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.OverlayColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.OverlayColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.OverlayOpacity">
            <summary>
            The opacity of the overlay
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.OverlayOpacityProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.OverlayOpacity"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.ComponentBackground">
            <summary>
            The background of the component
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.ComponentBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.ComponentBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.NoInteractionOnOverlayClick">
            <summary>
            A flag indicating whether or not <see cref="P:Atom.Core.Controls.BaseDialogResult.NoInteraction"/> is set to true whether the overlay is clicked
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.NoInteractionOnOverlayClickProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.NoInteractionOnOverlayClick"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.HorizontalContentAlignment">
            <summary>
            The horizontal alignment of the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.HorizontalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.HorizontalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.VerticalContentAlignment">
            <summary>
            The vertical alignment of the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.VerticalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.VerticalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.Padding">
            <summary>
            The margin of the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.PaddingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.Padding"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.DraggingEnabled">
            <summary>
            A flag indicating whether the dragging of the dialog is enabled or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.DraggingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.DraggingEnabled"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMaxWidth">
            <summary>
            The max width of the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMaxWidthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMaxWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMaxHeight">
            <summary>
            The max height of the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMaxHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMaxHeight"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMinWidth">
            <summary>
            The min width of the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMinWidthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMinWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMinHeight">
            <summary>
            The min height of the <see cref="F:Atom.Windows.Controls.BaseDialogOverlay`1.mContentBorder"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMinHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogOverlay`1.ContentMinHeight"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogOverlay`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogOverlay`1.AnimateInAsync">
            <summary>
            Animates in the overlay
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogOverlay`1.AnimateOutAsync">
            <summary>
            Animates out the overlay
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogOverlay`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StandardDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> that has the ability to set its <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.Title"/>, its <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.Description"/>
            and its <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.PathData"/>.
            </summary>
            <typeparam name="TResult">The type of the dialog result</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDialogOverlay`1.ComponentsGrid">
            <summary>
            The grid that contains the components
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDialogOverlay`1.ContentPresenter">
            <summary>
            The content presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDialogOverlay`1.PathData">
            <summary>
            The path data of the header icon
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDialogOverlay`1.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.PathData"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDialogOverlay`1.ImageColor">
            <summary>
            The color of the image
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDialogOverlay`1.ImageColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.ImageColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDialogOverlay`1.Title">
            <summary>
            The title of the dialog
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDialogOverlay`1.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.Title"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDialogOverlay`1.TitleForeground">
            <summary>
            The foreground of the title
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDialogOverlay`1.TitleForegroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.TitleForeground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDialogOverlay`1.Description">
            <summary>
            The description of the dialog
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDialogOverlay`1.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.Description"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDialogOverlay`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDialogOverlay`1.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> that places the <see cref="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.FeedbackButtonsGrid"/> at the second row
            of the <see cref="P:Atom.Windows.Controls.StandardDialogOverlay`1.ComponentsGrid"/>
            </summary>
            <typeparam name="TResult">The type of the dialog result</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.FeedbackButtonsGrid">
            <summary>
            Grid that contains the <see cref="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.NegativeFeedbackButton"/> and the <see cref="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.PositiveFeedbackButton"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.NegativeFeedbackButton">
            <summary>
            The negative feedback button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.PositiveFeedbackButton">
            <summary>
            The positive feedback button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.AllowNegativeFeedback">
            <summary>
            A flag indicating whether negative feedback is allowed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ConventionalDialogOverlay`1.AllowNegativeFeedbackProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.AllowNegativeFeedback"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.PositiveFeedbackText">
            <summary>
            The text that represents the positive feedback
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ConventionalDialogOverlay`1.PositiveFeedbackTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.PositiveFeedbackText"/> dependency property
            Localization
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.NegativeFeedbackText">
            <summary>
            The text that represents the negative feedback
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ConventionalDialogOverlay`1.NegativeFeedbackTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ConventionalDialogOverlay`1.NegativeFeedbackText"/> dependency property
            Localization
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDialogOverlay`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDialogOverlay`1.Validate">
            <summary>
            Validates the state of the overlay
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDialogOverlay`1.GetPositiveFeedbackResult">
            <summary>
            Creates and returns the positive feedback result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDialogOverlay`1.GetNegativeFeedbackResult">
            <summary>
            Creates and returns the negative feedback result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDialogOverlay`1.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ColorDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> used for presenting color dialogs to the user
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorDialogOverlay.ColorInput">
            <summary>
            The color input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorDialogOverlay.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorDialogOverlay.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.AddDataFormDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DataFormDialogOverlay`1"/> that is used for filling data forms
            and their result is used for add operations
            </summary>
            <typeparam name="TResult">The type of the dialog result that is returned</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.AddDataFormDialogOverlay`1.#ctor(Atom.Windows.Controls.DataForm{`0})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The data form</param>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalAddDataFormDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> that uses <see cref="T:Atom.Core.Controls.ModelDialogResult`1"/> a
            as the type of the dialog result and can dynamically create the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/>
            using the <see cref="P:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.Form"/> and is used for add operations.
            NOTE: The benefit of this overlay us that it doesn't require a <see cref="T:Atom.Core.Controls.BaseDialogResult"/> derivative to be created in
                  order for it to be used, since it dynamically creates data models of type <typeparamref name="TClass"/> and
                  stores them at the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/> property!
            NOTE: If the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/> is not set then it means that the <see cref="P:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.Form"/>
                  was not filled correctly by the user!
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalAddDataFormDialogOverlay`1.#ctor(Atom.Windows.Controls.DataForm{`0})">
            <summary>
            Default constructor
            </summary>
            <param name="form">
            The data form
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> that uses <see cref="T:Atom.Core.Controls.ModelDialogResult`1"/> a
            as the type of the dialog result and can dynamically create the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/>
            using the <see cref="P:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.Form"/>.
            NOTE: The benefit of this overlay us that it doesn't require a <see cref="T:Atom.Core.Controls.BaseDialogResult"/> derivative to be created in
                  order for it to be used, since it dynamically creates data models of type <typeparamref name="TClass"/> and
                  stores them at the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/> property!
            NOTE: If the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/> is not set then it means that the <see cref="P:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.Form"/>
                  was not filled correctly by the user!
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.Form">
            <summary>
            The data form
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.#ctor(Atom.Windows.Controls.DataForm{`0})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The data form</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.Validate">
            <summary>
            Validates the state of the overlay
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.GetPositiveFeedbackResult">
            <summary>
            Creates and returns the positive feedback result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.CreateGUI(Atom.Windows.Controls.DataForm{`0})">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalEditDataFormDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> that uses <see cref="T:Atom.Core.Controls.ModelDialogResult`1"/> a
            as the type of the dialog result and can dynamically create the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/>
            using the <see cref="P:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.Form"/> and is used for edit operations.
            NOTE: The benefit of this overlay us that it doesn't require a <see cref="T:Atom.Core.Controls.BaseDialogResult"/> derivative to be created in
                  order for it to be used, since it dynamically creates data models of type <typeparamref name="TClass"/> and
                  stores them at the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/> property!
            NOTE: If the <see cref="P:Atom.Core.Controls.ModelDialogResult`1.Model"/> is not set then it means that the <see cref="P:Atom.Windows.Controls.ConventionalDataFormDialogOverlay`1.Form"/>
                  was not filled correctly by the user!
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalEditDataFormDialogOverlay`1.#ctor(Atom.Windows.Controls.DataForm{`0})">
            <summary>
            Default constructor
            </summary>
            <param name="form">
            The data form
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.DataDialogHelpers">
            <summary>
            Helper methods associated with the data dialogs
            TODO: Better implementation, find a way to use inheritance somehow
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataDialogHelpers.ModifyComponentsGrid(System.Windows.Controls.Grid,System.Windows.UIElement,System.Func{System.Windows.UIElement,System.Windows.UIElement})">
            <summary>
            Modifies the <paramref name="componentsGrid"/> and sets it up to be able to host the <paramref name="form"/> 
            and the element provided by <paramref name="createControlElements"/>
            </summary>
            <param name="componentsGrid">The components grid</param>
            <param name="form">The data form</param>
            <param name="createControlElements">Delegate that returns the elements that contains the control elements of the overlay</param>
        </member>
        <member name="T:Atom.Windows.Controls.DataFormDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> that is used for presenting a <see cref="T:Atom.Windows.Controls.DataForm`2"/>
            to the user to fill.
            </summary>
            <typeparam name="TResult">The type of the dialog result that is returned</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DataFormDialogOverlay`1.Form">
            <summary>
            The data form
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataFormDialogOverlay`1.#ctor(Atom.Windows.Controls.DataForm{`0})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The data form</param>
        </member>
        <member name="M:Atom.Windows.Controls.DataFormDialogOverlay`1.Validate">
            <summary>
            Validates the state of the overlay
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataFormDialogOverlay`1.GetPositiveFeedbackResult">
            <summary>
            Creates and returns the positive feedback result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DataFormDialogOverlay`1.CreateGUI(Atom.Windows.Controls.DataForm{`0})">
            <summary>
            Creates and adds the required GUI elements
            </summary>
            <param name="form">The data form</param>
        </member>
        <member name="T:Atom.Windows.Controls.EditFormDialogOverlay`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DataFormDialogOverlay`1"/> that is used for filling data forms
            and their result is used for edit operations
            </summary>
            <typeparam name="TResult">The type of the dialog result that is returned</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.EditFormDialogOverlay`1.#ctor(Atom.Windows.Controls.DataForm{`0})">
            <summary>
            Default constructor
            </summary>
            <param name="form">The data form</param>
        </member>
        <member name="T:Atom.Windows.Controls.DateDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> used for presenting date dialogs to the user
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateDialogOverlay.DateInput">
            <summary>
            The date input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateDialogOverlay.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateDialogOverlay.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ErrorDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> used for presenting error dialogs to the user
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ErrorDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ErrorDialogOverlay.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ImageDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDialogOverlay`1"/> used for presenting a single image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDialogOverlay.ImageSource">
            <summary>
            The source of the image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDialogOverlay.ImageRectangle">
            <summary>
            The image
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDialogOverlay.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ImagesDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDialogOverlay`1"/> used for presenting images to the user
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImagesDialogOverlay.ImagesPresenter">
            <summary>
            The images presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImagesDialogOverlay.ImagesSource">
            <summary>
            The source of the images that are being presented
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImagesDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImagesDialogOverlay.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.InfoDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> used for presenting info dialogs to the user
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.InfoDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.LongDaySpanDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ConventionalDialogOverlay`1"/> used for presenting long day span dialogs to the user
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanDialogOverlay.DaySpan">
            <summary>
            The selected day span
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanDialogOverlay.LongDaySpanInput">
            <summary>
            The long day span input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanDialogOverlay.GetPositiveFeedbackResult">
            <summary>
            Creates and returns the positive feedback result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanDialogOverlay.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.OptionsSelectionDialogOverlay`1">
            <summary>
            The <see cref="T:Atom.Windows.Controls.ConventionalDialogOverlay`1"/> that hosts a <see cref="T:Atom.Windows.Controls.OptionsSelectionForm`1"/>
            </summary>
            <typeparam name="TOption">The type of the options</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.OptionsSelectionDialogOverlay`1.Form">
            <summary>
            The options selection form
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionDialogOverlay`1.#ctor(Atom.Windows.Controls.OptionsSelectionForm{`0})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionDialogOverlay`1.GetPositiveFeedbackResult">
            <summary>
            Creates and returns the positive feedback result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OptionsSelectionDialogOverlay`1.CreateGUI(Atom.Windows.Controls.OptionsSelectionForm{`0})">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.PreviewDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDialogOverlay`1"/> used for presenting a ui element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PreviewDialogOverlay.#ctor(System.Windows.UIElement)">
            <summary>
            Default constructor
            </summary>
            <param name="element">The element to present</param>
        </member>
        <member name="M:Atom.Windows.Controls.PreviewDialogOverlay.CreateGUI(System.Windows.UIElement)">
            <summary>
            Creates and adds the required GUI elements
            </summary>
            <param name="element">The element to present</param>
        </member>
        <member name="T:Atom.Windows.Controls.SelectDialogOverlay`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> that hosts a <see cref="T:Atom.Windows.Controls.BaseSelectItemsControl`3"/>
            </summary>
            <typeparam name="TInnerItemsControl">The type of the item controls</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.SelectDialogOverlay`3.ItemsControl">
            <summary>
            The items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SelectDialogOverlay`3.#ctor(Atom.Windows.Controls.BaseSelectItemsControl{`0,`1,`2})">
            <summary>
            Default constructor
            </summary>
            <param name="itemsControl">The items control</param>
        </member>
        <member name="M:Atom.Windows.Controls.SelectDialogOverlay`3.CreateGUI(Atom.Windows.Controls.BaseSelectItemsControl{`0,`1,`2})">
            <summary>
            Creates and adds the required GUI elements
            </summary>
            <param name="itemsControl">The items control</param>
        </member>
        <member name="T:Atom.Windows.Controls.TextDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDialogOverlay`1"/> used for presenting text dialogs
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDialogOverlay.InputControl">
            <summary>
            The input control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDialogOverlay.Validate">
            <summary>
            Validates the result before closing the dialog
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDialogOverlay.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDialogOverlay.OKButton">
            <summary>
            The OK button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDialogOverlay.OKText">
            <summary>
            The text of the OK button
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextDialogOverlay.OKTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextDialogOverlay.OKText"/> dependency property
            Localization
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDialogOverlay.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TransitionalDialogOverlay">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ConventionalDialogOverlay`1"/> that is used for presenting transitional dialogs to the user
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TransitionalDialogOverlay.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TransitionalDialogOverlay.GetPositiveFeedbackResult">
            <summary>
            Creates and returns the positive feedback result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TransitionalDialogOverlay.GetNegativeFeedbackResult">
            <summary>
            Creates and returns the negative feedback result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TransitionalDialogOverlay.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ColorDialogResult">
            <summary>
            A <see cref="T:Atom.Core.Controls.StandardDialogResult"/> used when displaying a color dialog to the user
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorDialogResult.Color">
            <summary>
            The color selected by the user
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorDialogResult.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDropDownButton`1">
            <summary>
            The base for all the drop down buttons
            </summary>
            <typeparam name="TSecondContentElement">The type of the second content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDropDownButton`1.Icon">
            <summary>
            The icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDropDownButton`1.DropDownIndicator">
            <summary>
            The drop down indicator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDropDownButton`1.PathData">
            <summary>
            The source of the svg icon
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDropDownButton`1.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.PathData"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.OnPathDataPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.PathData"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDropDownButton`1.Text">
            <summary>
            The text of the button
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDropDownButton`1.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.Text"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.OnTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.Text"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDropDownButton`1.FontSize">
            <summary>
            The font size of the text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDropDownButton`1.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.FontSize"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDropDownButton`1.IsOpen">
            <summary>
            If true, then the pop up is visible, otherwise it's not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDropDownButton`1.IsOpenProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.IsOpen"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.IsOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.IsOpen"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDropDownButton`1.ShowText">
            <summary>
            A flag indicating whether the text should be shown or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDropDownButton`1.ShowTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.ShowText"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.ShowTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.ShowText"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDropDownButton`1.ShowDropDownIndicator">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.DropDownIndicator"/> should be shown or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDropDownButton`1.ShowDropDownIndicatorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.ShowDropDownIndicator"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.ShowDropDownIndicatorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.ShowDropDownIndicator"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.OnIsOpenChange(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.IsOpen"/> changes
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.CreateFirstContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the first content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.CreateSecondContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the second content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.CreateThirdContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the third content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.CreateFirstContentElement">
            <summary>
            Creates and returns the primary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.CreateThirdContentElement">
            <summary>
            Creates and returns the tertiary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.DropDownButton_Clicked">
            <summary>
            Handles the click of the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.DownwardsScroll">
            <summary>
            Fires every time the user scrolls downwards on the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.UpwardsScroll">
            <summary>
            Fires every time the users scrolls upwards on the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.OnPathDataChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.PathData"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.Text"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.OnShowTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.ShowText"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.OnShowDropDownIndicatorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.ShowDropDownIndicator"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.DropDownButton_Scroll(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the mouse wheel of the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton`1.OnTextChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.Text"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseDropDownButton`1.TextChanged">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.Text"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDropDownButton">
            <summary>
            A standard drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton.CreateSecondContentElement">
            <summary>
            Creates and returns the secondary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDropDownButton.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.Text"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownButton`1">
            <summary>
            A drop down that can host any ui element using its <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> property
            </summary>
            <typeparam name="TContent">The type of the content</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownButton`1.Content">
            <summary>
            The content of the drop down
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DropDownButton`1.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownButton`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownButton">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownButton"/> that has preset the type of its content to <see cref="T:System.Windows.UIElement"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BasePicker`1">
            <summary>
            The base for every drop down picker
            </summary>
            <typeparam name="TContent">The type of the content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BasePicker`1.Popup">
            <summary>
            The popup that contains the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePicker`1.DropDownPlacement">
            <summary>
            The placement of the drop down
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BasePicker`1.DropDownPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BasePicker`1.DropDownPlacement"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`1.DropDownPlacementPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BasePicker`1.DropDownPlacement"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`1.OnDropDownPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`1.DropDownPlacement"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BasePicker`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePicker`1"/> that has the ability to select a <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/>
            </summary>
            <typeparam name="TValue">The type of the value that is selected</typeparam>
            <typeparam name="TContent">The type of the content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BasePicker`2.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.BasePicker`2.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePicker`2.Value">
            <summary>
            The value of the picker
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BasePicker`2.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`2.ValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`2.CreateContent">
            <summary>
            Creates and returns the element that will be used as the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> of the dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`2.OnContentCreated(`1)">
            <summary>
            Handles the creation of the <paramref name="content"/> element
            </summary>
            <param name="content">The content</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`2.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePicker`2.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BasePicker`2.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CollapsibleVerticalMenu`3">
            <summary>
            A control that can hide its content that is presented in a form of a vertical menu
            </summary>
            <typeparam name="TPanel">The type of the panel that contains the items</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.DropDownButton">
            <summary>
            The drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.ItemsContainerPresenter">
            <summary>
            The items presenter that contains the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>.
            NOTE: We use this container in order to be able to apply the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.Padding"/> as the margin of the
                  <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/> and the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpen"/>
                  flag as the visibility of the presenter!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.Text">
            <summary>
            The text of the button
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CollapsibleVerticalMenu`3.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.Text"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpen">
            <summary>
            If true, then the menu is visible, otherwise it's not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpenProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpen"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpen"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.Padding">
            <summary>
            The margin of the items container
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CollapsibleVerticalMenu`3.PaddingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.Padding"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.#ctor(System.Func{`1,`2})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.CreateDropDownButton">
            <summary>
            Creates and returns the drop down button.
            NOTE: This method gets called by the <see cref="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.OnInitialized(System.EventArgs)"/> method!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.OnIsOpenChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpen"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.OnIsOpenChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpen"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpenChanged">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.CollapsibleVerticalMenu`3.IsOpen"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CollapsibleVerticalMenuDropDownButton">
            <summary>
            The standard <see cref="T:Atom.Windows.Controls.BaseDropDownButton"/> used by the <see cref="T:Atom.Windows.Controls.CollapsibleVerticalMenu`3"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenuDropDownButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CollapsibleVerticalMenuDropDownButton.CreateSecondContentElement">
            <summary>
            Creates and returns the secondary content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CollapsibleVerticalMenu`3"/> that uses a <see cref="T:System.Windows.Controls.StackPanel"/> as the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StackPanelItemsControl`2"/> that uses <see cref="T:System.Windows.UIElement"/> as the type of its elements
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu`1"/> that uses a <see cref="T:Atom.Windows.Controls.MenuButton"/> as the type of its items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu.Add(System.String,System.String)">
            <summary>
            Adds a <see cref="T:Atom.Windows.Controls.MenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
        </member>
        <member name="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CollapsibleVerticalMenu`3"/> that uses a <see cref="T:System.Windows.Controls.Primitives.UniformGrid"/> as the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.Columns">
            <summary>
            The number of columns of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.Columns"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.Rows">
            <summary>
            The number of rows of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.RowsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.Rows"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2.OnItemsContainerCreated(System.Windows.Controls.Primitives.UniformGrid)">
            <summary>
            Handles the creation of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="itemsContainer">The items container</param>
        </member>
        <member name="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`2"/> that uses <see cref="T:System.Windows.UIElement"/> as the type of its associated elements
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu">
            <summary>
            A <see cref="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`1"/> that uses a <see cref="T:Atom.Windows.Controls.MenuButton"/> as the type of items associated items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu.Add(System.String,System.String)">
            <summary>
            Adds a <see cref="T:Atom.Windows.Controls.MenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
        </member>
        <member name="T:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CollapsibleVerticalMenu`3"/> that uses a <see cref="T:System.Windows.Controls.WrapPanel"/> as the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.ItemWidth">
            <summary>
            Gets or sets a value that specifies the height of all items that are contained
            within a <see cref="T:System.Windows.Controls.WrapPanel"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.ItemWidthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.ItemWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.ItemHeight">
            <summary>
            Gets or sets a value that specifies the width of all items that are contained
            within a <see cref="T:System.Windows.Controls.WrapPanel"/>.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.ItemHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.ItemHeight"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.Orientation">
            <summary>
            The orientation.
            NOTE: The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.Orientation"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2.OnItemsContainerCreated(System.Windows.Controls.WrapPanel)">
            <summary>
            Handles the creation of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="itemsContainer">The items container</param>
        </member>
        <member name="T:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2"/> that uses <see cref="T:System.Windows.UIElement"/> as the type of its associated elements
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ColorPicker">
            <summary>
            A color input inside a drop down
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorPicker.ColorInput">
            <summary>
            The color input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorPicker.ShowHexValue">
            <summary>
            A flag indicating whether the hex value is shown in the picker button or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorPicker.ShowHexValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorPicker.ShowHexValue"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPicker.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPicker.CreateContent">
            <summary>
            Creates and returns the element that will be used as the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> of the dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPicker.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPicker.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ColorPickerColorInput">
            <summary>
            Color input configured for a color picker
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorPickerColorInput.mPicker">
            <summary>
            The color picker that contains this color input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPickerColorInput.#ctor(Atom.Windows.Controls.ColorPicker)">
            <summary>
            Default constructor
            </summary>
            <param name="picker">The color picker that contains this color input</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPickerColorInput.ColorButton_Clicked(Atom.Windows.Controls.ColorInputColorButton)">
            <summary>
            Handles the click of a color button
            </summary>
            <param name="colorButton">The color button</param>
        </member>
        <member name="T:Atom.Windows.Controls.DatePicker">
            <summary>
            A date input inside a drop down
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DatePicker.ClearButton">
            <summary>
            The clear button that's only visible when the <see cref="P:Atom.Windows.Controls.DatePicker.AllowNullInput"/> property is set to true
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DatePicker.DateFormatProvider">
            <summary>
            Formats the date value and returns the string equivalent
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DatePicker.DateFormatProviderProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DatePicker.DateFormatProvider"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.OnDateFormatProviderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.DatePicker.DateFormatProvider"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DatePicker.PresentedDate">
            <summary>
            The date that is currently being presented
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DatePicker.PresentedDateProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DatePicker.PresentedDate"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DatePicker.AllowNullInput">
            <summary>
            A flag indicating whether a null value should be allowed to be inserted
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DatePicker.AllowNullInputProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DatePicker.AllowNullInput"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.Update">
            <summary>
            Updates the date picker
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.CreateContent">
            <summary>
            Creates and returns the element that will be used as the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> of the dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.OnDateFormatProviderChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DatePicker.DateFormatProvider"/> property
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.DownwardsScroll">
            <summary>
            Fires every time the user scrolls downwards on the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.UpwardsScroll">
            <summary>
            Handles the mouse wheel of the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.ChangePresentedDate">
            <summary>
            Changes the presented date of the date input when needed
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DatePicker.ChangeDate(System.Int32)">
            <summary>
            Changes the date based on the <paramref name="threshold"/>
            </summary>
            <param name="threshold">The change threshold</param>
        </member>
        <member name="T:Atom.Windows.Controls.DatePickerDateInput">
            <summary>
            A date input configured for a date picker
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DatePickerDateInput.mPicker">
            <summary>
            The date picker that contains the date input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DatePickerDateInput.#ctor(Atom.Windows.Controls.DatePicker)">
            <summary>
            Default constructor
            </summary>
            <param name="picker">The date picker that contains the date input</param>
        </member>
        <member name="M:Atom.Windows.Controls.DatePickerDateInput.MonthDateButton_Clicked(Atom.Windows.Controls.DateInputDateButton)">
            <summary>
            Handles the click of the month date button
            </summary>
            <param name="dateButton">The date button</param>
        </member>
        <member name="T:Atom.Windows.Controls.DropDown`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePicker`1"/> that presents elements to the user in the <see cref="P:Atom.Windows.Controls.BasePicker`1.Popup"/>
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
            <typeparam name="TItemsControl">The derivatives of the <see cref="T:Atom.Windows.Controls.BaseItemsControl`1"/> that is used as the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> and presents the items</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.DropDown`3.mLinker">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DropDown`3.Linker"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDown`3.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDown`3.Linker">
            <summary>
            Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.DropDown`3.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.DropDown`3.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDown`3.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDown`3.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDown`3.Elements">
            <summary>
            The elements contained in the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Add(`0)">
            <summary>
            Adds the specified <paramref name="item"/>
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Remove(`0)">
            <summary>
            Removes the specified <paramref name="item"/>
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Contains(`0)">
            <summary>
            Checks if the items control contains the specified <paramref name="item"/>
            </summary>
            <param name="item">The item to check if exists</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.ContainsElement(`1)">
            <summary>
            Checks if the items control contains the specified <paramref name="element"/>
            </summary>
            <param name="element">The element to check if exists</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.GetElement(`0)">
            <summary>
            Gets the <typeparamref name="TElement"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Get(`1)">
            <summary>
            Returns the <typeparamref name="TItem"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.CreateContent">
            <summary>
            Creates the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`3.OnLinkerChanged(System.Func{`0,`1})">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DropDown`3.Linker"/> property
            </summary>
            <param name="newLinker">The new linker</param>
        </member>
        <member name="T:Atom.Windows.Controls.DropDown`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`3"/> that uses a <see cref="T:Atom.Windows.Controls.StackPanelItemsControl`2"/> at its <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/>
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`2.CreateContent">
            <summary>
            Creates the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DropDown`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`2"/> that uses <typeparamref name="TItem"/> as the type of its elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DropDown">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`1"/> that uses <see cref="T:System.Windows.UIElement"/> as the type of its items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown.Add(System.String,System.String)">
            <summary>
            Adds a <see cref="T:Atom.Windows.Controls.MenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDown.AddSeparator">
            <summary>
            Adds a separator
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenuBaseMenuInputComponent`3">
            <summary>
            Menu input configured for a drop down
            </summary>
            <typeparam name="TPanel">The type of the panel that contains the items</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.DropDownMenuBaseMenuInputComponent`3.mDropDown">
            <summary>
            The drop down that contains this menu input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuBaseMenuInputComponent`3.#ctor(Atom.Core.IOpenable)">
            <summary>
            Default constructor
            </summary>
            <param name="dropDown">The drop down that contains this menu input</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuBaseMenuInputComponent`3.Item_Clicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of an item
            </summary>
            <param name="sender">The element that fires the <see cref="E:Atom.Windows.Controls.BackgroundControl.Click"/> event</param>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelDropDownMenuMenuInputComponent`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownMenuBaseMenuInputComponent`3"/> that uses a <see cref="T:System.Windows.Controls.StackPanel"/> as the items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelDropDownMenuMenuInputComponent`2.#ctor(Atom.Core.IOpenable)">
            <summary>
            Default constructor
            </summary>
            <param name="dropDown">The drop down that contains this menu input</param>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenu`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePicker`2"/> that allows the user to select one of the items placed in the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/>
            that's a <see cref="T:Atom.Windows.Controls.StackPanelDropDownMenuMenuInputComponent`2"/>
            </summary>
            <typeparam name="TValue">The type of the value</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.DropDownMenu`3.mLinker">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DropDownMenu`3.Linker"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.Linker">
            <summary>
            Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.IconPathDataSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.#ctor(System.Func{`1,System.String},System.Func{`1,System.String},System.Func{`1,`2})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Update">
            <summary>
            Updates the element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.Items">
            <summary>
            The items of the drop down menu
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`1})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.SetItemsSource(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.IndexOf(`1)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Insert(System.Int32,`1)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Replace(`1,`1)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.Elements">
            <summary>
            The elements the items control contains
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenu`3.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Add(`1)">
            <summary>
            Adds the specified <paramref name="item"/>
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.AddRange(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Remove(`1)">
            <summary>
            Removes the specified <paramref name="item"/>
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Contains(`1)">
            <summary>
            Checks if the items control contains the specified <paramref name="item"/>
            </summary>
            <param name="item">The item to check if exists</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.ContainsElement(`2)">
            <summary>
            Checks if the items control contains the specified <paramref name="element"/>
            </summary>
            <param name="element">The element to check if exists</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.GetElement(`1)">
            <summary>
            Gets the <typeparamref name="TElement"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Get(`2)">
            <summary>
            Returns the <typeparamref name="TItem"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Select(System.Int32)">
            <summary>
            Selects the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Select(`1)">
            <summary>
            Selects the specified <paramref name="item"/>
            </summary>
            <param name="item">The item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.Select(`2)">
            <summary>
            Selects the <typeparamref name="TItem"/> that associated with the specified <paramref name="element"/>
            </summary>
            <param name="element">The element whose associated item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.CreateContent">
            <summary>
            Creates and returns the element that will be used as the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> of the dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.ToValue(`1)">
            <summary>
            Converts or selects the value that represents the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.ToItem(`0)">
            <summary>
            Converts or selects the item that represents the specified <paramref name="value"/>
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.OnLinkerChanged(System.Func{`1,`2})">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DropDownMenu`3.Linker"/> property
            </summary>
            <param name="newLinker">The new linker</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`3.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenu`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownMenu`3"/> whose selected value is of the same type as the type of
            its items
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`2.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`2.ToItem(`0)">
            <summary>
            Converts or selects the item that represents the specified <paramref name="value"/>
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`2.ToValue(`0)">
            <summary>
            Converts or selects the value that represents the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenu`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownMenu`2"/> that uses a <see cref="T:Atom.Windows.Controls.MenuButton"/> as the type of its elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.MenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.MenuButton"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenu">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownMenu`1"/> that has pre-set the type of its items to <see cref="T:Atom.Windows.Controls.MenuButton"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu.#ctor(System.Func{Atom.Windows.Controls.MenuButton,System.String},System.Func{Atom.Windows.Controls.MenuButton,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenu.Add(System.String,System.String)">
            <summary>
            Adds a <see cref="T:Atom.Windows.Controls.MenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
        </member>
        <member name="T:Atom.Windows.Controls.ImageDropDownMenu`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownMenu`3"/> that can present an image related to the selected item
            </summary>
            <typeparam name="TValue">The type of the value</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSourceSelector">
            <summary>
            The selector responsible for extracting an <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageAndTextBlockGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.CircularImage"/> and the <see cref="P:Atom.Windows.Controls.DualContentControl`2.SecondContentElement"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDropDownMenu`3.CircularImage">
            <summary>
            The circular image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource">
            <summary>
            The image source
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`3.OnImageSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`3.#ctor(System.Func{`1,System.String},System.Func{`1,System.Windows.Media.ImageSource},System.Func{`1,System.String},System.Func{`1,`2})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting an <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`3.CreateSecondContentElement">
            <summary>
            Creates and returns the secondary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`3.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`3.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`3.OnImageSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ImageDropDownMenu`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ImageDropDownMenu`3"/> whose selected value is of the same type is the type of
            its items
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`2.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String},System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting an <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`2.ToItem(`0)">
            <summary>
            Converts or selects the item that represents the specified <paramref name="value"/>
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`2.ToValue(`0)">
            <summary>
            Converts or selects the value that represents the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ImageDropDownMenu`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.ImageDropDownMenu`2"/> that uses a <see cref="T:Atom.Windows.Controls.ImageMenuButton"/> as the type of its elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.ImageMenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting an <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.ImageMenuButton"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDownMenu`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.TextInputDropDownMenu`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownMenu`2"/> that uses a <see cref="T:Atom.Windows.Controls.TextInput"/> as its text presenter allowing the user
            to add custom values.
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputDropDownMenu`2.InputFormatter">
            <summary>
            Formats the inserted <see cref="T:System.String"/> value.
            NOTE: Predefined input formatters can be found at <see cref="T:Atom.Core.InputFormatters"/>!
            NOTE: The first inserted <see cref="T:System.String"/> is the current value!
            NOTE: The second inserted <see cref="T:System.String"/> is the new value!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextInputDropDownMenu`2.InputFormatterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextInputDropDownMenu`2.InputFormatter"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputDropDownMenu`2.Hint">
            <summary>
            A hint message that is displayed when the input is empty
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextInputDropDownMenu`2.HintProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextInputDropDownMenu`2.Hint"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`2.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`2.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`2.OnContentCreated(Atom.Windows.Controls.StackPanelDropDownMenuMenuInputComponent{`0,`1})">
            <summary>
            Handles the creation of the <paramref name="content"/> element
            </summary>
            <param name="content">The content</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`2.ToItem(System.String)">
            <summary>
            Converts or selects the item that represents the specified <paramref name="value"/>
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`2.ToValue(`0)">
            <summary>
            Converts or selects the value that represents the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`2.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.Text"/> property
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Atom.Windows.Controls.TextInputDropDownMenu`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.TextInputDropDownMenu`2"/> that has pre-set the type of the associated elements to <see cref="T:Atom.Windows.Controls.MenuButton"/>
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.MenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.MenuButton"/> that is associate with the inserted <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.TextInputDropDownMenu">
            <summary>
            A <see cref="T:Atom.Windows.Controls.TextInputDropDownMenu`1"/> that has pre-set the type of its items to <see cref="T:Atom.Windows.Controls.MenuButton"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu.#ctor(System.Func{Atom.Windows.Controls.MenuButton,System.String},System.Func{Atom.Windows.Controls.MenuButton,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputDropDownMenu.Add(System.String,System.String)">
            <summary>
            Adds a <see cref="T:Atom.Windows.Controls.MenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
        </member>
        <member name="T:Atom.Windows.Controls.TextInputImageDropDownMenu`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDownMenu`3"/> that can present an image related to the selected item
            and uses a <see cref="T:Atom.Windows.Controls.TextInput"/> as its text presenter allowing the user to add custom values.
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageSourceSelector">
            <summary>
            The selector responsible for extracting a <see cref="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageAndTextInputGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.CircularImage"/> and the <see cref="P:Atom.Windows.Controls.DualContentControl`2.SecondContentElement"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.CircularImage">
            <summary>
            The circular image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageSource">
            <summary>
            The image source
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`2.OnImageSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageSource"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.InputFormatter">
            <summary>
            The input formatter that formats the input of the user
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextInputImageDropDownMenu`2.InputFormatterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.InputFormatter"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.Hint">
            <summary>
            A hint message that is displayed when the input is empty
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextInputImageDropDownMenu`2.HintProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.Hint"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`2.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String},System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`2.CreateSecondContentElement">
            <summary>
            Creates and returns the secondary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ToItem(System.String)">
            <summary>
            Converts or selects the item that represents the specified <paramref name="value"/>
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ToValue(`0)">
            <summary>
            Converts or selects the value that represents the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`2.OnImageSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.TextInputImageDropDownMenu`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.TextInputImageDropDownMenu`2"/> that has pre-set the type of the associated elements to <see cref="T:Atom.Windows.Controls.ImageMenuButton"/>
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.ImageMenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.MenuButton"/> that is associate with the inserted <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInputImageDropDownMenu`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="P:Atom.Windows.Controls.TextInputImageDropDownMenu`2.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.ImageDropDown`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`3"/> that presents an image on its drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDropDown`3.ImageAndTextBlockGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.ImageDropDown`3.CircularImage"/> and the <see cref="P:Atom.Windows.Controls.DualContentControl`2.SecondContentElement"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDropDown`3.CircularImage">
            <summary>
            The circular image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ImageDropDown`3.ImageSource">
            <summary>
            The image source
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ImageDropDown`3.ImageSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ImageDropDown`3.ImageSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`3.OnImageSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ImageDropDown`3.ImageSource"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`3.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`3.CreateSecondContentElement">
            <summary>
            Creates and returns the secondary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`3.OnImageSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ImageDropDown`3.ImageSource"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ImageDropDown`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`3"/> that uses a <see cref="T:Atom.Windows.Controls.StackPanelItemsControl`2"/> at its <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/>
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`2.CreateContent">
            <summary>
            Creates the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ImageDropDown`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`2"/> that uses <typeparamref name="TItem"/> as the type of its elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ImageDropDown">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`1"/> that uses <see cref="T:System.Windows.UIElement"/> as the type of its items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown.Add(System.String,System.Windows.Media.ImageSource,System.String)">
            <summary>
            Adds a <see cref="T:Atom.Windows.Controls.MenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="imageSource">The image source</param>
            <param name="pathData">The path data of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageDropDown.AddSeparator">
            <summary>
            Adds a separator
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TextDropDown`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`3"/> that uses a <see cref="T:Atom.Windows.Controls.TextInput"/> as its
            <see cref="P:Atom.Windows.Controls.DualContentControl`2.SecondContentElement"/>
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
            <typeparam name="TItemsControl">The derivatives of the <see cref="T:Atom.Windows.Controls.BaseItemsControl`1"/> that is used as the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> and presents the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.TextDropDown`3.InnerTextInput">
            <summary>
            The text input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDropDown`3.InputFormatter">
            <summary>
            Formats the inserted <see cref="T:System.String"/> value.
            NOTE: Predefined input formatters can be found at <see cref="T:Atom.Core.InputFormatters"/>!
            NOTE: The first inserted <see cref="T:System.String"/> is the current value!
            NOTE: The second inserted <see cref="T:System.String"/> is the new value!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextDropDown`3.InputFormatterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextDropDown`3.InputFormatter"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextDropDown`3.Hint">
            <summary>
            A hint message that is displayed when the input is empty
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextDropDown`3.HintProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextDropDown`3.Hint"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDown`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDown`3.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDown`3.CreateSecondContentElement">
            <summary>
            Creates and returns the secondary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDown`3.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.Text"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.TextDropDown`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DropDown`3"/> that uses a <see cref="T:Atom.Windows.Controls.StackPanelItemsControl`2"/> at its <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/>
            </summary>
            <typeparam name="TItem">The type of the items.</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDown`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDown`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDown`2.CreateContent">
            <summary>
            Creates the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.TextDropDown`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.TextDropDown`2"/> that uses <see cref="T:System.Windows.UIElement"/> as the type of its elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.TextDropDown`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TimePicker">
            <summary>
            A time input inside a drop down
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimePicker.#ctor(Atom.Core.Time)">
            <summary>
            Default constructor
            </summary>
            <param name="initialTime">
            The initial time to use.
            NOTE: If this parameter is set to <see cref="!:null"/> then the <see cref="T:Atom.Core.Time"/> value of the input control is used!
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.TimePicker.Update">
            <summary>
            Updates the time input.
            The update includes the text time inputs, the pointers and the buttons!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimePicker.CreateContent">
            <summary>
            Creates and returns the element that will be used as the <see cref="P:Atom.Windows.Controls.DropDownButton`1.Content"/> of the dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TimePicker.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimePicker.DropDownButton_Clicked">
            <summary>
            Handles the click of the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimePicker.DownwardsScroll">
            <summary>
            Fires every time the user scrolls downwards on the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimePicker.UpwardsScroll">
            <summary>
            Fires every time the users scrolls upwards on the drop down button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimePicker.UpdateText(System.Object,Atom.Core.TimeChangedEventArgs)">
            <summary>
            Handles the change of the time values
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TimePickerTimeInput">
            <summary>
            A date input configured for a date picker
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimePickerTimeInput.mPicker">
            <summary>
            The time picker that contains this time input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimePickerTimeInput.#ctor(Atom.Windows.Controls.TimePicker)">
            <summary>
            Default constructor
            </summary>
            <param name="picker">The time picker that contains this time input</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimePickerTimeInput.MinuteButton_Clicked(Atom.Windows.Controls.TextButton)">
            <summary>
            Handles the click of a minute button
            </summary>
            <param name="button">The button that gets clicked</param>
        </member>
        <member name="T:Atom.Windows.Controls.CircularImage">
            <summary>
            An image presented on an <see cref="T:System.Windows.Shapes.Ellipse"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularImage.ImageEllipse">
            <summary>
            The ellipse the presents the image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularImage.ImageBrush">
            <summary>
            The image brush used to paint the image on the <see cref="P:Atom.Windows.Controls.CircularImage.ImageEllipse"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularImage.ImageSource">
            <summary>
            The image source
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularImage.ImageSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularImage.ImageSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularImage.OnImageSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.CircularImage.ImageSource"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularImage.Stroke">
            <summary>
            The stroke color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularImage.StrokeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularImage.Stroke"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularImage.StrokeThickness">
            <summary>
            The thickness of the stroke
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularImage.StrokeThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularImage.StrokeThickness"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularImage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularImage.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CircularImage.OnImageSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CircularImage.ImageSource"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ChangeImageCircularImage">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CircularImage"/> that presents an edit overlay on mouse enter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ChangeImageCircularImage.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ChangeImageCircularImage.OverlayGrid">
            <summary>
            The overlay grid that is presented on mouse enter
            and container the <see cref="P:Atom.Windows.Controls.ChangeImageCircularImage.EditOverlayEllipse"/>
            and the <see cref="P:Atom.Windows.Controls.ChangeImageCircularImage.EditOverlayIcon"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ChangeImageCircularImage.EditOverlayEllipse">
            <summary>
            The overlay
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ChangeImageCircularImage.EditOverlayIcon">
            <summary>
            The edit overlay icon
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ChangeImageCircularImage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ChangeImageCircularImage.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ChangeImageCircularImage.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse enter of the cursor
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ChangeImageCircularImage.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse leave of the cursor
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.PathIcon">
            <summary>
            Icon that uses the <see cref="P:Atom.Windows.Controls.PathIcon.PathData"/> to present its content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PathIcon.CanvasViewBox">
            <summary>
            The canvas view box
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PathIcon.DrawingCanvas">
            <summary>
            The drawing canvas
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PathIcon.Path">
            <summary>
            The path
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PathIcon.PathData">
            <summary>
            The geometry data of the <see cref="P:Atom.Windows.Controls.PathIcon.Path"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PathIcon.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PathIcon.PathData"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PathIcon.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PathIcon.#ctor(System.String)">
            <summary>
            Standard constructor
            </summary>
            <param name="pathData">the path data</param>
        </member>
        <member name="M:Atom.Windows.Controls.PathIcon.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.RectangleImage">
            <summary>
            An image presented on an <see cref="T:System.Windows.Shapes.Rectangle"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.RectangleImage.ContentRectangle">
            <summary>
            The border that presents the image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.RectangleImage.ImageBrush">
            <summary>
            The image brush used to paint the image on the <see cref="P:Atom.Windows.Controls.RectangleImage.ContentRectangle"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.RectangleImage.ImageSource">
            <summary>
            The source of the image
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.RectangleImage.ImageSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.RectangleImage.ImageSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.RectangleImage.OnImageSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.RectangleImage.ImageSource"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.RectangleImage.RadiusX">
            <summary>
            The radius x of the rectangle
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.RectangleImage.RadiusXProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.RectangleImage.RadiusX"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.RectangleImage.RadiusY">
            <summary>
            The radius y of the rectangle
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.RectangleImage.RadiusYProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.RectangleImage.RadiusY"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.RectangleImage.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.RectangleImage.OnImageSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.RectangleImage.ImageSource"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.RectangleImage.OnImageSourceChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.RectangleImage.ImageSource"/> property internally
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ColorInput">
            <summary>
            Input that allows the user to insert color values
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorInput.ContentUniformGrid">
            <summary>
            The uniform grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorInput.SelectedColor">
            <summary>
            The selected color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ColorInput.SelectedColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ColorInput.SelectedColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInput.OnSelectedColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ColorInput.SelectedColor"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInput.OnSelectedColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ColorInput.SelectedColor"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInput.ColorButton_Clicked(Atom.Windows.Controls.ColorInputColorButton)">
            <summary>
            Handles the click of a color button
            </summary>
            <param name="colorButton">The color button</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInput.AddColor(System.String)">
            <summary>
            Creates and returns a color input color button after place it in the <see cref="P:Atom.Windows.Controls.ColorInput.ContentUniformGrid"/>
            </summary>
            <param name="hex">The hex color value</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInput.OnSelectedColorChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ColorInput.SelectedColor"/> property
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Atom.Windows.Controls.ColorInput.SelectedColorChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.ColorInput.SelectedColor"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ColorInputColorButton">
            <summary>
            A button specifically personalized to fit the theme of the color input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorInputColorButton.ContentBorder">
            <summary>
            The content border
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInputColorButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInputColorButton.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInputColorButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse enter
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInputColorButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse leave
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ColorInputColorButton.OnSelectedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseControl.Selected"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.DaySpanInput">
            <summary>
            Input used for selecting day spans
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.DaySpanInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanInput.DaySpanPresenter">
            <summary>
            The day span presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanInput.DateSelectionGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.DaySpanInput.StartingDateDatePicker"/>, the <see cref="P:Atom.Windows.Controls.DaySpanInput.ToIcon"/> and the <see cref="P:Atom.Windows.Controls.DaySpanInput.EndingDateDatePicker"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanInput.StartingDateDatePicker">
            <summary>
            The date picker for selecting the starting date of the day span
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanInput.ToIcon">
            <summary>
            The "to" icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanInput.EndingDateDatePicker">
            <summary>
            The date picker for selecting the ending date
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanInput.Value">
            <summary>
            The day span
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanInput.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanInput.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInput.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.DaySpanInput.Value"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanInput.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.DaySpanInput.ValueChanged">
            <summary>
            Event that fires every time the value property of the control changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DateInputDaySpan">
            <summary>
            A day span for a <see cref="T:Atom.Windows.Controls.DaySpanSelectionDateInput"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInputDaySpan.mDaySpan">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DateInputDaySpan.DaySpan"/> property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInputDaySpan.mColor">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.DateInputDaySpan.Color"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInputDaySpan.DaySpan">
            <summary>
            The day span
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInputDaySpan.Color">
            <summary>
            The presentation color
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInputDaySpan.#ctor(Atom.Core.DaySpan,System.Windows.Media.Color)">
            <summary>
            Default constructor
            </summary>
            <param name="daySpan">The day span</param>
            <param name="color">The color</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInputDaySpan.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateInputDaySpan.OnColorChanged(System.Windows.Media.Color)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DateInputDaySpan.Color"/> property
            </summary>
            <param name="newColor">The new color</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInputDaySpan.OnDaySpanChanged(Atom.Core.DaySpan)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DateInputDaySpan.DaySpan"/> property
            </summary>
            <param name="newDaySpan">The new day span</param>
        </member>
        <member name="E:Atom.Windows.Controls.DateInputDaySpan.ColorChanged">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.DateInputDaySpan.Color"/> property changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.DateInputDaySpan.DaySpanChanged">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.DateInputDaySpan.DaySpan"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DaySpanPresenterItem">
            <summary>
            Represents a <see cref="T:Atom.Windows.Controls.DateInputDaySpan"/> in a form of a removable bubble
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanPresenterItem.DaySpan">
            <summary>
            The day span this day span presenter item represents
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanPresenterItem.DaySpansPresenter">
            <summary>
            The presenter that contains this day span presenter item
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenterItem.#ctor(Atom.Windows.Controls.DateInputDaySpan,Atom.Windows.Controls.IItemsControl{Atom.Windows.Controls.DateInputDaySpan})">
            <summary>
            Default constructor
            </summary>
            <param name="daySpan">The day span this day span presenter item represents</param>
            <param name="daySpansPresenter">The presenter that contains this day span presenter item</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenterItem.CreateFirstContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the first content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenterItem.CreateSecondContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the second content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenterItem.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanPresenterItem.UpdateColors">
            <summary>
            Updates the colors of the item based on the <see cref="P:Atom.Windows.Controls.DateInputDaySpan.Color"/> of the <see cref="P:Atom.Windows.Controls.DaySpanPresenterItem.DaySpan"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DaySpanSelectionDateInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DateInput"/> that allows the user to select <see cref="T:Atom.Windows.Controls.DateInputDaySpan"/>s along with dates
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.mHasSelectionBeenInitialized">
            <summary>
            A flag indicating whether the selection has been initialized or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.mMouseDownPos">
            <summary>
            The position where mouse down on the ui element occurred.
            NOTE: IF the mouse down didn't occur on a ui element, this is set to <see cref="!:null"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.mInitSelectionButton">
            <summary>
            The date button on which the drag was initialized
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.mFinishSelectionButton">
            <summary>
            The date button on which the drag was finished
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.mDaySpan">
            <summary>
            The day span that is being created through the dragging operation
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansPresenter">
            <summary>
            The presenter of the day spans
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpanSelectionOverlay">
            <summary>
            The overlay that presents the existing day spans to the user
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.CanCreateDaySpan">
            <summary>
            Indicates whether new day spans are allowed to be created
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansColorsSource">
            <summary>
            The source of colors that are used for presenting the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpans"/> 
            when they are not explicitly created (when they are not added by the <see cref="M:Atom.Windows.Controls.DaySpanSelectionDateInput.Add(Atom.Windows.Controls.DateInputDaySpan)"/> method)
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansColorsSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansColorsSource"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource">
            <summary>
            The day spans of the <see cref="T:Atom.Windows.Controls.DaySpanSelectionDateInput"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="F:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSourceProperty"/> changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansLimit">
            <summary>
            The number of day spans that are allowed to be selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansLimitProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansLimit"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.CanUserCreateDaySpan">
            <summary>
            A flag indicating whether the user can create a day span by dragging the date buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.CanUserCreateDaySpanProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.CanUserCreateDaySpan"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.ShowDaySpansPresenter">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansPresenter"/> should be visible or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DaySpanSelectionDateInput.ShowDaySpansPresenterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.ShowDaySpansPresenter"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpans">
            <summary>
            The day spans
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.GetDaySpan(System.Int32)">
            <summary>
            Gets the day span at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the day span to get</param>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansCount">
            <summary>
            Gets the number of day spans
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansColorsCount">
            <summary>
            Gets the number of the available colors for the day spans
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.Add(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Adds the specified <paramref name="daySpan"/>
            </summary>
            <param name="daySpan">The day span to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.Add(Atom.Core.DaySpan,System.Windows.Media.Color)">
            <summary>
            Creates and adds a <see cref="T:Atom.Core.DaySpan"/> using the specified <paramref name="daySpan"/>
            and the specified <paramref name="color"/>
            </summary>
            <param name="daySpan">The day span</param>
            <param name="color">The color</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.Remove(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Removes the specified <paramref name="daySpan"/>
            </summary>
            <param name="daySpan">The day span to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.RemoveAt(System.Int32)">
            <summary>
            Removes the day span at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the day span we want to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.IndexOf(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Gets the index of the specified <paramref name="daySpan"/>
            </summary>
            <param name="daySpan">The day span whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.Clear">
            <summary>
            Removes all the existing day spans
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.Contains(System.DateTime,System.DateTime)">
            <summary>
            Checks if a <see cref="T:Atom.Core.DaySpan"/> with the specified <paramref name="startingDate"/> and the specified <paramref name="endingDate"/>
            is currently being presented
            </summary>
            <param name="startingDate">The starting time of the day span</param>
            <param name="endingDate">The ending time of the days pan</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.CreateDaySelectionButton(System.DateTime)">
            <summary>
            Creates and returns a button that will be used for selecting the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectedDate"/>
            </summary>
            <param name="date">The date that the button represents</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.OnPresentedMonthChanged(System.DateTime,System.DateTime,System.Windows.Controls.Grid)">
            <summary>
            Provides additional handling for the change of the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedMonth"/>
            </summary>
            <param name="oldDate">The old date</param>
            <param name="newDate">The new date</param>
            <param name="currentlyPresentedMonthDataGrid">
            The grid that contains all the data that are about to be presented to the user.
            NOTE: The grid contains 2 rows! The first one is for the week day indicators
                  and the second row is the one that contains the <see cref="P:Atom.Windows.Controls.DateInput`1.MonthDateButtonsUniformGrid"/>
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.OnDaySpanAdditionCompleted(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Handles the addition of a day span, after its addition has been completed, either by the user
            or by any code automation.
            NOTE: We need this method in order to manipulate the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/> right after
                  any addition has been completed, because we can't directly manipulate the collection
                  while listening to the collection changed event!
            </summary>
            <param name="daySpan">The day span that was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.OnDaySpanSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.OnDaySpanAdded(Atom.Core.ItemAddedEventArgs{Atom.Windows.Controls.DateInputDaySpan})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.OnDaySpanRemoved(Atom.Core.ItemRemovedEventArgs{Atom.Windows.Controls.DateInputDaySpan})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.OnDaySpanReplaced(Atom.Core.ItemReplacedEventArgs{Atom.Windows.Controls.DateInputDaySpan})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.OnDaySpansCleared">
            <summary>
            Handles the disposal of all items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.DateButton_PreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse down event of the date button
            </summary>
            <param name="sender">The date button</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.DateButton_PreviewMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse move event of the date button
            </summary>
            <param name="sender">The date button</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.DateButton_PreviewMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse up event of the date button
            </summary>
            <param name="sender">The date button</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.GetNextColor(System.Int32)">
            <summary>
            Gets and returns the next <see cref="T:System.Windows.Media.Color"/> based on the <paramref name="index"/>
            and the usage of the other colors
            </summary>
            <param name="index">The index of the requested color</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSourceCollection_Changed(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Fires the necessary collection changed events by listening to the inner changes of the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.HandleAddition(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="addedItem">The item that was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.HandleClear">
            <summary>
            Handles the clearing of the collection
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionDateInput.OnDaySpanAdditionCompletedCore(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Handles the addition of a day span, after its addition has been completed, either by the user
            or by any code automation internally.
            NOTE: We need this method in order to manipulate the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/> right after
                  any addition has been completed, because we can't directly manipulate the collection
                  while listening to the collection changed event!
            </summary>
            <param name="daySpan">The day span that was added</param>
        </member>
        <member name="E:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSourceChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/> changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpanAdded">
            <summary>
            Event that fires every time an item is added to the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpanRemoved">
            <summary>
            Event that fires every time an item is removed to the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpanReplaced">
            <summary>
            Event that fires every time an item is replaced to the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansCollectionCleared">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpansSource"/> is cleared
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpanAdditionCompleted">
            <summary>
            Event that fires at the completion of the addition of a day span
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.OverlayDaySpanBorder">
            <summary>
            The overlay border that shows the user that a date has been selected by one of the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpans"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OverlayDaySpanBorder.DaySpan">
            <summary>
            The day span this border represents
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OverlayDaySpanBorder.Date">
            <summary>
            The date of the <see cref="P:Atom.Windows.Controls.OverlayDaySpanBorder.DaySpan"/> that the border represents
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OverlayDaySpanBorder.Index">
            <summary>
            The row and the column index where this overlay border is placed
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OverlayDaySpanBorder.#ctor(Atom.Windows.Controls.DateInputDaySpan,System.DateTime,Atom.Core.RowColumnIndexPair)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.OverlayDaySpanBorder.DateInputDaySpanToCornerRadiusConverter">
            <summary>
            Converter that calculates the <see cref="T:System.Windows.CornerRadius"/> of the <see cref="T:Atom.Windows.Controls.OverlayDaySpanBorder"/> based on the 
            <see cref="P:System.Windows.FrameworkElement.ActualHeight"/> , the <see cref="P:Atom.Windows.Controls.OverlayDaySpanBorder.DaySpan"/> and the <see cref="P:Atom.Windows.Controls.OverlayDaySpanBorder.Date"/> of the <see cref="T:Atom.Windows.Controls.OverlayDaySpanBorder"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DaySpanSelectionOverlay">
            <summary>
            The overlay that presents the <see cref="P:Atom.Windows.Controls.DaySpanSelectionDateInput.DaySpans"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionOverlay.DateInput">
            <summary>
            The date input that contains this overlay
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DaySpanSelectionOverlay.DaySpansOverlayContainer">
            <summary>
            The uniform grid that contains the overlays
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.#ctor(Atom.Windows.Controls.DaySpanSelectionDateInput)">
            <summary>
            Default constructor
            </summary>
            <param name="dateInput">The date input that contains this overlay</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.OnItemAdded(Atom.Core.ItemAddedEventArgs{Atom.Windows.Controls.DateInputDaySpan})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{Atom.Windows.Controls.DateInputDaySpan})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{Atom.Windows.Controls.DateInputDaySpan})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{Atom.Windows.Controls.DateInputDaySpan})">
            <summary>
            Handles the disposal of all items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.AddOverlay(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Apply the overlay and subscribes to the necessary date changed events
            </summary>
            <param name="daySpan">The day span to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.RemoveOverlay(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Disposes the overlay and unsubscribes from the necessary date changed events
            </summary>
            <param name="daySpan">The day span to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.ApplyOverlay(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Adds the necessary <see cref="T:Atom.Windows.Controls.OverlayDaySpanBorder"/>s to the <see cref="P:Atom.Windows.Controls.DaySpanSelectionOverlay.DaySpansOverlayContainer"/> required to present the specified <paramref name="daySpan"/>
            </summary>
            <param name="daySpan">The day span to present</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.DisposeOverlay(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Removes all the <see cref="T:Atom.Windows.Controls.OverlayDaySpanBorder"/>s from the <see cref="P:Atom.Windows.Controls.DaySpanSelectionOverlay.DaySpansOverlayContainer"/> that are associated with the specified <paramref name="daySpan"/>
            </summary>
            <param name="daySpan">The day span whose overlays to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.DaySpan_Changed(System.Object,Atom.Core.DaySpan)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DateInputDaySpan.DaySpan"/> property
            </summary>
            <param name="sender">The date input day span</param>
            <param name="newDaySpan">The new day span</param>
        </member>
        <member name="M:Atom.Windows.Controls.DaySpanSelectionOverlay.DaySpanOverlayContainer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SingleDaySpanSelectionDateInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DaySpanSelectionDateInput"/> that allows the selection of only one day span at a time.
            NOTE: The initial day span is the one that is kept and is updated by the values of the new day span
                  before getting removed!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SingleDaySpanSelectionDateInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SingleDaySpanSelectionDateInput.OnDaySpanAdditionCompleted(Atom.Windows.Controls.DateInputDaySpan)">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="daySpan">The day span</param>
        </member>
        <member name="T:Atom.Windows.Controls.LongDaySpanInput">
            <summary>
            Input used for selecting long day spans
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.LongDaySpanInput.mDateInputDaySpan">
            <summary>
            The day span used by both date inputs
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.LongDaySpanInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.DaySpanPresenter">
            <summary>
            The day span presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.DateSelectionGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.StartingDateDateInput"/>, the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Separator"/> and the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.EndingDateDateInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.StartingDateDateInput">
            <summary>
            The date input for selecting the starting date of the day span
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.Separator">
            <summary>
            The separator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.EndingDateDateInput">
            <summary>
            The date input for selecting the ending date
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.Value">
            <summary>
            The day span
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.LongDaySpanInput.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanInput.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Value"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LongDaySpanInput.Color">
            <summary>
            The color of the day span overlay
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.LongDaySpanInput.ColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Color"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanInput.OnColorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Color"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanInput.OnColorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Color"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanInput.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.LongDaySpanInput.OnColorChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Color"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.LongDaySpanInput.ValueChanged">
            <summary>
            Event that fires every time the value property of the control changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DateInput`1">
            <summary>
            A date input that allows the user to select dates
            </summary>
            <typeparam name="TDateButton">The type of the date input buttons</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.mMonthPresenterGrid">
            <summary>
            The grid that contains all the displayed month data
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.mMonthNavigationGrid">
            <summary>
            Grid that contains the month navigation controls
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.mCurrentlyPresentedMonthDataGrid">
            <summary>
            The grid that contains the month days date buttons and the weekdays grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.mYearPresenterGrid">
            <summary>
            The grid that contains all the displayed year data
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.mYearNavigationGrid">
            <summary>
            Grid that contains all the year navigation controls
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.mCurrentlyPresentedYearDataGrid">
            <summary>
            The grid that contains the year months date buttons
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.MonthDateButtonGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.DateInput`1.MonthDateButtonsUniformGrid"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.MonthDateButtonsUniformGrid">
            <summary>
            The uniform grid that contains all the day date buttons
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.YearDateButtonsUniformGrid">
            <summary>
            The uniform grid that contains all the month date buttons
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.SelectionState">
            <summary>
            The selection state of the date input
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.SelectionStateProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectionState"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnSelectionStatePropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectionState"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.SelectedDate">
            <summary>
            The date that is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.SelectedDateProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectedDate"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnSelectedDatePropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectedDate"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.PresentedMonth">
            <summary>
            The month that is currently being presented
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.PresentedMonthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedMonth"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnPresentedMonthPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedMonth"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.PresentedMonthName">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.DateInput`1.PresentedMonthNameProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.PresentedMonthNamePropertyKey">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedMonthName"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.PresentedMonthNameProperty">
            <summary>
            The name of the month that is currently being presented
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.PresentedYear">
            <summary>
            The year that is currently being presented
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.PresentedYearProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedYear"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnPresentedYearPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedYear"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.PresentedYearName">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.DateInput`1.PresentedYearNameProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.PresentedYearNamePropertyKey">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedYearName"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.PresentedYearNameProperty">
            <summary>
            The number (name) of the year that is currently being presented
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.AllowNavigation">
            <summary>
            If true, then the navigation in between months is allowed, otherwise it's not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.AllowNavigationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.AllowNavigation"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.DateButtonsBackColor">
            <summary>
            The back color of the date buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.DateButtonsBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.DateButtonsBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.DateButtonsForeColor">
            <summary>
            The fore color of the date buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.DateButtonsForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.DateButtonsForeColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.OutOfMonthRangeDateButtonsBackColor">
            <summary>
            The back color of the date buttons that are not in the currently presented month
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.OutOfMonthRangeDateButtonsBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.OutOfMonthRangeDateButtonsBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInput`1.OutOfMonthRangeDateButtonsForeColor">
            <summary>
            The fore color of the date buttons that are not in the currently presented month
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.DateInput`1.OutOfMonthRangeDateButtonsForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.DateInput`1.OutOfMonthRangeDateButtonsForeColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.Presents(System.DateTime)">
            <summary>
            Checks if the specified <paramref name="date"/> is presented
            </summary>
            <param name="date">The date time to check</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.IndexOf(System.DateTime)">
            <summary>
            Gets the row and the column index of the date button that presents the specified <paramref name="date"/>
            </summary>
            <param name="date">The date of the target button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.CreateDaySelectionButton(System.DateTime)">
            <summary>
            Creates and returns a button that will be used for selecting the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectedDate"/>
            </summary>
            <param name="date">The date that the button represents</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.CreateMonthSelectionButton(System.DateTime)">
            <summary>
            Creates and returns a button that will be used for selecting the month to be presented when in <see cref="F:Atom.Core.DateSelectionState.MonthSelectionState"/>
            </summary>
            <param name="date">The month that the button represents</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnSelectionStateChange(Atom.Core.DateSelectionState)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectionState"/> changes
            </summary>
            <param name="newState">The new selection state</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnPresentedMonthChanged(System.DateTime,System.DateTime,System.Windows.Controls.Grid)">
            <summary>
            Provides additional handling for the change of the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedMonth"/>
            </summary>
            <param name="oldDate">The old date</param>
            <param name="newDate">The new date</param>
            <param name="currentlyPresentedMonthDataGrid">
            The grid that contains all the data that are about to be presented to the user.
            NOTE: The grid contains 2 rows! The first one is for the week day indicators
                  and the second row is the one that contains the <see cref="P:Atom.Windows.Controls.DateInput`1.MonthDateButtonsUniformGrid"/>
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.MonthDateButton_Clicked(Atom.Windows.Controls.DateInputDateButton)">
            <summary>
            Handles the click of the month date button
            </summary>
            <param name="dateButton">The date button</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnSelectedDateChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectedDate"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnPresentedMonthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedMonth"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnPresentedYearChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedYear"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnPresentedMonthChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedMonth"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.OnPresentedYearChangeCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DateInput`1.PresentedYear"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.ValidateAllDateButtons">
            <summary>
            Validates all the date buttons
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.ValidateDateButton(Atom.Windows.Controls.DateInputDateButton)">
            <summary>
            Validates the specified <paramref name="dateButton"/>
            </summary>
            <param name="dateButton">The date button to validate</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput`1.AddWeekdayTextBlock(System.Windows.Controls.Grid,System.Int32,System.String)">
            <summary>
            Adds a week days textblock to the <paramref name="weekdaysGrid"/>
            </summary>
            <param name="weekdaysGrid">The grid that hosts the text blocks</param>
            <param name="columnIndex">The column index of the textblock</param>
            <param name="text">The text</param>
        </member>
        <member name="E:Atom.Windows.Controls.DateInput`1.SelectedDateChanged">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectedDate"/> changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DateInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.DateInput"/> standardly configured
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput.CreateDaySelectionButton(System.DateTime)">
            <summary>
            Creates and returns a button that will be used for selecting the <see cref="P:Atom.Windows.Controls.DateInput`1.SelectedDate"/>
            </summary>
            <param name="date">The date that the button represents</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateInput.CreateMonthSelectionButton(System.DateTime)">
            <summary>
            Creates and returns a button that will be used for selecting the month to be presented when in <see cref="F:Atom.Core.DateSelectionState.MonthSelectionState"/>
            </summary>
            <param name="date">The month that the button represents</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DateInputDateButton">
            <summary>
            Date button for a <see cref="T:Atom.Windows.Controls.DateInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DateInputDateButton.Date">
            <summary>
            The date that this button represents
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DateInputDateButton.#ctor(System.DateTime)">
            <summary>
            Default constructor
            </summary>
            <param name="date">The date the button represents</param>
        </member>
        <member name="M:Atom.Windows.Controls.DateInputDateButton.CreateDayDateButton(System.DateTime)">
            <summary>
            Creates a date button personalized for presenting a date of a month
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DateInputDateButton.CreateMonthDateButton(System.DateTime)">
            <summary>
            Creates a date button personalized for presenting a month of a year
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseNamedOpenFileInput`1">
            <summary>
            The base for all the named open file inputs
            </summary>
            <typeparam name="TInputControl">The type of the input control</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.HasCustomFileName">
            <summary>
            A flag indicating whether a custom file name has been set or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.FormFile">
            <summary>
            Creates and returns the <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> related to the specified <see cref="P:Atom.Windows.Controls.BaseDialogInput.Value"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.InputControl">
            <summary>
            The input control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName">
            <summary>
            The custom name of the file
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileNameProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.OnCustomFileNamePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.Validate">
            <summary>
            Validates the state of the input
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.ConfigureInputControl(`0)">
            <summary>
            Further configures the <paramref name="inputControl"/>
            </summary>
            <param name="inputControl">The input control</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.GetInputControlValue(`0)">
            <summary>
            Gets a string that represents the value of the <paramref name="inputControl"/>
            </summary>
            <param name="inputControl">The input control</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.SetInputControlValue(System.String)">
            <summary>
            Sets the specified <paramref name="value"/> to the input control
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.OnCustomFileNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseNamedOpenFileInput`1.OnCustomFileNameChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileNameChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDialogInput">
            <summary>
            The base for all the dialog inputs
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.BaseDialogInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogInput.HasValue">
            <summary>
            A flag indicating whether the input has a valid value or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogInput.PathTextBlock">
            <summary>
            The path text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogInput.OpenButton">
            <summary>
            The open button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDialogInput.Value">
            <summary>
            The selected file name
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDialogInput.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDialogInput.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDialogInput.Value"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.Update">
            <summary>
            Updates the property values of the <see cref="P:Atom.Windows.Controls.BaseDialogInput.OpenButton"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.GetValueCore(System.String@)">
            <summary>
            Gets the value selected by the user using a dialog
            </summary>
            <param name="value">The value selected by the user</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseBorderControl.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.OnBorderThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseBorderControl.BorderThickness"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDialogInput.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDialogInput.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDialogInput.Value"/> property internally
            </summary>
            <param name="e">The new value</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseDialogInput.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.BaseDialogInput.Value"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1">
            <summary>
             A <see cref="T:Atom.Windows.Controls.BaseNamedOpenFileInput`1"/> used for selecting a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> with a custom
            name value placed at its <see cref="P:Microsoft.AspNetCore.Http.IFormFile.Headers"/> dictionary using the <see cref="F:Atom.Core.StringConstants.NameHeader"/> 
            as the key. A <see cref="T:Atom.Windows.Controls.DropDownMenu`1"/> is used for inserting the custom file name value.
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.TextSelector">
            <summary>
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.CustomFileNameSelector">
            <summary>
            Selector that returns the value that will be set to the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Comparer">
            <summary>
            Compares the inserted item and the inserted string in order to set a selected item in the drop down when 
            the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property gets set externally
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.ButtonIconPathDataSelector">
            <summary>
            Selector that returns the path data of the icon that will be set to the button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String,System.Boolean})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">Selector that returns the path data of the icon that will be set to the button</param>
            <param name="customFileNameSelector">Selector that returns the value that will be set to the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property</param>
            <param name="comparer">
            Compares the inserted item and the inserted string in order to set a selected item in the drop down when 
            the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.CustomFileName"/> property gets set externally
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Add(`0)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Contains(`0)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Remove(`0)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.GetInputControlValue(Atom.Windows.Controls.DropDownMenu{`0})">
            <summary>
            Gets a string that represents the value of the <paramref name="inputControl"/>
            </summary>
            <param name="inputControl">The input control</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.DropDownMenuNamedOpenFileInput`1.SetInputControlValue(System.String)">
            <summary>
            Sets the specified <paramref name="value"/> to the input control
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="T:Atom.Windows.Controls.NamedOpenFileInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseNamedOpenFileInput`1"/> used for selecting a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> with a custom
            name value placed at its <see cref="P:Microsoft.AspNetCore.Http.IFormFile.Headers"/> dictionary using the <see cref="F:Atom.Core.StringConstants.NameHeader"/> 
            as the key. A <see cref="T:Atom.Windows.Controls.TextInput"/> is used for inserting the custom file name value.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NamedOpenFileInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NamedOpenFileInput.CreateInputControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseNamedOpenFileInput`1.InputControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NamedOpenFileInput.GetInputControlValue(Atom.Windows.Controls.TextInput)">
            <summary>
            Gets a string that represents the value of the <paramref name="inputControl"/>
            </summary>
            <param name="inputControl">The input control</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NamedOpenFileInput.SetInputControlValue(System.String)">
            <summary>
            Sets the specified <paramref name="value"/> to the input control
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="T:Atom.Windows.Controls.OpenDirectoryInput">
            <summary>
            Input used for selecting directories from the file system
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OpenDirectoryInput.HasValue">
            <summary>
            A flag indicating whether the input has a valid value or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OpenDirectoryInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OpenDirectoryInput.GetValueCore(System.String@)">
            <summary>
            Gets the value selected by the user using a dialog
            </summary>
            <param name="value">The value selected by the user</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.OpenFileInput">
            <summary>
            Input used for selecting a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OpenFileInput.ConfigureDialog">
            <summary>
            Action used for configuring the <see cref="T:Microsoft.Win32.OpenFileDialog"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OpenFileInput.HasValue">
            <summary>
            A flag indicating whether the input has a valid value or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OpenFileInput.FormFile">
            <summary>
            Creates and returns the <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> associated with the specified <see cref="P:Atom.Windows.Controls.BaseDialogInput.Value"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OpenFileInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OpenFileInput.GetValueCore(System.String@)">
            <summary>
            Gets the value selected by the user using a dialog
            </summary>
            <param name="value">The value selected by the user</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OpenFileInput.ConfigureDialogCore(Microsoft.Win32.OpenFileDialog)">
            <summary>
            Configures the <paramref name="dialog"/>.
            NOTE: This method is run after the <see cref="P:Atom.Windows.Controls.OpenFileInput.ConfigureDialog"/> action!
            </summary>
            <param name="dialog">The dialog</param>
        </member>
        <member name="T:Atom.Windows.Controls.OpenImageFileInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.OpenFileInput"/> used for selecting a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> that's an image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OpenImageFileInput.BaseStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OpenImageFileInput.Image">
            <summary>
            The image presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OpenImageFileInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OpenImageFileInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.OpenImageFileInput.ConfigureDialogCore(Microsoft.Win32.OpenFileDialog)">
            <summary>
            Configures the <paramref name="dialog"/>.
            NOTE: This method is run after the <see cref="P:Atom.Windows.Controls.OpenFileInput.ConfigureDialog"/> action!
            </summary>
            <param name="dialog">The dialog</param>
        </member>
        <member name="M:Atom.Windows.Controls.OpenImageFileInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDialogInput.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.FilesInput">
            <summary>
            File input that has implemented drag and drop functionality
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FilesInput.FormFiles">
            <summary>
            The form files
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FilesInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FilesInput.NoFilesStackPanel">
            <summary>
            The stack panel that contains the <see cref="!:"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FilesInput.NoFilesIcon">
            <summary>
            The no files icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FilesInput.NoFilesTextBlock">
            <summary>
            The no files text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FilesInput.DropGrid">
            <summary>
            The drop grid that it's only present when the user hovers
            above the <see cref="P:Atom.Windows.Controls.FilesInput.ContentGrid"/> with files dragged
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.#ctor(System.Func{System.String,Atom.Windows.Controls.FileComponent})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">
            Creates or extracts the <see cref="T:Atom.Windows.Controls.FileComponent"/> from the related <see cref="T:System.String"/>.
            NOTE: The usage of the <see cref="M:Atom.Windows.Controls.FilesInput.CreateFileComponent(System.String)"/> method is recommended since
                  it personalizes the component to fit in the files input!
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.CreateFileComponent(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.FileComponent"/> that is personalized 
            for a <see cref="T:Atom.Windows.Controls.FilesInput"/>.
            </summary>
            <param name="fileName">The file name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.OnItemAdded(Atom.Core.ItemAddedEventArgs{System.String,Atom.Windows.Controls.FileComponent})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{System.String,Atom.Windows.Controls.FileComponent})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{System.String,Atom.Windows.Controls.FileComponent})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{System.String,Atom.Windows.Controls.FileComponent})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.OnDragEnter(System.Windows.DragEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.DragDrop.DragEnter attached event reaches
            an element in its route that is derived from this class. Implement this method
            to add class handling for this event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.OnDragLeave(System.Windows.DragEventArgs)">
            <summary>
            Invoked when an unhandled System.Windows.DragDrop.DragLeave attached event reaches
            an element in its route that is derived from this class. Implement this method
            to add class handling for this event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.OnDrop(System.Windows.DragEventArgs)">
            <summary>
             Invoked when an unhandled System.Windows.DragDrop.DragEnter attached event reaches
             an element in its route that is derived from this class. Implement this method
             to add class handling for this event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.FilesInput.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.FileComponent">
            <summary>
            Component that represents a file
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FileComponent.ContentBorder">
            <summary>
            The border that contains the <see cref="P:Atom.Windows.Controls.FileComponent.ContentGrid"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FileComponent.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FileComponent.Icon">
            <summary>
            The icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FileComponent.FileNameTextBlock">
            <summary>
            The file name text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FileComponent.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.FileComponent.FileNameProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.FileComponent.FileName"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FileComponent.OnFileNamePropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.FileComponent.FileName"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FileComponent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FileComponent.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.FileComponent.OnFileNameChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.FileComponent.FileName"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.FileComponent.OnFileNameChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.FileComponent.FileName"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.IconInput">
            <summary>
            Input used for selecting one of the <see cref="T:Atom.Core.IconPaths"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.IconInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconInput.SelectedIconButtonAndSearchInputStackPanel">
            <summary>
            The stack panel that contains the <see cref="P:Atom.Windows.Controls.IconInput.SelectedIconButton"/> and the <see cref="P:Atom.Windows.Controls.IconInput.SearchInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconInput.SelectedIconButton">
            <summary>
            The selected icon button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconInput.SearchInput">
            <summary>
            The search input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconInput.IconsContainer">
            <summary>
            The icons container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconInput.PathData">
            <summary>
            The path data of the selected icon
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.IconInput.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.IconInput.PathData"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconInput.OnPathDataPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.IconInput.PathData"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IconInput.IconsLimit">
            <summary>
            The maximum number of icons that is returned in each search
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.IconInput.IconsLimitProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.IconInput.IconsLimit"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IconInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IconInput.OnPathDataChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.IconInput.PathData"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.IconInput.OnPathDataChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.IconInput.PathData"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.IconInput.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.IconInput.PathData"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.MenuInput`3">
            <summary>
            Menu that allows the selection of only one of its children
            </summary>
            <typeparam name="TPanel">The type of the panel that contains the items</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.MenuInput`3.SelectedItem">
            <summary>
            The item that is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.MenuInput`3.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.MenuInput`3.SelectedItem"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuInput`3.SelectedItem"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.#ctor(System.Func{`1,`2})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.Select(System.Int32)">
            <summary>
            Selects the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.Select(`1)">
            <summary>
            Select that specified <paramref name="item"/>
            </summary>
            <param name="item">The item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.Select(`2)">
            <summary>
            Selects the <typeparamref name="TItem"/> that associated with the specified <paramref name="element"/>
            </summary>
            <param name="element">The element whose associated item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.OnSelectedItemChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.MenuInput`3.SelectedItem"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.OnItemAdded(Atom.Core.ItemAddedEventArgs{`1,`2})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`1,`2})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{`1,`2})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`1,`2})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.Item_Clicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click on an element
            </summary>
            <param name="sender">The element</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`3.OnSelectedItemChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles internally the change of the <see cref="P:Atom.Windows.Controls.MenuInput`3.SelectedItem"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.MenuInput`3.SelectedItemChanged">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.MenuInput`3.SelectedItem"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.MenuInput`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.MenuInput`3"/> that uses a <see cref="T:System.Windows.Controls.StackPanel"/> as its items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="T:Atom.Windows.Controls.MenuInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.MenuInput`2"/> that has pre-selected the type of its elements to be <see cref="T:Atom.Windows.Controls.MenuButton"/>
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`1.#ctor(System.Func{`0,Atom.Windows.Controls.MenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.MenuButton"/> that is associate with the inserted <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="buttonTextSelector">Selector that returns the text that will be set to the button</param>
            <param name="iconPathDataSelector">Selector that returns the path data of the icon that will be set to the button</param>
        </member>
        <member name="T:Atom.Windows.Controls.MenuInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.MenuInput`1"/> that has pre-select the type of its items to be <see cref="T:Atom.Windows.Controls.MenuButton"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.MenuInput.Add(System.String,System.String)">
            <summary>
            Adds a <see cref="T:Atom.Windows.Controls.MenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
        </member>
        <member name="T:Atom.Windows.Controls.NumericRangeInput`1">
            <summary>
            Input used for inserting numeric ranges
            </summary>
            <typeparam name="T">The type of the numeric values</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.NumericRangeInput`1.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.NumericRangeInput`1.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericRangeInput`1.NumericType">
            <summary>
            The numeric type that is used
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericRangeInput`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericRangeInput`1.MinimumValueNumericInput">
            <summary>
            The minimum value input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericRangeInput`1.ToIcon">
            <summary>
            The "to" icon
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericRangeInput`1.MaximumValueNumericInput">
            <summary>
            The maximum value input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericRangeInput`1.Value">
            <summary>
            The range
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericRangeInput`1.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericRangeInput`1.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInput`1.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.NumericRangeInput`1.Value"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInput`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInput`1.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericRangeInput`1.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LongDaySpanInput.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.NumericRangeInput`1.ValueChanged">
            <summary>
            Event that fires every time the value property of the control changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.PhoneInput">
            <summary>
            Input used for inputing phone values
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.PhoneInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.CountryCode">
            <summary>
            The country code
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.PhoneType">
            <summary>
            The phone type
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.CountryCodeDropDown">
            <summary>
            The drop down that contains the country codes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.PhoneTextInput">
            <summary>
            The text input where the user enters the phone number
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.PhoneTypeDropDown">
            <summary>
            The drop down that contains the phone types
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PhoneInput.ValuePropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.PhoneInput.ValueProperty"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneInput.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.PhoneInput.Value"/> property changes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PhoneInput.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PhoneInput.Value"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PhoneInput.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneInput.Validate">
            <summary>
            Indicates whether the phone input has a valid phone number or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the value
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.PhoneInput.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the value internally
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.PhoneInput.ValueChanged">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.PricingOptionInput">
            <summary>
            Input control used for updating the values of a <see cref="T:Atom.Core.PricingOptionDataModel"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.PricingOptionInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.ContentStackPanel">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.NameContainer">
            <summary>
            The stack panel that contains the <see cref="P:Atom.Windows.Controls.PricingOptionInput.NameValueTextBlock"/> and the <see cref="P:Atom.Windows.Controls.PricingOptionInput.NameTextInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.NameTextBlock">
            <summary>
            The name text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.NameTextInput">
            <summary>
            The name input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.NameValueTextBlock">
            <summary>
            The text block that displays the value of the name.
            NOTE: This is only visible when <see cref="P:Atom.Windows.Controls.PricingOptionInput.IsNameEditable"/> is set to <see cref="!:false"/>!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.DescriptionContainer">
            <summary>
            The stack panel that contains the <see cref="P:Atom.Windows.Controls.PricingOptionInput.DescriptionValueTextBlock"/> and the <see cref="P:Atom.Windows.Controls.PricingOptionInput.DescriptionTextInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.DescriptionTextBlock">
            <summary>
             The text block that displays the value of the description.
            NOTE: This is only visible when <see cref="P:Atom.Windows.Controls.PricingOptionInput.IsDescriptionEditable"/> is set to <see cref="!:false"/>!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.DescriptionTextInput">
            <summary>
            The description input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.DescriptionValueTextBlock">
            <summary>
            The name text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.PricingOptionContainer">
            <summary>
            The stack panel that contains the <see cref="P:Atom.Windows.Controls.PricingOptionInput.PricingOptionTextBlock"/> and the <see cref="P:Atom.Windows.Controls.PricingOptionInput.PricingOptionDropDownMenu"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.PricingOptionTextBlock">
            <summary>
            The pricing option text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.PricingOptionDropDownMenu">
            <summary>
            The pricing option input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.PricingOptionValueTextBlock">
            <summary>
            The text block that displays the value of the pricing option.
            NOTE: This is only visible when <see cref="P:Atom.Windows.Controls.PricingOptionInput.IsPricingOptionEditable"/> is set to <see cref="!:false"/>!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.AmountContainer">
            <summary>
            The stack panel that contains the <see cref="P:Atom.Windows.Controls.PricingOptionInput.AmountTextBlock"/> and the <see cref="P:Atom.Windows.Controls.PricingOptionInput.AmountNumericInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.AmountTextBlock">
            <summary>
            The amount text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.AmountNumericInput">
            <summary>
            The amount input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.AmountValueTextBlock">
            <summary>
            The text block that displays the value of the pricing option.
            NOTE: This is only visible when <see cref="P:Atom.Windows.Controls.PricingOptionInput.IsAmountEditable"/> is set to <see cref="!:false"/>!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PricingOptionInput.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PricingOptionInput.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionInput.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.PricingOptionInput.Value"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.IsNameEditable">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Core.PricingOptionData.Name"/> is editable or not.
            NOTE: The default value is <see cref="!:true"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PricingOptionInput.IsNameEditableProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PricingOptionInput.IsNameEditable"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.IsDescriptionEditable">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Core.PricingOptionData.Description"/> is editable or not.
            NOTE: The default value is <see cref="!:true"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PricingOptionInput.IsDescriptionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PricingOptionInput.IsDescriptionEditable"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.IsPricingOptionEditable">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Core.PricingOptionData.PricingOption"/> is editable or not.
            NOTE: The default value is <see cref="!:true"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PricingOptionInput.IsPricingOptionEditableProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PricingOptionInput.IsPricingOptionEditable"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PricingOptionInput.IsAmountEditable">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Core.PricingOptionData.Amount"/> is editable or not.
            NOTE: The default value is <see cref="!:true"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.PricingOptionInput.IsAmountEditableProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.PricingOptionInput.IsAmountEditable"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionInput.ClearValues">
            <summary>
            Clears the inserted values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionInput.Validate">
            <summary>
            Validates the input
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.PricingOptionInput.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionInput.OnInputValueChanged">
            <summary>
            Handles the change of every input control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PricingOptionInput.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.PricingOptionInput.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.PricingOptionInput.ValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.ScrollInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.ScrollBar">
            <summary>
            The scroll bar
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.ValueBar">
            <summary>
            The value bar
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.ScrollIndicator">
            <summary>
            The scroll indicator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.MinValue">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ScrollInput.MinValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ScrollInput.MinValue"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnMinValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ScrollInput.MinValue"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.MaxValue">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ScrollInput.MaxValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ScrollInput.MaxValue"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnMaxValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ScrollInput.MaxValue"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.Value">
            <summary>
            The selected value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ScrollInput.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ScrollInput.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ScrollInput.Value"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.Orientation">
            <summary>
            The orientation.
            NOTE: The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ScrollInput.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ScrollInput.Orientation"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when <see cref="P:Atom.Windows.Controls.ScrollInput.Orientation"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.BarBackground">
            <summary>
            The color of the bar
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ScrollInput.BarBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ScrollInput.BarBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.ValueBackground">
            <summary>
            The color that represents the selected value
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ScrollInput.ValueBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ScrollInput.ValueBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ScrollInput.ScrollIndicatorBackground">
            <summary>
            The color of the scroll indicator
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ScrollInput.ScrollIndicatorBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ScrollInput.ScrollIndicatorBackground"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.Update">
            <summary>
            Updates the input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnMinValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ScrollInput.MinValue"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnMaxValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ScrollInput.MaxValue"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ScrollInput.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ScrollInput.Orientation"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnMinValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ScrollInput.MinValue"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnMaxValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ScrollInput.MaxValue"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ScrollInput.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.OnOrientationChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ScrollInput.Orientation"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.CalculateValueBarSize(System.Double)">
            <summary>
            Calculates the size (either the width or the height) of the <see cref="P:Atom.Windows.Controls.ScrollInput.ValueBar"/>
            </summary>
            <param name="inputSize">
            The actual size of the input (either the <see cref="P:System.Windows.FrameworkElement.ActualHeight"/> or the <see cref="P:System.Windows.FrameworkElement.ActualWidth"/>)
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ScrollInput.CalculateValue(System.Double,System.Double)">
            <summary>
            Calculates the <see cref="P:Atom.Windows.Controls.ScrollInput.Value"/> using with the specified <paramref name="inputSize"/> and the <paramref name="relativeLocation"/>
            </summary>
            <param name="inputSize">Either the <see cref="P:System.Windows.FrameworkElement.ActualHeight"/> or the <see cref="P:System.Windows.FrameworkElement.ActualWidth"/> base on <see cref="P:Atom.Windows.Controls.ScrollInput.Orientation"/></param>
            <param name="relativeLocation">Either the <see cref="P:System.Windows.Point.X"/> or the <see cref="P:System.Windows.Point.Y"/> base on <see cref="P:Atom.Windows.Controls.ScrollInput.Orientation"/></param>
            <returns></returns>
        </member>
        <member name="E:Atom.Windows.Controls.ScrollInput.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.ScrollInput.Value"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SearchInput">
            <summary>
            Input control used when searching items
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.ContentBorder">
            <summary>
            The border that contains the <see cref="P:Atom.Windows.Controls.SearchInput.ContentGrid"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.SearchTargetDropDownMenu">
            <summary>
            The drop down menu that determines the search target
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.SearchTextInput">
            <summary>
            The search text input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.Text">
            <summary>
            The text of the control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SearchInput.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SearchInput.Text"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.TextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.SearchInput.Text"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.Hint">
            <summary>
            A hint message that is displayed when the input is empty
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SearchInput.HintProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SearchInput.Hint"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.TypingFinishedDelay">
            <summary>
            The delay in milliseconds in between value changes that prevent the firing of the <see cref="E:Atom.Windows.Controls.SearchInput.TypingFinished"/> event
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SearchInput.TypingFinishedDelayProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SearchInput.TypingFinishedDelay"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{Atom.Windows.Controls.SearchTarget})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.SetItemsSource(System.Collections.Generic.IEnumerable{Atom.Windows.Controls.SearchTarget})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.SelectedSearchTarget">
            <summary>
            The selected search target
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.Atom#Windows#Controls#IItemsControl{Atom#Windows#Controls#SearchTarget}#Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.Atom#Windows#Controls#IItemsControl#ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchInput.Atom#Windows#Controls#IItemsControl#HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Contains(Atom.Windows.Controls.SearchTarget)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the items
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.IndexOf(Atom.Windows.Controls.SearchTarget)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Atom#Windows#Controls#IItemsControl{Atom#Windows#Controls#SearchTarget}#Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Add(Atom.Windows.Controls.SearchTarget)">
            <summary>
            Adds a search target
            </summary>
            <param name="searchTarget">The search target to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.AddRange(System.Collections.Generic.IEnumerable{Atom.Windows.Controls.SearchTarget})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Insert(System.Int32,Atom.Windows.Controls.SearchTarget)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Remove(Atom.Windows.Controls.SearchTarget)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Atom#Windows#Controls#IItemsControl#RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Atom#Windows#Controls#IItemsControl#Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Replace(Atom.Windows.Controls.SearchTarget,Atom.Windows.Controls.SearchTarget)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Atom#Windows#Controls#IItemsControl#Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.Update">
            <summary>
            Updates the search input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.ValidateSearchConditions(Atom.Windows.Controls.SearchTarget,System.String)">
            <summary>
            Validates the search conditions
            </summary>
            <param name="target">The search target</param>
            <param name="searchText">The search text</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.OnInvalidSearchConditions(Atom.Windows.Controls.SearchTarget,System.String)">
            <summary>
            Handles the case of invalid search conditions
            </summary>
            <param name="target">The search target</param>
            <param name="searchText">The search text</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.OnValidSearchConditions(Atom.Windows.Controls.SearchTarget,System.String)">
            <summary>
            Handles the case of valid search conditions
            </summary>
            <param name="target">The search target</param>
            <param name="searchText">The search text</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.OnBorderThicknessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseBorderControl.BorderThickness"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.OnCornerRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseBorderControl.CornerRadius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.SearchInput.Text"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.SearchTextInput_TypingFinished(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the finish of typing of the text of the <see cref="P:Atom.Windows.Controls.SearchInput.SearchTextInput"/>
            </summary>
            <param name="sender">The text input</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchInput.OnTextChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.SearchInput.Text"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.SearchInput.TypingFinished">
            <summary>
            Fires every time the user finishes typing
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.SearchInput.TextChanged">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.SearchInput.Text"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SearchEventArgs">
            <summary>
            Event args for a search request
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchEventArgs.SearchTarget">
            <summary>
            The search target
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchEventArgs.SearchValue">
            <summary>
            The search value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchEventArgs.#ctor(Atom.Windows.Controls.SearchTarget,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="searchTarget">The search target</param>
            <param name="searchValue">The search value</param>
        </member>
        <member name="T:Atom.Windows.Controls.SearchTarget">
            <summary>
            Represents a search target
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchTarget.Name">
            <summary>
            The name of the search target
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchTarget.Value">
            <summary>
            The value of the search target
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchTarget.PathData">
            <summary>
            The path data of the icon
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchTarget.#ctor(System.String,System.String,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="name">The name of the search target</param>
            <param name="value">The value of the search target</param>
            <param name="pathData">The path data of the icon</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseImageSearchMenuInput`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSearchMenuInput`2"/> that presents the image of the selected item on the drop down button
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.ImageSourceSelector">
            <summary>
            The selector responsible for extracting a <see cref="P:Atom.Windows.Controls.ImageDropDownMenu`3.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.ImageAndTextBlockGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.CircularImage"/> and the <see cref="P:Atom.Windows.Controls.DualContentControl`2.SecondContentElement"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.CircularImage">
            <summary>
            The circular image
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.ImageSource">
            <summary>
            The image source
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseImageSearchMenuInput`2.ImageSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.ImageSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`2.OnImageSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.ImageSource"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`2.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String},System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`2.CreateSecondContentElement">
            <summary>
            Creates and returns the secondary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`2.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`2.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`2.OnImageSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseImageSearchMenuInput`2.ImageSource"/> property
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseImageSearchMenuInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseImageSearchMenuInput`2"/> that uses a <see cref="T:Atom.Windows.Controls.ImageMenuButton"/> as the type of its elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.ImageMenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.ImageMenuButton"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseImageSearchMenuInput`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseSearchMenuInput`2">
            <summary>
            The base for all the search menu inputs
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:Atom.Windows.Controls.BackgroundControl"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSearchMenuInput`2.mSearchCancellationToken">
            <summary>
            The cancellation token used for canceling the search requests
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSearchMenuInput`2.Input">
            <summary>
            The input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSearchMenuInput`2.InputFormatter">
            <summary>
            The input formatter that formats the input of the user
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSearchMenuInput`2.InputFormatterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseSearchMenuInput`2.InputFormatter"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSearchMenuInput`2.Hint">
            <summary>
            A hint message that is displayed when the input is empty
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSearchMenuInput`2.HintProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseSearchMenuInput`2.Hint"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchMenuInput`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchMenuInput`2.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchMenuInput`2.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchMenuInput`2.SearchAsync(System.String)">
            <summary>
            Searches for the items using the specified <paramref name="searchValue"/>
            </summary>
            <param name="searchValue">The search value</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchMenuInput`2.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BasePicker`2.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseSearchMenuInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSearchMenuInput`2"/> that uses a <see cref="T:Atom.Windows.Controls.MenuButton"/> as the type of its elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchMenuInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchMenuInput`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.MenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.MenuButton"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSearchMenuInput`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.ImageSearchMenuInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseImageSearchMenuInput`1"/> that uses a dynamic <see cref="P:Atom.Windows.Controls.ImageSearchMenuInput`1.DataRetriever"/> to retrieve the searched data 
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ImageSearchMenuInput`1.DataRetriever">
            <summary>
            The data retriever
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ImageSearchMenuInput`1.#ctor(System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}})">
            <summary>
            Default constructor
            </summary>
            <param name="dataRetriever">The data retriever</param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageSearchMenuInput`1.#ctor(System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.ImageMenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.ImageMenuButton"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageSearchMenuInput`1.#ctor(System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{`0,System.String},System.Func{`0,System.Windows.Media.ImageSource},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="dataRetriever">The data retriever</param>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="imageSourceSelector">
            The selector responsible for extracting a <see cref="T:System.Windows.Media.ImageSource"/> value
            from the selected item that is the image source for the image of the drop down button
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.ImageSearchMenuInput`1.SearchAsync(System.String)">
            <summary>
            Searches for the items using the specified <paramref name="searchValue"/>
            </summary>
            <param name="searchValue">The search value</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SearchMenuInput`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSearchMenuInput`1"/> that uses a dynamic <see cref="P:Atom.Windows.Controls.SearchMenuInput`1.DataRetriever"/> to retrieve the searched data
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInput`1.DataRetriever">
            <summary>
            The data retriever
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInput`1.#ctor(System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}})">
            <summary>
            Default constructor
            </summary>
            <param name="dataRetriever">The data retriever</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInput`1.#ctor(System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,Atom.Windows.Controls.MenuButton})">
            <summary>
            Standard constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="dataRetriever">The data retriever</param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.MenuButton"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInput`1.#ctor(System.Func{System.String,System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value 
            from the selected item to be presented in the drop down button
            </param>
            <param name="iconPathDataSelector">
            The selector responsible for extracting a <see cref="T:System.String"/> value
            from the selected item that is the path data for the icon to set
            at the drop down button
            </param>
            <param name="dataRetriever">The data retriever</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInput`1.SearchAsync(System.String)">
            <summary>
            Searches for the items using the specified <paramref name="searchValue"/>
            </summary>
            <param name="searchValue">The search value</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SearchMenuInputTextInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.TextInput"/> used for the <see cref="T:Atom.Windows.Controls.BaseSearchMenuInput`2"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.FirstContentElementGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.InputElementGrid"/> and the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.PreviewElementGrid"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.InputElementGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.TextInput.TextBox"/> and the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.LoadingIndicator"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.LoadingIndicator">
            <summary>
            The loading indicator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.PreviewElementGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.PreviewTextBlock"/> and the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.ClearButton"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.PreviewTextBlock">
            <summary>
            The preview text block
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.ClearButton">
            <summary>
            The clear button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.PreviewText">
            <summary>
            The preview text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SearchMenuInputTextInput.PreviewTextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.PreviewText"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.IsInPreview">
            <summary>
            A flag indicating whether the input is in preview mode or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SearchMenuInputTextInput.IsInPreviewProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.IsInPreview"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInputTextInput.OnIsInPreviewPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.IsInPreview"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SearchMenuInputTextInput.IsLoading">
            <summary>
            A flag indicating whether search is being performed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SearchMenuInputTextInput.IsLoadingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.IsLoading"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInputTextInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInputTextInput.CreateFirstContentElement">
            <summary>
            Creates and returns the primary content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInputTextInput.OnIsInPreviewChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.IsInPreview"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.SearchMenuInputTextInput.OnIsInPreviewChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.IsInPreview"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.SearchMenuInputTextInput.IsInPreviewChanged">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.SearchMenuInputTextInput.IsInPreview"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TimeInput">
            <summary>
            Input that allows the user to insert time values
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mHourHandRectangle">
            <summary>
            The hour hand pointer rectangle
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mMinuteHandRectangle">
            <summary>
            The minute hand pointer rectangle
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mHourInput">
            <summary>
            The input that allows the user to insert hour values
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mMinuteInput">
            <summary>
            The input that allows the user to insert minute values
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mHoursButton">
            <summary>
            THe button that switches to the hour value selection
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mMinutesButton">
            <summary>
            The button that switches to the minute value selection
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mAMButton">
            <summary>
            The button that switches to the before midday day period
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mPMButton">
            <summary>
            The button that switches to the past midday day period
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mMinuteButtonsItemsControl">
            <summary>
            The items control that contains all the minute buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.mHourButtonsItemsControl">
            <summary>
            The items control that contains all the hour buttons
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.SelectedTime">
            <summary>
            The selected time
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.SelectedTimeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.SelectedTime"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.OnSelectedTimePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TimeInput.SelectedTime"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.TimeValue">
            <summary>
            The time value selection type
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.TimeValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.TimeValue"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.OnTimeValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TimeInput.TimeValue"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.DayPeriod">
            <summary>
            The period of the day
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.DayPeriodProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.DayPeriod"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.OnDayPeriodPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TimeInput.DayPeriod"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.TimeButtonsBackColor">
            <summary>
            The back color of the time buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.TimeButtonsBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.TimeButtonsBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.TimeButtonsForeColor">
            <summary>
            The fore color of the time buttons
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.TimeButtonsForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.TimeButtonsForeColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.SelectedTimeButtonBackColor">
            <summary>
            The back color of the time button that is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.SelectedTimeButtonBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.SelectedTimeButtonBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.SelectedTimeButtonForeColor">
            <summary>
            The fore color of the time button that is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.SelectedTimeButtonForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.SelectedTimeButtonForeColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.MainBodyBrush">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.MainBodyBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.MainBodyBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.ClockBodyBrush">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.ClockBodyBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.ClockBodyBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.HourHandBrush">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.HourHandBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.HourHandBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TimeInput.MinuteHandBrush">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TimeInput.MinuteHandBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TimeInput.MinuteHandBrush"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.#ctor">
            <summary>
            Default constructor
            NOTE: This constructor initializes the time input to the current time!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.#ctor(System.DateTime)">
            <summary>
            Constructor that initializes the time input to a specified time using a <see cref="T:System.DateTime"/> value
            </summary>
            <param name="time">The specified time to initialize the time input</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.#ctor(Atom.Core.Time)">
            <summary>
            Constructor that initializes the time input to a specified <paramref name="time"/> using a <see cref="T:Atom.Core.Time"/> value
            </summary>
            <param name="time">The specified time to initialize the time input</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.Update">
            <summary>
            Updates the time input.
            The update includes the text time inputs, the pointers and the buttons!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.OnSelectedTimeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TimeInput.SelectedTime"/> changes
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.TimeChanged(System.Object,Atom.Core.TimeChangedEventArgs)">
            <summary>
            Handles the change of the hour value
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.OnTimeValueChange(Atom.Core.TimeValue)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TimeInput.TimeValue"/> changes
            </summary>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.OnDayPeriodChange(Atom.Core.DayPeriod)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TimeInput.DayPeriod"/> changes
            </summary>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.MinuteButton_Clicked(Atom.Windows.Controls.TextButton)">
            <summary>
            Handles the click of a minute button
            </summary>
            <param name="button">The button that gets clicked</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.ValidateAllTimeButtons">
            <summary>
            Validates all the time button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.UpdateHourButtons">
            <summary>
            Updates the hour buttons
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.UpdateMinuteButtons">
            <summary>
            Updates the minute buttons
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.TimeInputButtonConfiguration(Atom.Windows.Controls.TextButton,System.Int32,System.Boolean)">
            <summary>
            Configures the buttons of the time input to fit its theme
            </summary>
            <param name="button">The button to configure</param>
            <param name="size">The width and the height of the <paramref name="button"/></param>
            <param name="setUpMargin">If true then the margin property of the <paramref name="button"/> is set to 5</param>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInput.OnSelectedTimeChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TimeInput.SelectedTime"/> changes internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.TimeInputTextInput">
            <summary>
            Text input specifically customized for a time input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TimeInputTextInput.#ctor(System.Func{System.String,System.String,System.String})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseTypingInput`1">
            <summary>
            The base for all the typing input controls
            </summary>
            <typeparam name="TPrimaryContent">The type of the primary content control element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.IsInputFocused">
            <summary>
            If true, then the input control is focused and the user is about to type in it, otherwise it's not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.HintTextBlock">
            <summary>
            The textblock that presenters the hint
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.FontSize">
            <summary>
            The font size of the text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.FontSizeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FontSize"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.OnFontSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FontSize"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.FontWeight">
            <summary>
            The font weight of the text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.FontWeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FontWeight"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.FocusedBackColor">
            <summary>
            The back color of the control when is focused
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.FocusedBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FocusedBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.FocusedForeColor">
            <summary>
            The fore color of the control when is focused
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.FocusedForeColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FocusedForeColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.FocusedBorderColor">
            <summary>
            The border color of the control when is focused
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.FocusedBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FocusedBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.Error">
            <summary>
            If true, then there is an error the input, otherwise there isn't
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.ErrorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Error"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.OnErrorPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Error"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.Success">
            <summary>
            If true, then the input we inserted is valid, otherwise it's not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.SuccessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Success"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.OnSuccessPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Success"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.PathData">
            <summary>
            The path data of the icon
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.PathDataProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.PathData"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.Hint">
            <summary>
            A hint message that is displayed when the input is empty
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.HintProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Hint"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseTypingInput`1.HintColor">
            <summary>
            The color of the hint message
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseTypingInput`1.HintColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.HintColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.SetAllBackColors(System.Windows.Media.Color)">
            <summary>
            Changes all the state back colors to the <paramref name="newColor"/>
            </summary>
            <param name="newColor">The color to change all the back colors</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.SetAllForeColors(System.Windows.Media.Color)">
            <summary>
            Changes all the state fore colors to the <paramref name="newColor"/>
            </summary>
            <param name="newColor">The color to change all the fore colors</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.SetAllBorderColors(System.Windows.Media.Color)">
            <summary>
            Changes all the state border colors to the <paramref name="newColor"/>
            </summary>
            <param name="newColor">The color to change all the border colors</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.CreateFirstContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the first content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.CreateSecondContentGridLength(Atom.Core.Direction)">
            <summary>
            Creates and returns the grid length suitable for hosting the second content element
            </summary>
            <param name="newValue">The new content placement direction</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.CreateSecondContentElement">
            <summary>
            Creates and returns the secondary content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.OnContentPlacementDirectionChange(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.DualContentControl`2.ContentPlacementDirection"/>
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.OnFontSizeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FontSize"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.OnErrorChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Error"/> property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.OnSuccessChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Success"/> property
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.Input_GotFocused(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires when the input control gets focused
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.Input_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires when the input control gets focused
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.SelectForeColor">
            <summary>
            Selects the appropriate fore color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.SelectBackColor">
            <summary>
            Selects the appropriate back color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.SelectBorderColor">
            <summary>
            Selects the appropriate border color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseTypingInput`1.SelectInputColor(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Selects the appropriate color for the control based on its core states
            </summary>
            <param name="color">The normal state color</param>
            <param name="focusedColor">The color when the input control is focused</param>
            <param name="mouseOverColor">The color when the cursor hovers above the control</param>
            <param name="mouseDownColor">The color when the control is pressed</param>
            <param name="selectedColor">The color when the control is selected</param>
            <param name="disabledColor">The color when the control is selected</param>
            <returns></returns>
            <returns></returns>
        </member>
        <member name="E:Atom.Windows.Controls.BaseTypingInput`1.ErrorChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Error"/> property changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseTypingInput`1.SuccessChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.Success"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseFormattableTypingInput`1">
            <summary>
            The base for all the typing input controls whose input gets formatted before inserted
            </summary>
            <typeparam name="TPrimaryContent">The type of the primary content control element</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormattableTypingInput`1.mTypingCancellationToken">
            <summary>
            The cancellation token used for determining whether the user finished typing or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.BaseFormattableTypingInput`1.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.SuppressTypingFinishedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.BaseFormattableTypingInput`1.TypingFinished"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text">
            <summary>
            The text of the control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormattableTypingInput`1.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormattableTypingInput`1.OnTextUpdated(System.Windows.DependencyObject,System.Object)">
            <summary>
            Fires every time the text property gets updated
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormattableTypingInput`1.OnTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.InputFormatter">
            <summary>
            Formats the inserted <see cref="T:System.String"/> value.
            NOTE: Predefined input formatters can be found at <see cref="T:Atom.Core.InputFormatters"/>!
            NOTE: The first inserted <see cref="T:System.String"/> is the current value!
            NOTE: The second inserted <see cref="T:System.String"/> is the new value!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormattableTypingInput`1.InputFormatterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.InputFormatter"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.TypingFinishedDelay">
            <summary>
            The delay in milliseconds in between value changes that prevent the firing of the <see cref="E:Atom.Windows.Controls.BaseFormattableTypingInput`1.TypingFinished"/> event
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseFormattableTypingInput`1.TypingFinishedDelayProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.TypingFinishedDelay"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormattableTypingInput`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormattableTypingInput`1.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/> property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormattableTypingInput`1.OnTextUpdated(System.String)">
            <summary>
            Validates the text input of the user before gets passed to the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/> property
            </summary>
            <param name="baseValue">The value that is about to get set to the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/></param> property
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormattableTypingInput`1.OnTextChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormattableTypingInput`1.OnTextUpdatedCore(System.String)">
            <summary>
            Validates the text input of the user before gets passed to the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/> property
            </summary>
            <param name="baseValue">The value that is about to get set to the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/></param> property
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormattableTypingInput`1.UpdateHintTextBlock(System.String)">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.HintTextBlock"/> based on the <paramref name="currentText"/>
            </summary>
            <param name="currentText">The current text</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseFormattableTypingInput`1.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/> property changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseFormattableTypingInput`1.TypingFinished">
            <summary>
            Event that fires every time the user finishes typing
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NumericInput">
            <summary>
            Input that has the ability to adjust its values
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.mTypingCancellationToken">
            <summary>
            The cancellation token used for determining whether the user finished typing or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.NumericInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.SuppressTypingFinishedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.NumericInput.TypingFinished"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.StandardInputFormatter">
            <summary>
            The standard input formatter that is being used
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.BaseGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.IncreaseButton">
            <summary>
            The increase button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.DecreaseButton">
            <summary>
            The decrease button
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.ValuePropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.NumericInput.ValueProperty"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.NumericInput.Value"/> property changes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericInput.Value"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.Value">
            <summary>
            The numeric value inserted by the user.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.Text">
            <summary>
            The text of the control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.TextProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericInput.Text"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnTextUpdated(System.Windows.DependencyObject,System.Object)">
            <summary>
            Fires every time the text property gets updated
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.NumericInput.Text"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.ValueChangeOnScroll">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.NumericInput.Value"/> should changed based on scroll
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.ValueChangeOnScrollProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericInput.ValueChangeOnScroll"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.InputFormatter">
            <summary>
            The input formatter that formats the input of the user.
            NOTE: Numeric input formatters only may be used.
            NOTE: The value of the input formatter is overridden by an internal formatter if it's not valid!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.InputFormatterProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericInput.InputFormatter"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.IsFloat">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.NumericInput.Value"/> is a <see cref="T:System.Double"/> or an <see cref="T:System.Int32"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.IsFloatProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericInput.IsFloat"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnIsFloatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="F:Atom.Windows.Controls.NumericInput.IsFloatProperty"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.IsNullable">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.NumericInput.Value"/> can be null or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.IsNullableProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericInput.IsNullable"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.TypingFinishedDelay">
            <summary>
            The delay in milliseconds in between value changes that prevent the firing of the <see cref="E:Atom.Windows.Controls.NumericInput.TypingFinished"/> event
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.TypingFinishedDelayProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericInput.TypingFinishedDelay"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.NumericInput.AdjustThreshold">
            <summary>
            The adjust threshold
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.NumericInput.AdjustThresholdProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.NumericInput.AdjustThreshold"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.CreateFirstContentElement">
            <summary>
            Creates and returns the primary content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.NumericInput.Text"/> property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnTextUpdated(System.String)">
            <summary>
            Validates the text input of the user before gets passed to the <see cref="P:Atom.Windows.Controls.NumericInput.Text"/> property
            </summary>
            <param name="baseValue">The value that is about to get set to the <see cref="P:Atom.Windows.Controls.NumericInput.Text"/> property</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.NumericInput.Value"/> property
            </summary>
            <param name="e">Event</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnTextChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.NumericInput.Text"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnTextUpdatedCore(System.String)">
            <summary>
            Validates the text input of the user before gets passed to the <see cref="P:Atom.Windows.Controls.NumericInput.Text"/> property
            </summary>
            <param name="baseValue">The value that is about to get set to the <see cref="P:Atom.Windows.Controls.NumericInput.Text"/> property internally</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.NumericInput.Value"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.OnIsFloatChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.NumericInput.IsFloat"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.UpdateHintTextBlock(System.String)">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.HintTextBlock"/> based on the <paramref name="currentText"/>
            </summary>
            <param name="currentText">The current text</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.NumericInput_MouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the mouse scroll
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.IncreaseValue(System.Double)">
            <summary>
            Increases the value
            </summary>
            <param name="amount">The amount to increase the value</param>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.DecreaseValue(System.Double)">
            <summary>
            Decreases the value
            </summary>
            <param name="amount">The amount to decrease value</param>
        </member>
        <member name="E:Atom.Windows.Controls.NumericInput.ValueChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.NumericInput.Value"/> property changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.NumericInput.TypingFinished">
            <summary>
            Event that fires every time the user finishes typing
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.NumericInput.NumericInputButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NumericInput.IncreaseButtonCornerRadiusConverter">
            <summary>
            Converts the corner radius of the parent border to the appropriate corner radius for the increase button
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.NumericInput.DecreaseButtonCornerRadiusConverter">
            <summary>
            Converts the corner radius of the parent border to the appropriate corner radius for the decrease button
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.PasswordInput">
            <summary>
            Input that allows the user to insert passwords
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PasswordInput.SecurePassword">
            <summary>
            The inserted password in a form of a secure string
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PasswordInput.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PasswordInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PasswordInput.CreateFirstContentElement">
            <summary>
            Creates and returns the primary content
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.PercentageInput.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PercentageInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PercentageInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.RichTextInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.RichTextInput.CreateFirstContentElement">
            <summary>
            Creates and returns the first content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ShortcodesTextInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.TextInput"/> used for inserting shortcodes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ShortcodesTextInput.mPresentedShortcodeData">
            <summary>
            Data related to the shortcodes that are currently being presented
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesUsed">
            <summary>
            A flag indicating whether shortcodes where used or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.TextBoxAndShortcodesContainerGrid">
            <summary>
            The grid that contains the <see cref="P:Atom.Windows.Controls.TextInput.TextBox"/> and the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesContainerGrid"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesContainerGrid">
            <summary>
            The grid that contains the shortcodes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.SuppressUpdate">
            <summary>
            Suppresses the updates
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesSource">
            <summary>
            The source of shortcodes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ShortcodesTextInput.ShortcodeSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.OnShortcodeSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesSource"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Update">
            <summary>
            Updates the object
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.SetItemsSource(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Contains(Atom.Core.Shortcode)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.IndexOf(Atom.Core.Shortcode)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesSource"/>
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Add(Atom.Core.Shortcode)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.AddRange(System.Collections.Generic.IEnumerable{Atom.Core.Shortcode})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Insert(System.Int32,Atom.Core.Shortcode)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Remove(Atom.Core.Shortcode)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesSource"/>
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Replace(Atom.Core.Shortcode,Atom.Core.Shortcode)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.CreateFirstContentElement">
            <summary>
            Creates and returns the primary content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.CreateLabel(System.String,System.String,System.String)">
            <summary>
            Creates and returns a label for a shortcode
            </summary>
            <param name="text">The text of the label</param>
            <param name="color">The color of the label</param>
            <param name="value">The value of the shortcode</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.OnFontSizeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FontSize"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.OnCreatedAndPlacedRequiredLabels(System.String,System.Int32,System.Int32)">
            <summary>
            Handles the creation and the addition of labels
            </summary>
            <param name="text">The text</param>
            <param name="lineNumber">The number of the line the text is placed</param>
            <param name="start">The index of the starting character of the <paramref name="text"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.SetTextBoxLineHeight">
            <summary>
            Sets the line height of the <see cref="P:Atom.Windows.Controls.TextInput.TextBox"/> based on the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FontSize"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.GetTextBoxLineHeight">
            <summary>
            Gets the line height of the <see cref="P:Atom.Windows.Controls.TextInput.TextBox"/> based on the <see cref="P:Atom.Windows.Controls.BaseTypingInput`1.FontSize"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.CreateAndPlaceRequiredLabels(System.String,System.Int32,System.Int32)">
            <summary>
            Creates the required labels based on the shortcodes contained in the specified <paramref name="text"/>
            and places them at the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesContainerGrid"/>
            </summary>
            <param name="text">The text</param>
            <param name="lineNumber">The number of the line the text is placed</param>
            <param name="start">The index of the starting character of the <paramref name="text"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.OnShortcodesSourceChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesSource"/> changes and is used for removing the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.ItemsSourceCollection_Changed(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/> from the old collection
            and adding it to the new one.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodesTextInput.ItemsSourceCollection_Changed(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Fires the necessary collection changed events by listening to the inner changes of the <see cref="P:Atom.Windows.Controls.ShortcodesTextInput.ShortcodesSource"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ShortcodeData">
            <summary>
            Represents a shortcode label placement in the <see cref="T:Atom.Windows.Controls.ShortcodesTextInput"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodeData.LineNumber">
            <summary>
            The number of the line
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodeData.Start">
            <summary>
            The starting character index
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodeData.End">
            <summary>
            The ending character index
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ShortcodeData.Label">
            <summary>
            The label
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ShortcodeData.#ctor(System.Int32,System.Int32,System.Int32,Atom.Windows.Controls.BorderedTextBlock)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TextInput">
            <summary>
            Input that allows the user to insert text values
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInput.CaretIndex">
            <summary>
            Gets the caret index
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInput.VerticalOffset">
            <summary>
            Gets the vertical scroll position.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInput.HorizontalOffset">
            <summary>
            Gets the horizontal scroll position.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInput.LineCount">
            <summary>
            Gets the total number of lines in the text box.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInput.TextBox">
            <summary>
            The text box
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInput.TextWrapping">
            <summary>
            Gets or sets how the text box should wrap text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextInput.TextWrappingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextInput.TextWrapping"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.OnTextWrappingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TextInput.TextWrapping"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TextInput.AcceptsReturn">
            <summary>
            Gets or sets how the text box should wrap text
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TextInput.AcceptsReturnProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TextInput.AcceptsReturn"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.OnAcceptsReturnPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.TextInput.AcceptsReturn"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.Focus">
            <summary>
            Focuses the text input
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.ScrollToVerticalOffset(System.Double)">
            <summary>
            Scrolls the contents of the editing control to the specified vertical offset.
            </summary>
            <param name="offset">A double value that specifies the vertical offset to scroll to.</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.ScrollToHorizontalOffset(System.Double)">
            <summary>
            Scrolls the contents of the editing control to the specified horizontal <paramref name="offset"/>.
            </summary>
            <param name="offset">A double value that specifies the horizontal offset to scroll to.</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.CreateFirstContentElement">
            <summary>
            Creates and returns the primary content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.OnTextWrappingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.TextInput.TextWrapping"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.OnAcceptsReturnChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.TextInput.AcceptsReturn"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TextInput.OnAcceptsReturnChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.TextInput.AcceptsReturn"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.VersionInput">
            <summary>
            Input for inserting <see cref="T:System.Version"/>s
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VersionInput.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.VersionInput.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VersionInput.ContentUniformGrid">
            <summary>
            The content uniform grid
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VersionInput.MajorInput">
            <summary>
            The major text input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VersionInput.MinorInput">
            <summary>
            The minor text input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VersionInput.BuildInput">
            <summary>
            The build text input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VersionInput.RevisionInput">
            <summary>
            The revision text input
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VersionInput.Value">
            <summary>
            The selected version
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.VersionInput.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.VersionInput.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VersionInput.OnValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.VersionInput.Value"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VersionInput.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VersionInput.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VersionInput.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the value property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.VersionInput.AddVersionTextInput(System.String,Atom.Windows.Controls.VersionTextInput)">
            <summary>
            Adds the specified <paramref name="versionTextInput"/> with the specified <paramref name="hint"/> in the <see cref="P:Atom.Windows.Controls.VersionInput.ContentUniformGrid"/>
            </summary>
            <param name="hint">The hint</param>
            <param name="versionTextInput">The version text input</param>
        </member>
        <member name="M:Atom.Windows.Controls.VersionInput.VersionTextInput_ValueChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the value of a <see cref="T:Atom.Windows.Controls.VersionTextInput"/>
            </summary>
            <param name="sender">The version text input</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.VersionInput.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.VersionInput.Value"/> property internally
            </summary>
            <param name="e">The new value</param>
        </member>
        <member name="E:Atom.Windows.Controls.VersionInput.ValueChanged">
            <summary>
            Event that fires every time the value property of the control changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.VersionTextInput">
            <summary>
            A <see cref="T:Atom.Windows.Controls.TextInput"/> used for inputing <see cref="T:System.Version"/> values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VersionTextInput.#ctor(System.UInt32)">
            <summary>
            Default constructor
            </summary>
            <param name="defaultValue">The default value</param>
        </member>
        <member name="M:Atom.Windows.Controls.VersionTextInput.OnTextUpdated(System.String)">
            <summary>
            Validates the text input of the user before gets passed to the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/> property
            </summary>
            <param name="baseValue">The value that is about to get set to the <see cref="P:Atom.Windows.Controls.BaseFormattableTypingInput`1.Text"/></param> property
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseArrangeItemsControl`3">
            <summary>
            The base for all the item controls that can arrange their items
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <typeparam name="TItemsControl">The type of the items control that's will get used for presenting the items</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseArrangeItemsControl`3.mMouseDownPos">
            <summary>
            The position where mouse down on the ui element occurred.
            NOTE: If the mouse down didn't occur on a ui element, this is set to <see cref="!:null"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseArrangeItemsControl`3.mDraggedItem">
            <summary>
            The control that is currently being dragged
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseArrangeItemsControl`3.ImagePresenter">
            <summary>
            The image presenter of the control when being dragged
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseArrangeItemsControl`3.ArrangementCanvas">
            <summary>
            The canvas that contains the image presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseArrangeItemsControl`3.IsDraggingEnabled">
            <summary>
            A flag indicating whether the drag/arrange functionality is enabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseArrangeItemsControl`3.IsDraggingEnabledProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseArrangeItemsControl`3.IsDraggingEnabled"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseArrangeItemsControl`3.MoveOnRectangleIntercept">
            <summary>
            A flag indicating whether the item move should be commencing every time the dragged item rectangle
            and a a target item rectangle intercept
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseArrangeItemsControl`3.MoveOnRectangleInterceptProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseArrangeItemsControl`3.MoveOnRectangleIntercept"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseArrangeItemsControl`3.DraggedItemOpacity">
            <summary>
            A flag indicating whether multiple values are allowed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseArrangeItemsControl`3.DraggedItemOpacityValuesProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseArrangeItemsControl`3.DraggedItemOpacity"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseArrangeItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseArrangeItemsControl`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseArrangeItemsControl`3.AddElementEventHandlers(System.Windows.FrameworkElement)">
            <summary>
            Registers event handlers to the required events of the specified <paramref name="element"/>
            </summary>
            <param name="element">The element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseArrangeItemsControl`3.RemoveElementEventHandlers(System.Windows.FrameworkElement)">
            <summary>
            Unsubscribes the event handlers from the already subscribed events of the specified <paramref name="element"/>
            </summary>
            <param name="element">The element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseArrangeItemsControl`3.UIElement_PreviewMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the preview mouse down of the ui elements of the items container.
            NOTE: We should use the preview mouse down event because: A. We don't know that the ui element is necessary a a <see cref="T:Atom.Windows.Controls.BackgroundControl"/> to use the click control!
                                                                      B. The mouse down, the mouse move and mouse up events get suppressed on the <see cref="T:Atom.Windows.Controls.BackgroundControl"/> because of the click event simulation!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseArrangeItemsControl`3.UIElement_PreviewMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the preview mouse move of the ui elements of the items container.
            NOTE: We should use the preview mouse move event because: A. We don't know that the ui element is necessary a a <see cref="T:Atom.Windows.Controls.BackgroundControl"/> to use the click control!
                                                                      B. The mouse down,the mouse move and mouse up events get suppressed on the <see cref="T:Atom.Windows.Controls.BackgroundControl"/> because of the click event simulation!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseArrangeItemsControl`3.ImagePresenter_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the move of the image presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseArrangeItemsControl`3.ImagePresenter_MouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse up on the image presenter
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseInnerItemsControl`3">
            <summary>
            The base for every control that contains an <see cref="T:Atom.Windows.Controls.BaseItemsControl`1"/>
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <typeparam name="TItemsControl">The type of the derivatives of <see cref="T:Atom.Windows.Controls.BaseItemsControl`2"/> items control that's will get used for presenting the items</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseInnerItemsControl`3.mLinker">
            <summary>
            The member of the <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.Linker"/> property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl">
            <summary>
            The items container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.Linker">
            <summary>
            Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.Element">
            <summary>
            Gets the items control element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Add(`0)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Remove(`0)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.GetElement(`0)">
            <summary>
            Gets the <typeparamref name="TElement"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Get(`1)">
            <summary>
            Returns the <typeparamref name="TItem"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.Contains(`0)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.BaseItemsControl`1.Items"/> of the <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl"/>
            since the item is lastly removed from the <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl"/>!
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.ContainsElement(`1)">
            <summary>
            Checks if the <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl"/> contains the specified <paramref name="element"/>
            </summary>
            <param name="element">The element to check if contained in one of the items controls of the main items control</param>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInnerItemsControl`3.Elements">
            <summary>
            The elements contained in the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.CreateItemsControl">
            <summary>
            Creates and returns an items control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.ModifyItemsControl(`2)">
            <summary>
            Modifies the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control to modify</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.OnLinkerChanged(System.Func{`0,`1})">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.Linker"/> property
            </summary>
            <param name="linker">The new value</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInnerItemsControl`3.CreateItemsControlCore">
            <summary>
            Creates and returns the items control
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ItemsControl`1">
            <summary>
            The base for all the item controls
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource">
            <summary>
            The source of items the items control contains
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ItemsControl`1.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ItemsControl`1.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ItemsControl`1.OnItemsSourceChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> changes and is used for removing the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.ItemsSourceCollection_Changed(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/> from the old collection
            and adding it to the new one.
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseItemsControl`1">
            <summary>
            The base for all the item controls
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseItemsControl`1.mItemsList">
            <summary>
            The list that contains the items
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`1.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            NOTE: We should use this method in case of the items source being an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  because we will prevent the firing of the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event being fires when adding multiple items one by one!
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            NOTE: We should use this method in case of the items source being an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  because we will prevent the firing of the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event being fires when adding multiple items one by one!
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`1.Items">
            <summary>
            Gets the items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`1.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`1.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.Contains(`0)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.BaseItemsControl`1.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.Add(`0)">
            <summary>
            Adds an item to the items control.
            NOTE: This method should be used because it creates a <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  when the items source is <see cref="!:null"/>
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.Remove(`0)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnItemsSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnAddRangeStarted(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Handles the start of the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.AddRange(System.Collections.Generic.IEnumerable{`0})"/> method
            </summary>
            <param name="items">The items that are about to be added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnAddRangeFinished(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Handles the finish of the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.AddRange(System.Collections.Generic.IEnumerable{`0})"/> method
            </summary>
            <param name="item">The items that were added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnItemMoved(Atom.Core.ItemMovedEventArgs{`0})">
            <summary>
            Handles the move of two items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{`0})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.OnItemsSourceChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> changes and is used for removing the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.ItemsSourceCollection_Changed(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/> from the old collection
            and adding it to the new one.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.ItemsSourceCollection_Changed(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Fires the necessary collection changed events by listening to the inner changes of the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.HandleAddition(`0)">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="addedItem">The item that was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`1.HandleClear">
            <summary>
            Handles the clearing of the collection
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`1.ItemsSourceChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`1.ItemAdded">
            <summary>
            Event that fires every time an item is added to the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`1.ItemRemoved">
            <summary>
            Event that fires every time an item is removed to the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`1.ItemMoved">
            <summary>
            Event that fires every time an item is moved to the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`1.ItemReplaced">
            <summary>
            Event that fires every time an item is replaced to the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`1.ItemsCleared">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> is cleared
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseItemsControl`2">
            <summary>
            The base for every items control
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseItemsControl`2.mMapper">
            <summary>
            The mapper that links the item with the element.
            NOTE: The mapper only maps the associated elements to their initial items.
                  It doesn't contain all the items of the items control (ex. Separators)!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`2.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`2.Linker">
            <summary>
            Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`2.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            NOTE: We should use this method in case of the items source being an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  because we will prevent the firing of the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event being fires when adding multiple items one by one!
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            NOTE: We should use this method in case of the items source being an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  because we will prevent the firing of the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event being fires when adding multiple items one by one!
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`2.Items">
            <summary>
            Gets the items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`2.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`2.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Contains(`0)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.BaseItemsControl`2.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Add(`0)">
            <summary>
            Adds an item to the items control.
            NOTE: This method should be used because it creates a <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  when the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> is <see cref="!:null"/>
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Remove(`0)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControl`2.Elements">
            <summary>
            Gets all the associated elements
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.ContainsElement(`1)">
            <summary>
            Checks if the <paramref name="element"/> is in the <see cref="F:Atom.Windows.Controls.BaseItemsControl`2.mMapper"/>
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.IndexOfElement(`1)">
            <summary>
            Gets and returns the index of the specified <paramref name="element"/>
            </summary>
            <param name="element">The element whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Get(`1)">
            <summary>
            Returns the <typeparamref name="TItem"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.GetElement(`0)">
            <summary>
            Gets the <typeparamref name="TElement"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnItemsSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnAddRangeStarted(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Handles the start of the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.AddRange(System.Collections.Generic.IEnumerable{`0})"/> method
            </summary>
            <param name="items">The items that are about to be added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnAddRangeFinished(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Handles the finish of the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.AddRange(System.Collections.Generic.IEnumerable{`0})"/> method
            </summary>
            <param name="item">The items that were added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnItemMoved(Atom.Core.ItemMovedEventArgs{`0,`1})">
            <summary>
            Handles the move of two items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{`0,`1})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0,`1})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.OnItemsSourceChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> changes and is used for removing the <see cref="M:Atom.Windows.Controls.BaseItemsControl`1.ItemsSourceCollection_Changed(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)"/> from the old collection
            and adding it to the new one.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.ItemsSourceCollection_Changed(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Fires the necessary collection changed events by listening to the inner changes of the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.HandleAddition(`0)">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="addedItem">The item that was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControl`2.HandleClear">
            <summary>
            Handles the clearing of the collection
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`2.ItemsSourceChanged">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> changes
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`2.ItemAdded">
            <summary>
            Event that fires every time an item is added to the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`2.ItemRemoved">
            <summary>
            Event that fires every time an item is removed to the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`2.ItemMoved">
            <summary>
            Event that fires every time an item is moved to the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`2.ItemReplaced">
            <summary>
            Event that fires every time an item is replaced to the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.BaseItemsControl`2.ItemsCleared">
            <summary>
            Event that fires every time the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/> is cleared
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.ItemsContainer">
            <summary>
            The items container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.TargetsContainer">
            <summary>
            The targets container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.MinimumItemLinks">
            <summary>
            The minimum links required for each item
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseLinkingItemsControl`4.MinimumItemLinksProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.MinimumItemLinks"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.MinimumTargetLinks">
            <summary>
            The minimum links required for each target
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseLinkingItemsControl`4.MinimumTargetLinksProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.MinimumTargetLinks"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.MaximumItemLinks">
            <summary>
            The maximum links for each item
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseLinkingItemsControl`4.MaximumItemLinksProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.MaximumItemLinks"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.MaximumTargetLinks">
            <summary>
            The maximum links for each target
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseLinkingItemsControl`4.MaximumTargetLinksProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseLinkingItemsControl`4.MaximumTargetLinks"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseLinkingItemsControl`4.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseLinkingItemsControl`4.#ctor(System.Func{`0,`1},System.Func{`2,`3})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="targetLinker">Creates or extracts the <typeparamref name="TTargetElement"/> that is associate with the inserted <typeparamref name="TTarget"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseLinkingItemsControl`4.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.LinkIndicatorPlacement">
            <summary>
            The placement of the link indicator in a <see cref="T:Atom.Windows.Controls.LinkContainer`1"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.LinkContainer`1">
            <summary>
            Container used by the <see cref="T:Atom.Windows.Controls.BaseLinkingItemsControl`4"/>
            </summary>
            <typeparam name="TElement"></typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.LinkContainer`1.LinkIndicator">
            <summary>
            The link indicator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LinkContainer`1.ContentGrid">
            <summary>
            The stack panel that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LinkContainer`1.Content">
            <summary>
            The content element
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.LinkContainer`1.ContentProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.LinkContainer`1.Content"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LinkContainer`1.OnContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.LinkContainer`1.Content"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.LinkContainer`1.LinkIndicatorPlacement">
            <summary>
            The placement of the link indicator
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.LinkContainer`1.LinkIndicatorPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.LinkContainer`1.LinkIndicatorPlacement"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LinkContainer`1.OnLinkIndicatorPlacementPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.LinkContainer`1.LinkIndicatorPlacement"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LinkContainer`1.Update">
            <summary>
            Updates the link container
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.LinkContainer`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.LinkContainer`1.OnContentChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LinkContainer`1.Content"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.LinkContainer`1.OnLinkIndicatorPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LinkContainer`1.LinkIndicatorPlacement"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.LinkContainer`1.OnContentChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LinkContainer`1.Content"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.LinkContainer`1.OnLinkIndicatorPlacementChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.LinkContainer`1.LinkIndicatorPlacement"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BasePanelItemsControl`3">
            <summary>
            The base for every items control
            </summary>
            <typeparam name="TPanel">The type of the panel that contains the items</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer">
            <summary>
            The panel that contains the items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.#ctor(System.Func{`1,`2})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.OnItemsContainerCreated(`0)">
            <summary>
            Handles the creation of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="itemsContainer">The items container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.OnItemAdded(Atom.Core.ItemAddedEventArgs{`1,`2})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`1,`2})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.OnItemMoved(Atom.Core.ItemMovedEventArgs{`1,`2})">
            <summary>
            Handles the move of two items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{`1,`2})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`1,`2})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.AddUIElement(`2,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.RemoveUIElement(`2,System.Int32)">
            <summary>
            Removes the element from the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to remove</param>
            <param name="index">The index that the element has in the ItemsSource before get removed</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.MoveUIElement(`2,`2,System.Int32,System.Int32)">
            <summary>
            Switches the location of the two elements
            </summary>
            <param name="element1">The first index to move</param>
            <param name="element2">The second index to move</param>
            <param name="element1Index">The new index of the first element</param>
            <param name="element2Index">The new index of the second element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.ReplaceUIElement(`2,`2,System.Int32)">
            <summary>
            Removes the <paramref name="oldElement"/> from the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/> and adds the <paramref name="newElement"/> at its place
            </summary>
            <param name="newElement">The element that's going to replace the <paramref name="oldElement"/></param>
            <param name="oldElement">The element that will get replaced</param>
            <param name="newItemIndex">The index where the replacement occurred</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePanelItemsControl`3.ClearUIElements">
            <summary>
            Clears the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseCategorizingItemsControl`3">
            <summary>
            Items control that has the ability to categorize its items
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <typeparam name="TInnerItemsControl">The type of the item controls</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter">
            <summary>
            Gets the name of the category where the item should get placed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter">
            <summary>
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl">
            <summary>
            The items control that contains all the other item controls
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.#ctor(System.Func{`0,`1},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.GetCategoryID(`0)">
            <summary>
            Gets the unique identifier of the category where the <paramref name="item"/> is contained
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CreateMainItemsControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CreateInnerItemsControl">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CreateUncategorizedInnerItemsControl">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            and will be used for storing elements that are not categorized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.SetCategoryName(`2,System.String)">
            <summary>
            Sets the <paramref name="categoryName"/> to the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control</param>
            <param name="categoryName">The name of the category</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{`0,`1})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0,`1})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemAddedCore(Atom.Core.ItemAddedEventArgs{`0,`1})">
            <summary>
            Handles the addition of an item after the completion of the 
            <see cref="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0,`1})"/> method
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemRemovedCore(Atom.Core.ItemRemovedEventArgs{`0,`1})">
            <summary>
            Handles the removal of an item after the completion of the 
            <see cref="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0,`1})"/> method
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemReplacedCore(Atom.Core.ItemReplacedEventArgs{`0,`1})">
            <summary>
            Handles the replacement of an item after the completion of the 
            <see cref="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemReplacedCore(Atom.Core.ItemReplacedEventArgs{`0,`1})"/> method
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemsClearedCore(Atom.Core.ItemsClearedEventArgs{`0,`1})">
            <summary>
            Handles the disposal of all items after the completion of the
            <see cref="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0,`1})"/> method
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.FindItemsControlByID(System.String)">
            <summary>
            Finds the items control with the specified <paramref name="id"/> if any
            </summary>
            <param name="id">The id of the items control</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.HandleAddition(`0,`1)">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="item">The item that was added</param>
            <param name="element">The element that was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.HandleRemoval(`1)">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="element">The element that was removed</param>
        </member>
        <member name="T:Atom.Windows.Controls.ICategorizer`1">
            <summary>
            Provides abstractions for a categorizer
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ICategorizer`1.CategoryNameGetter">
            <summary>
            Gets the name of the category where the item should get placed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ICategorizer`1.CategoryIDGetter">
            <summary>
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.ICategorizer`1.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.ICategorizer`1.CategoryNameGetter"/>
                  are used as the ids.
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuCategorizingItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseCategorizingItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu`2"/>
            as the type of its item controls
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuCategorizingItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuCategorizingItemsControl`2.#ctor(System.Func{`0,`1},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuCategorizingItemsControl`2.CreateInnerItemsControl">
            <summary>
            Creates an <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuCategorizingItemsControl`2.SetCategoryName(Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu{`1},System.String)">
            <summary>
            Sets the <paramref name="categoryName"/> to the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control</param>
            <param name="categoryName">The name of the category</param>
        </member>
        <member name="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseCategorizingItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2"/>
            as the type of its item controls
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.Columns">
            <summary>
            The number of columns of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.Columns"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.Rows">
            <summary>
            The number of rows of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.RowsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.Rows"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.#ctor(System.Func{`0,`1},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.CreateInnerItemsControl">
            <summary>
            Creates an <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuCategorizingItemsControl`2.SetCategoryName(Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu{`1},System.String)">
            <summary>
            Sets the <paramref name="categoryName"/> to the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control</param>
            <param name="categoryName">The name of the category</param>
        </member>
        <member name="T:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuCategorizingItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseCategorizingItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`2"/>
            as the type of its item controls
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuCategorizingItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuCategorizingItemsControl`2.#ctor(System.Func{`0,`1},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuCategorizingItemsControl`2.CreateInnerItemsControl">
            <summary>
            Creates an <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuCategorizingItemsControl`2.SetCategoryName(Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu{`1},System.String)">
            <summary>
            Sets the <paramref name="categoryName"/> to the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control</param>
            <param name="categoryName">The name of the category</param>
        </member>
        <member name="T:Atom.Windows.Controls.IItemsControl">
            <summary>
            Provides abstractions for an items control when the type of the items is unknown
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IItemsControl.Element">
            <summary>
            The items control element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IItemsControl.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.IItemsControl.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IItemsControl.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{System.Object})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.SetItemsSource(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.Contains(System.Object)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.IItemsControl.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.IndexOf(System.Object)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.Add(System.Object)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.AddRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.Insert(System.Int32,System.Object)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.Remove(System.Object)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.Replace(System.Object,System.Object)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.IItemsControl`1">
            <summary>
            Provides abstractions for an items control
            </summary>
            <typeparam name="TItem">The type of the items the items control contains</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.IItemsControl`1.Items">
            <summary>
            Gets the items of the items control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#SetItemsSource(System.Collections.ObjectModel.ObservableCollection{System.Object})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#SetItemsSource(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#Contains(System.Object)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.IItemsControl`1.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Contains(`0)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.IItemsControl`1.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#IndexOf(System.Object)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#Add(System.Object)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Add(`0)">
            <summary>
            Adds an item to the items control.
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#AddRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#Insert(System.Int32,System.Object)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#Remove(System.Object)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Remove(`0)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Atom#Windows#Controls#IItemsControl#Replace(System.Object,System.Object)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.IItemsControl`1.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="T:Atom.Windows.Controls.ILinker`2">
            <summary>
            Provides abstractions for an items control that links items with ui elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <typeparam name="TElement">The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ILinker`2.Linker">
            <summary>
            Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atom.Windows.Controls.ILinker`2.Elements">
            <summary>
            Gets the elements contained in the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ILinker`2.Pairs">
            <summary>
            Gets the pairs of items and elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ILinker`2.GetElement(`0)">
            <summary>
            Gets the <typeparamref name="TElement"/> that's associated with the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose element to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ILinker`2.Get(`1)">
            <summary>
            Returns the <typeparamref name="TItem"/> that is associated with the <paramref name="element"/> and <see cref="!:null"/> if none is found
            </summary>
            <param name="element">The associated element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ILinker`2.ContainsElement(`1)">
            <summary>
            Checks if the items control contains the specified <paramref name="element"/>
            </summary>
            <param name="element">The element to check if exists</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.OrientedItemsControl`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePanelItemsControl`3"/> that implements the <see cref="P:Atom.Windows.Controls.OrientedItemsControl`3.Orientation"/> property
            </summary>
            <typeparam name="TPanel">The type of the panel that contains the items</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.OrientedItemsControl`3.Orientation">
            <summary>
            The orientation.
            NOTE: The default value is <see cref="F:System.Windows.Controls.Orientation.Vertical"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OrientedItemsControl`3.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.OrientedItemsControl`3.Orientation"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OrientedItemsControl`3.OrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when <see cref="P:Atom.Windows.Controls.OrientedItemsControl`3.Orientation"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OrientedItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OrientedItemsControl`3.#ctor(System.Func{`1,`2})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.OrientedItemsControl`3.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.OrientedItemsControl`3.Orientation"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseSectionItemsControl`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseItemsControl`1"/> personalized to present an one of many sections
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <typeparam name="TItemsControl">The type of the derivatives of <see cref="T:Atom.Windows.Controls.BaseItemsControl`1"/> items control that's will get used for presenting the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.NumberOfSectionsGetter">
            <summary>
            Gets the number of sections of the container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.CurrentSectionIndexGetter">
            <summary>
            Gets the index of the section relative to all the others in the container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.NumberOfSections">
            <summary>
            Gets the number of sections of the container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.CurrentSection">
            <summary>
            Gets the location of section relative to all the others in the container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.SectionInfoGrid">
            <summary>
            The grid that contains the content of the section info
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.SectionInfoTextBlock">
            <summary>
            The textblock that displays general information about the section
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.GeneralInfoGrid">
            <summary>
            The grid that contains the general info
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.Title">
            <summary>
            The title of the section that is displayed on the top
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSectionItemsControl`3.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseSectionItemsControl`3.Title"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSectionItemsControl`3.Description">
            <summary>
            The description of the section
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSectionItemsControl`3.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseSectionItemsControl`3.Description"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSectionItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSectionItemsControl`3.#ctor(System.Func{System.Int32},System.Func{System.Object,System.Int32})">
            <summary>
            Standard constructor
            </summary>
            <param name="numberOfSectionsGetter">Gets the number of sections of the container</param>
            <param name="currentSectionIndexGetter">Gets the index of the section relative to all the others in the container</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSectionItemsControl`3.UpdateSectionInfoTextBlock">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.BaseSectionItemsControl`3.SectionInfoTextBlock"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSectionItemsControl`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSectionItemsControl`3.GetSectionInfo">
            <summary>
            Gets and returns the information about this specific section usually used to update the <see cref="P:Atom.Windows.Controls.BaseSectionItemsControl`3.SectionInfoTextBlock"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ISection">
            <summary>
            Provides abstractions for a sectioned part
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ISection.NumberOfSectionsGetter">
            <summary>
            Gets the number of sections of the container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ISection.CurrentSectionIndexGetter">
            <summary>
            Gets the index of the section relative to all the others in the container
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelArrangeItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseArrangeItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.StackPanelItemsControl`2"/>
            as the type of its items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelArrangeItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelArrangeItemsControl`2.CreateItemsControl">
            <summary>
            Creates and returns an items control
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseSelectionItemsControl`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInnerItemsControl`3"/> whose <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl"/> has the ability to select
            its elements and the selected elements are placed in the <see cref="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.SelectedItemsSource"/> collection
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <typeparam name="TItemsControl">The type of the items control that's will get used for presenting the items</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSelectionItemsControl`3.mSelectionRectangle">
            <summary>
            The selection rectangle
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSelectionItemsControl`3.mIsMouseDownOnTheItemsContainer">
            <summary>
            If true then the mouse down occurred on the items container and is still pressed
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSelectionItemsControl`3.mMouseDownPos">
            <summary>
            The position where the mouse down on the items container occurred
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.SelectionCanvas">
            <summary>
            The canvas that contains the selection rectangle
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.ShouldClearExistingSelections">
            <summary>
            A flag indicating whether the existing selections should be clear or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.Padding">
            <summary>
            The margin of the items control.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSelectionItemsControl`3.PaddingProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.Padding"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.SelectedItemsSource">
            <summary>
            The items that are selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSelectionItemsControl`3.SelectedSourceProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.SelectedItemsSource"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.MultipleItemsSelection">
            <summary>
            A flag indicating whether the user is allowed to select multiple items or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseSelectionItemsControl`3.MultipleItemsSelectionProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.MultipleItemsSelection"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionItemsControl`3.SelectedItems">
            <summary>
            The items that are selected
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.SelectItem(`0)">
            <summary>
            Selects the given item by adding it to the selected items collection and updating its selected flag
            </summary>
            <param name="item">The item to select</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.Deselect(`0)">
            <summary>
            Selects the given item by removing it from the selected items collection and updating its selected flag
            </summary>
            <param name="item">The item to deselect</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.ModifyItemsControl(`2)">
            <summary>
            Modifies the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control to modify</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.ContainerGrid_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse down
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.ContainerGrid_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the mouse move
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.ContainerGrid_MouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse up
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.UIElement_PreviewMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the preview mouse down of the ui elements of the items container.
            NOTE: We should use the preview mouse down event because: A. We don't know that the ui element is necessary a a <see cref="T:Atom.Windows.Controls.BackgroundControl"/> to use the click control!
                                                                      B. The mouse down and mouse up events get suppressed on the <see cref="T:Atom.Windows.Controls.BackgroundControl"/> because of the click event simulation!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.UIElement_IsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the visibility of the ui elements of the items container
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.UIElement_IsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the enabled flag of the ui elements of the items container
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.AddUIElementEventHandlers(`1)">
            <summary>
            Adds the required event handlers to the specified <paramref name="element"/>
            </summary>
            <param name="element">The element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionItemsControl`3.RemoveUIElementEventHandlers(`1)">
            <summary>
            Removes the event handlers that we assigned to the specified <paramref name="element"/>
            </summary>
            <param name="element">The element</param>
        </member>
        <member name="T:Atom.Windows.Controls.StandardSelectionItemsControl`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSelectionItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.BaseItemsControl`2"/> as the inner items control
            </summary>
            <typeparam name="TItem">
            The type of the items.
            NOTE: This is used for the cases where the items are view models, in order to configure the <see cref="P:Atom.Windows.Controls.BaseItemsControl`2.Linker"/>!
            </typeparam>
            <typeparam name="TElement">
            The type of the items that are extracted from the <typeparamref name="TItem"/>.
            NOTE: This parameter is used for filtering purposes, in order to limit the type of the items that are allowed in the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
            <typeparam name="TItemsControl">The type of the items control that's will get used for presenting the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StandardSelectionItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ISelection`1">
            <summary>
            Provides abstractions for selectable items
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ISelection`1.SelectedItems">
            <summary>
            The items that are selected
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseSelectionDataPresenter`3">
            <summary>
            The base for all the selection data presenters
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <typeparam name="TComponent">The type of the component used by the presenter</typeparam>
            <typeparam name="TDataPresenter">The type of the data presenter</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionDataPresenter`3.PresentationMode">
            <summary>
            The presentation mode data model
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionDataPresenter`3.Translator">
            <summary>
            The translator used for translating the values for the default UI elements
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseSelectionDataPresenter`3.Mapper">
            <summary>
            If the mapper is set, then when a title isn't specified for a column
            then the title is retrieved using the mapper.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.#ctor(Atom.Windows.Controls.PresentationModeDataModel)">
            <summary>
            Default constructor
            </summary>
            <param name="presentationMode">The presentation mode data model</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.#ctor(Atom.Core.Translator{`2},Atom.Windows.Controls.PresentationModeDataModel)">
            <summary>
            Standard constructor
            </summary>
            <param name="translator">The translator</param>
            <param name="presentationMode">The presentation mode data model</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.Update">
            <summary>
            Updates the presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.Update(`2,System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="model">The model</param>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.UnsafeUpdate(`2,System.Reflection.PropertyInfo)">
            <summary>
            Updates the element of the component related to the specified <paramref name="model"/> related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="model">The model</param>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.Update(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Updates the elements of the components of the presenter related to the property selected by the specified <paramref name="propertySelector"/>
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.UnsafeUpdate(System.Reflection.PropertyInfo)">
            <summary>
            Updates the elements of the components of the presenter related to the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.GetComponent(`2)">
            <summary>
            Gets the component associated with the specified <paramref name="model"/>
            </summary>
            <param name="model">The model of the component that we want to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.Update(`2)">
            <summary>
            Updates the presented values of the element associated with the specified <paramref name="model"/>
            </summary>
            <param name="model">The model whose element to update its values</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.IsDataShown(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Checks whether the data of the property that is targeted from the <paramref name="propertySelector"/>
            is shown
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.UnsafeIsDataShown(System.Reflection.PropertyInfo)">
            <summary>
            Checks whether the data of the specified <paramref name="propertyInfo"/> is shown.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.ShowData``1(System.Linq.Expressions.Expression{System.Func{`2,``0}},System.String,System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>
            Shows the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
            <param name="customTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.UnsafeShowData(System.Reflection.PropertyInfo,System.String,System.Object,System.Boolean)">
            <summary>
            Shows the data of the <typeparamref name="TClass"/> of the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="columnTitleName">The name of the title</param>
            <param name="comparer">The optional comparer</param>
            <param name="throwIfAlreadyShown">
            If true, then an <see cref="T:System.InvalidOperationException"/> is thrown if the title already exists, otherwise nothing happens
            NOTE: This is used to ensure the update of the title name!
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.HideData(System.Linq.Expressions.Expression{System.Func{`2,System.Object}})">
            <summary>
            Hides the data of the <typeparamref name="TClass"/> that is targeted by the <paramref name="propertySelector"/>.
            </summary>
            <param name="propertySelector">Expression that selects a property from the <typeparamref name="TClass"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.UnsafeHideData(System.Reflection.PropertyInfo)">
            <summary>
            Hides the data of the <typeparamref name="TClass"/> of the specified <paramref name="propertyInfo"/>
            </summary>
            <param name="propertyInfo">The name the property of the <typeparamref name="TClass"/> whose values should be hidden</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.HideAllData">
            <summary>
            Hides all the shown data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.Atom#Windows#Controls#IDataPresenter#UnsafeSetCustomUIElement``1(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.IDataPresenter,System.Object,``0},System.Action{Atom.Windows.Controls.IDataPresenter,System.Object,``0})">
            <summary>
            Sets a custom ui element for the component that presents the specified <paramref name="propertyInfo"/>.
            NOTE: This method should only be used by implementations related to <see cref="N:System.Reflection"/>!
            </summary>
            <typeparam name="TElement">The type of the element that is created</typeparam>
            <param name="propertyInfo">The property info</param>
            <param name="uiElementImplementationFactory">The element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.ShowFormulaData(Atom.Core.Formula)">
            <summary>
            Shows the formula data related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula">The formula</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.HideFormulaData(Atom.Core.Formula)">
            <summary>
            Hides all the data related to the specified <paramref name="formula"/>
            </summary>
            <param name="formula"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.HideFormulaData(System.String)">
            <summary>
            Hides all the data related to the formula with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.Atom#Windows#Controls#IDataPresenter#SetOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton,Atom.Windows.Controls.IDataPresenter,System.Object},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Sets a new custom option
            </summary>
            <param name="id">The id of the option</param>
            <param name="optionAction">The action that is related with the option</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.DisableOption(System.String)">
            <summary>
            Disable the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.EnableOption(System.String)">
            <summary>
            Enables the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.RemoveOption(System.String)">
            <summary>
            Removes the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.ModifyItemsControl(`0)">
            <summary>
            Modifies the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control to modify</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectionDataPresenter`3.InitializeComponent(Atom.Windows.Controls.PresentationModeDataModel)">
            <summary>
            Initializes the component
            </summary>
            <param name="presentationMode">The presentation mode data model</param>
        </member>
        <member name="T:Atom.Windows.Controls.SelectionDataGrid`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSelectionItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.DataGrid`1"/> as its
            <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionDataGrid`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionDataGrid`1.#ctor(Atom.Core.Translator{`0})">
            <summary>
            Standard Constructor
            </summary>
            <param name="translator">The translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionDataGrid`1.CreateItemsControl">
            <summary>
            Creates and returns the items control
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SelectionCollapsibleDataGrid`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSelectionItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.CollapsibleDataGrid`1"/> as its
            <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionCollapsibleDataGrid`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionCollapsibleDataGrid`1.#ctor(Atom.Core.Translator{`0})">
            <summary>
            Standard Constructor
            </summary>
            <param name="translator">THe translator</param>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionCollapsibleDataGrid`1.CreateItemsControl">
            <summary>
            Creates and returns the items control
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SelectionTilesPresenter`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSelectionItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.TilesPresenter`1"/> as its
            <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionTilesPresenter`1.#ctor(Atom.Windows.Controls.PresentationModeDataModel)">
            <summary>
            Default constructor
            </summary>
            <param name="presentationMode">The presentation mode data model</param>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionTilesPresenter`1.#ctor(Atom.Core.Translator{`0},Atom.Windows.Controls.PresentationModeDataModel)">
            <summary>
            Default constructor
            </summary>
            <param name="translator">The translator</param>
            <param name="presentationMode">The presentation mode data model</param>
        </member>
        <member name="M:Atom.Windows.Controls.SelectionTilesPresenter`1.CreateItemsControl">
            <summary>
            Creates and returns the items control
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedStackPanelSelectionItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2"/> that has the ability to select its items
            </summary>
            <typeparam name="TItem">
            The type of the items.
            NOTE: This is used for the cases where the items are view models, in order to configure the <see cref="P:Atom.Windows.Controls.BaseItemsControl`2.Linker"/>!
            </typeparam>
            <typeparam name="TElement">
            The type of the items that are extracted from the <typeparamref name="TItem"/>.
            NOTE: This parameter is used for filtering purposes, in order to limit the type of the items that are allowed in the <see cref="P:Atom.Windows.Controls.BaseInnerItemsControl`3.ItemsControl"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelSelectionItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelSelectionItemsControl`2.CreateItemsControl">
            <summary>
            Creates and returns an items control
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseSelectItemsControl`3">
            <summary>
            The base for every items control
            </summary>
            <typeparam name="TInnerItemsControl">The type of the item controls</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.#ctor(System.Func{`0,`1},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.OnItemAddedCore(Atom.Core.ItemAddedEventArgs{`0,`1})">
            <summary>
            Handles the addition of an item after the completion of the 
            <see cref="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0,`1})"/> method
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.OnItemRemovedCore(Atom.Core.ItemRemovedEventArgs{`0,`1})">
            <summary>
            Handles the removal of an item after the completion of the 
            <see cref="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0,`1})"/> method
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.OnItemReplacedCore(Atom.Core.ItemReplacedEventArgs{`0,`1})">
            <summary>
            Handles the replacement of an item after the completion of the 
            <see cref="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemReplacedCore(Atom.Core.ItemReplacedEventArgs{`0,`1})"/> method
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.OnItemsClearedCore(Atom.Core.ItemsClearedEventArgs{`0,`1})">
            <summary>
            Handles the disposal of all items after the completion of the
            <see cref="M:Atom.Windows.Controls.BaseCategorizingItemsControl`3.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0,`1})"/> method
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.AttachElementEventHandlers(`1)">
            <summary>
            Subscribes to the necessary event handlers of the specified <paramref name="element"/>
            </summary>
            <param name="element">The element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.DetatchElementEventHandlers(`1)">
            <summary>
            Subscribes to the necessary event handlers of the specified <paramref name="element"/>
            </summary>
            <param name="element">The element</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseSelectItemsControl`3.Element_PreviewMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the preview mouse left button up of an element
            </summary>
            <param name="sender">The element</param>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseSelectItemsControl`3.ItemSelected">
            <summary>
            Fires every an item is selected
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSelectItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu`2"/> as the type of the
            inner item controls
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`2.#ctor(System.Func{`0,`1},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`2.CreateInnerItemsControl">
            <summary>
            Creates an <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`2.CreateUncategorizedInnerItemsControl">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            and will be used for storing elements that are not categorized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`2.SetCategoryName(Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu{`1},System.String)">
            <summary>
            Sets the <paramref name="categoryName"/> to the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control</param>
            <param name="categoryName">The name of the category</param>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`2"/> that uses <see cref="T:Atom.Windows.Controls.InformationalButton"/>
            as the type of its elements
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`1.#ctor(System.Func{`0,Atom.Windows.Controls.InformationalButton},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.InformationalButton"/> that is associate with the inserted <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenuSelectItemsControl`1.#ctor(System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Conventional constructor
            </summary>
            <param name="textSelector">The optional information button text selector</param>
            <param name="descriptionSelector">The optional informational button description selector</param>
            <param name="pathDataSelector">The optional informational button path data selector</param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSelectItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu`1"/> as the type of the
            inner item controls
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.Columns">
            <summary>
            The number of columns of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.Columns"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.Rows">
            <summary>
            The number of rows of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.RowsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.Rows"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.#ctor(System.Func{`0,`1},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.CreateInnerItemsControl">
            <summary>
            Creates an <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.CreateUncategorizedInnerItemsControl">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            and will be used for storing elements that are not categorized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridCollapsibleVerticalMenuSelectItemsControl`2.SetCategoryName(Atom.Windows.Controls.UniformGridCollapsibleVerticalMenu{`1},System.String)">
            <summary>
            Sets the <paramref name="categoryName"/> to the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control</param>
            <param name="categoryName">The name of the category</param>
        </member>
        <member name="T:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseSelectItemsControl`3"/> that uses a <see cref="T:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu`1"/> as the type of the
            inner item controls
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.ItemWidth">
            <summary>
            Gets or sets a value that specifies the height of all items that are contained
            within a <see cref="T:System.Windows.Controls.WrapPanel"/>
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.ItemWidthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.ItemWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.ItemHeight">
            <summary>
            Gets or sets a value that specifies the width of all items that are contained
            within a <see cref="T:System.Windows.Controls.WrapPanel"/>.
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.ItemHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.ItemHeight"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.Orientation">
            <summary>
            The orientation.
            NOTE: The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.Orientation"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.#ctor(System.Func{`0,`1},System.Func{`0,System.String},System.Func{`0,System.String})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
            <param name="categoryIDGetter">
            Gets the id of the category where the item should get placed
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryIDGetter"/> is not set then the
                  the values returned by the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.CategoryNameGetter"/>
                  are used as the ids.
            </param>
            <param name="categoryNameGetter">Gets the name of the category where the item should get placed</param>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.CreateInnerItemsControl">
            <summary>
            Creates an <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.CreateUncategorizedInnerItemsControl">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/> that is placed in the <see cref="P:Atom.Windows.Controls.BaseCategorizingItemsControl`3.MainItemsControl"/>
            and will be used for storing elements that are not categorized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenuSelectItemsControl`2.SetCategoryName(Atom.Windows.Controls.WrapPanelCollapsibleVerticalMenu{`1},System.String)">
            <summary>
            Sets the <paramref name="categoryName"/> to the <paramref name="itemsControl"/>
            </summary>
            <param name="itemsControl">The items control</param>
            <param name="categoryName">The name of the category</param>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedItemsControl`4">
            <summary>
            An <see cref="T:Atom.Windows.Controls.OrientedItemsControl`3"/> that uses separators of type <typeparamref name="TSeparator"/> to separate its children
            </summary>
            <typeparam name="TPanel">The type of the panel that contains the items</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <typeparam name="TSeparator">The type of the separator, usually being either a <see cref="T:System.Windows.Controls.Separator"/> or a <see cref="T:System.Windows.Controls.GridSplitter"/></typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorColor">
            <summary>
            The color of the splitter
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorColorProperty">
            <summary>
            The splitter color property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedItemsControl`4.OnSeparatorColorPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when <see cref="P:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorColor"/> changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorSize">
            <summary>
            The size of the splitter.
            Note: This refers to the width of the horizontal splitters and the height of vertical splitter
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorSizeProperty">
            <summary>
            The splitter size property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedItemsControl`4.OnSeparatorSizePropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when <see cref="P:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorSize"/> property changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorMargin">
            <summary>
            The margin of the separators
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorMarginProperty">
            <summary>
            The separator margin property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedItemsControl`4.OnSeparatorMarginPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.SeparatedItemsControl`4.SeparatorMargin"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedItemsControl`4.OnSeparatorMarginChanged(Atom.Windows.Controls.SeparatedItemsControl{`0,`1,`2,`3})">
            <summary>
            Updates the separated grid by listening to the updates of separator margin property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedItemsControl`4.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedItemsControl`3">
            <summary>
            An <see cref="T:Atom.Windows.Controls.SeparatedItemsControl`3"/> that uses <see cref="T:Atom.Windows.Controls.StandardSeparator"/> to separate its children
            </summary>
            <typeparam name="TPanel">The type of the panel that contains the items</typeparam>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TreeItemsControl`3">
            <summary>
            A tree items control.
            TODO: Implement replace method
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <typeparam name="TId">The type of the id</typeparam>
            <typeparam name="TParentId">The type of the parent id</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.TreeItemsControl`3.IdExtractor">
            <summary>
            Extracts the id from the specified item
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TreeItemsControl`3.ParentIdExtractor">
            <summary>
            Extracts the parent id from the specified item
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TreeItemsControl`3.Comparer">
            <summary>
            The comparer
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TreeItemsControl`3.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TreeItemsControl`3.ItemsContainer">
            <summary>
            The stack panel that contains the <see cref="T:Atom.Windows.Controls.TreeCollapsibleVerticalMenu"/>s
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.#ctor(System.Func{`0,Atom.Windows.Controls.TreeCollapsibleVerticalMenu},System.Func{`0,`1},System.Func{`0,`2},System.Func{`1,`2,System.Boolean})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <see cref="T:Atom.Windows.Controls.TreeCollapsibleVerticalMenu"/> that is associate with the inserted <typeparamref name="TItem"/></param>
            <param name="idExtractor">Extracts the id from the specified item</param>
            <param name="parentIdExtractor">Extracts the parent id from the specified item</param>
            <param name="comparer">The comparer</param>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.GetParent(`0)">
            <summary>
            Gets the parent of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose parent to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.GetIndex(`0)">
            <summary>
            Gets the index of the specified <paramref name="item"/> in the tree
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.GetParents(`0)">
            <summary>
            Gets all the parents of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0,Atom.Windows.Controls.TreeCollapsibleVerticalMenu})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0,Atom.Windows.Controls.TreeCollapsibleVerticalMenu})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TreeItemsControl`3.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0,Atom.Windows.Controls.TreeCollapsibleVerticalMenu})">
            <summary>
            Handles the disposal of all items
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.TreeCollapsibleVerticalMenu">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StackPanelCollapsibleVerticalMenu`1"/> for a <see cref="T:Atom.Windows.Controls.TreeItemsControl`3"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.TreeCollapsibleVerticalMenu.ChildOffsetMargin">
            <summary>
            The offset margin of every child of the tree
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.TreeCollapsibleVerticalMenu.ChildOffsetMarginProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.TreeCollapsibleVerticalMenu.ChildOffsetMargin"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TreeCollapsibleVerticalMenu.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TreeCollapsibleVerticalMenu.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TreeCollapsibleVerticalMenu.CreateDropDownButton">
            <summary>
            Creates and returns the drop down button.
            NOTE: This method gets called by the <see cref="M:Atom.Windows.Controls.CollapsibleVerticalMenu`3.OnInitialized(System.EventArgs)"/> method!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.TreeCollapsibleVerticalMenu.OnItemAdded(Atom.Core.ItemAddedEventArgs{System.Windows.FrameworkElement,System.Windows.FrameworkElement})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.TreeCollapsibleVerticalMenu.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{System.Windows.FrameworkElement,System.Windows.FrameworkElement})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.TreeCollapsibleVerticalMenuDropDownButton">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDropDownButton"/> for a <see cref="T:Atom.Windows.Controls.TreeCollapsibleVerticalMenu"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TreeCollapsibleVerticalMenuDropDownButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TreeCollapsibleVerticalMenuDropDownButton.OnIsOpenChange(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDropDownButton`1.IsOpen"/> changes
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.CanvasItemsControl`2">
            <summary>
            An items control that uses a <see cref="T:System.Windows.Controls.Canvas"/> as its <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CanvasItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CanvasItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
             <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="T:Atom.Windows.Controls.CanvasItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CanvasItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CanvasItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CanvasItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CanvasItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CanvasItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardViewModelCanvasItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CanvasItemsControl`2"/> that uses view models with an <see cref="T:Atom.Core.Controls.IView"/> definition as the type of their items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardViewModelCanvasItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CanvasItemsControl`1"/> that places its children in a circular order
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`2.AddUIElement(`1,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="associatedElementToAdd">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`2.RemoveUIElement(`1,System.Int32)">
            <summary>
            Removes the element from the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to remove</param>
            <param name="index">The index that the element has in the ItemsSource before get removed</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`2.UpdateAllElementsLocation">
            <summary>
            Updates the location of all the elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`2.UpdateElementLocation(`1)">
            <summary>
            Updates the location of the <paramref name="element"/> in the canvas
            </summary>
            <param name="element">The element whose location we want to update</param>
        </member>
        <member name="T:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`2"/> that accepts <see cref="T:System.Windows.UIElement"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsPlacementCanvasItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CircularItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseItemsControl`2"/> that places its items in a circular manner
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.ContentGrid">
            <summary>
            The content grid
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.StateButton">
            <summary>
            The state button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.IsOpen">
            <summary>
            A flag indicating whether the items are shown or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.IsOpenProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.IsOpen"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnIsOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.IsOpen"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.Radius">
            <summary>
            The distance between the center of two relative items in different circular levels
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.RadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.Radius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnRadiusPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.Radius"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.FirstQaudrantPlacement">
            <summary>
            A flag indicating whether placement on the first quadrant of the circle is allowed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.FirstQuadrantPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.FirstQaudrantPlacement"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnUtilizedQuadrantsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.FirstQaudrantPlacement"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.SecondQaudrantPlacement">
            <summary>
             A flag indicating whether placement on the second quadrant of the circle is allowed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.SecondQuadrantPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.SecondQaudrantPlacement"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.ThirdQaudrantPlacement">
            <summary>
             A flag indicating whether placement on the third quadrant of the circle is allowed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.ThirdQuadrantPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.ThirdQaudrantPlacement"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.FourthQaudrantPlacement">
            <summary>
             A flag indicating whether placement on the fourth quadrant of the circle is allowed or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.FourthQuadrantPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.FourthQaudrantPlacement"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.RequiredWidthPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.CircularItemsControl`2.RequiredWitdthProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.RequiredWitdthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.RequiredWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.RequiredWidth">
            <summary>
            The width the control requires to expand its children
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.RequiredHeightPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.CircularItemsControl`2.RequiredHeightProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CircularItemsControl`2.RequiredHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.RequiredHeight"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.RequiredHeight">
            <summary>
            The height the control requires to expand its children
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.MaxNumberOfElementsPerLayer">
            <summary>
            Gets the maximum number of elements that can be placed in a circular layer
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.Update">
            <summary>
            Updates the items control and all of its elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{`0,`1})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0,`1})">
            <summary>
            Handles the disposal of all items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnIsOpenChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.IsOpen"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnRadiusChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.Radius"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnUtilizedQuadrantsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.FirstQaudrantPlacement"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.CalculatePlacement(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Atom.Windows.Controls.CircularItemsControl{`0,`1}.QuadrantData})">
            <summary>
            Calculates the placement of the element based on its index
            </summary>
            <param name="index">The index of the element</param>
            <param name="itemsPerLayer">The number of items per layer</param>
            <param name="quadrants">The used quadrants</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.DetermineQuadrant(System.Int32,System.Collections.Generic.IEnumerable{Atom.Windows.Controls.CircularItemsControl{`0,`1}.QuadrantData})">
            <summary>
            Determines the quadrant that the element with the specified <paramref name="currentLayerIndex"/> is placed at
            </summary>
            <param name="currentLayerIndex">The index of the element on the layer that is placed at</param>
            <param name="quadrants">The available quadrants</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.DetermineLocation(System.Boolean,System.Int32)">
            <summary>
            Determines the location for an element
            </summary>
            <param name="isPlacedOnAxis">A flag indicating whether the item is placed on an axis or not</param>
            <param name="placementLayerIndex">The index of the layer that the item is placed at</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.CalculateQuadrants">
            <summary>
            Calculates the available quadrant data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnIsOpenChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.IsOpen"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnRadiusChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.Radius"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.OnUtilizedQuadrantsChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.FirstQaudrantPlacement"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="E:Atom.Windows.Controls.CircularItemsControl`2.Opened">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.IsOpen"/> property changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CircularItemsControl`2.QuadrantData">
            <summary>
            Represents a quadrant and its starting and ending index
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.QuadrantData.Quadrant">
            <summary>
            The target quadrant
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.QuadrantData.StartingIndex">
            <summary>
            The starting index
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.QuadrantData.EndingIndex">
            <summary>
            The ending index
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CircularItemsControl`2.QuadrantData.Indexes">
            <summary>
            The indexes that the quadrant contains
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`2.QuadrantData.#ctor(Atom.Core.Quadrant,System.Int32,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="quadrant">The target quadrant</param>
            <param name="startingIndex">The starting index of the quadrant</param>
            <param name="endingIndex">The ending index of the quadrant</param>
        </member>
        <member name="T:Atom.Windows.Controls.CircularItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CircularItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/>, that are the items of the <see cref="P:Atom.Windows.Controls.CircularItemsControl`2.ContentGrid"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.CircularItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.CircularItemsControl`1"/> that accepts <see cref="T:System.Windows.FrameworkElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CircularItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`2">
            <summary>
            An <see cref="T:Atom.Windows.Controls.SeparatedItemsControl`3"/> that uses <see cref="T:System.Windows.Controls.GridSplitter"/> to separate its children
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`2.CreateSeparator">
            <summary>
            Creates the separator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`2.CreateElementColumnDefinition">
            <summary>
            Creates the column definition of the element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`2.CreateElementRowDefinition">
            <summary>
            Creates the row definition of the element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`1">
            <summary>
            An <see cref="T:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`2"/> that accepts <see cref="T:System.Windows.UIElement"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl">
            <summary>
            An <see cref="T:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableSeparatedGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardViewModelAdjustableSeparatedGridItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedGridItemsControl`2"/> that uses view models with an <see cref="T:Atom.Core.Controls.IView"/> definition as the type of their items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardViewModelAdjustableSeparatedGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.GridItemsControl`2">
            <summary>
            An items control that uses a <see cref="T:System.Windows.Controls.Grid"/> as its items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.GridItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.GridItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="T:Atom.Windows.Controls.GridItemsControl`1">
            <summary>
            An items control that uses a <see cref="T:Atom.Windows.Controls.GridItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.GridItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.GridItemsControl">
            <summary>
            An items control that uses a <see cref="T:Atom.Windows.Controls.GridItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.GridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardViewModelGridItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.GridItemsControl`2"/> that uses view models with an <see cref="T:Atom.Core.Controls.IView"/> definition as the type of their items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardViewModelGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedGridItemsControl`3">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedItemsControl`4"/> that uses a grid as its <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
            <typeparam name="TSeparator">The type of the separator, usually being either a <see cref="T:System.Windows.Controls.Separator"/> or a <see cref="T:System.Windows.Controls.GridSplitter"/></typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.CreateSeparator">
            <summary>
            Creates the separator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.CreateElementColumnDefinition">
            <summary>
            Creates the column definition of the element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.CreateElementRowDefinition">
            <summary>
            Creates the row definition of the element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.AddUIElement(`1,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.RemoveUIElement(`1,System.Int32)">
            <summary>
            Removes the element from the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to remove</param>
            <param name="index">The index that the element has in the ItemsSource before get removed</param>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.MoveUIElement(`1,`1,System.Int32,System.Int32)">
            <summary>
            Moves the element to a different column or row definition
            </summary>
            <param name="element1">The first index to move</param>
            <param name="element2">The second index to move</param>
            <param name="element1Index">The new index of the first element</param>
            <param name="element2Index">The new index of the second element</param>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.ClearUIElements">
            <summary>
            Clears the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.GetElementColumnOrRowIndex(System.Int32)">
            <summary>
            Gets the index of the column or the row that the element is placed based on its location in the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
            <param name="elementIndexInItemsSource">The index of the element in the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/></param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`3.GetElementSeparatorColumnOrRowIndex(System.Int32)">
            <summary>
            Gets the index of the column or the row that the element's separator is placed based on its location in the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/>
            </summary>
            <param name="elementIndexInItemsSource">The index of the element in the <see cref="P:Atom.Windows.Controls.ItemsControl`1.ItemsSource"/></param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedGridItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedItemsControl`3"/> that separates its children using separators and uses a <see cref="T:System.Windows.Controls.Grid"/> as its items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`2.CreateSeparator">
            <summary>
            Creates the separator
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedGridItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedGridItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedGridItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedGridItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StretchedGridItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.OrientedItemsControl`3"/> that places the first and the last element at its edges 
            and uniformly aligns the rest of its elements
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.OnItemAdded(Atom.Core.ItemAddedEventArgs{`0,`1})">
            <summary>
            Handles the addition of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.OnItemRemoved(Atom.Core.ItemRemovedEventArgs{`0,`1})">
            <summary>
            Handles the removal of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.OnItemReplaced(Atom.Core.ItemReplacedEventArgs{`0,`1})">
            <summary>
            Handles the replacement of an item
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.OnItemMoved(Atom.Core.ItemMovedEventArgs{`0,`1})">
            <summary>
            Handles the move of two items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.OnItemsCleared(Atom.Core.ItemsClearedEventArgs{`0,`1})">
            <summary>
            Handles the disposal of all items
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the orientation
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.GetElementDefinitionSize">
            <summary>
            Gets the size of the column of the row definitions used for presenting the elements
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.UpdatePlacement(`0,`1)">
            <summary>
            Updates the placement of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item</param>
            <param name="element">The related element</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.ClearPlacement(`1)">
            <summary>
            Clears the placement indexes of the specified <paramref name="element"/>
            </summary>
            <param name="element">The element</param>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`2.UpdateGridDefinitions">
            <summary>
            Updates the <see cref="P:System.Windows.Controls.Grid.ColumnDefinitions"/> and the <see cref="P:System.Windows.Controls.Grid.RowDefinitions"/>
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StretchedGridItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StretchedGridItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StretchedGridItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StretchedGridItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StretchedGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ItemsControlConstants">
            <summary>
            Constants related to the item controls
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ItemsControlConstants.MinimumDragInitializationThreashold">
            <summary>
            The minimum distance the mouse should get dragged to initialize the drag action
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ItemsControlConstants.ImagePresenterScaleFactor">
            <summary>
            The scale factor of the image presenter
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ItemsControlConstants.DraggedItemOpacity">
            <summary>
            The opacity of the item that is dragged
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ItemsControlConstants.SearchInputWidth">
            <summary>
            The width of the search inputs
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ItemsControlHelpers">
            <summary>
            Helper methods for the items controls
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ItemsControlHelpers.DelegateOrDefault``2(System.Func{``0,``1}@,System.Func{``0,``1})">
            <summary>
            Sets the specified <paramref name="func"/> to the specified <paramref name="member"/>
            </summary>
            <param name="member">The member that saves the delegate</param>
            <param name="func">The delegate</param>
        </member>
        <member name="F:Atom.Windows.Controls.ItemsControlHelpers.StandardUIElementExtractor">
            <summary>
            An extractor that extracts the <see cref="T:System.Windows.UIElement"/> from a view model with an <see cref="T:Atom.Core.Controls.IView"/> definition
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.ItemsControlHelpers.StandardFrameworkElementExtractor">
            <summary>
            An extractor that extracts the <see cref="T:System.Windows.FrameworkElement"/> from a view model with an <see cref="T:Atom.Core.Controls.IView"/> definition
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ListViewItemsControl`1.ItemsContainer">
            <summary>
            The list view
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ListViewItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ListViewItemsControl`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelItemsControl`2">
            <summary>
            An items control that uses a <see cref="T:System.Windows.Controls.StackPanel"/> as its items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelItemsControl`2.AddUIElement(`1,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelItemsControl`2.MoveUIElement(`1,`1,System.Int32,System.Int32)">
            <summary>
            Switches the location of the two elements
            </summary>
            <param name="element1">The first index to move</param>
            <param name="element2">The second index to move</param>
            <param name="element1Index">The new index of the first element</param>
            <param name="element2Index">The new index of the second element</param>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelItemsControl`2.OnItemsContainerCreated(System.Windows.Controls.StackPanel)">
            <summary>
            Handles the creation of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="itemsContainer">The items container</param>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StackPanelItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StackPanelItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StackPanelItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StackPanelItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StackPanelItemsControl`2"/> that overlaps its children based on the <see cref="P:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OverlayMargin"/> property
            </summary>
            <typeparam name="TItem">
            The type of the items.
            NOTE: This is used for the cases where the items are view models, in order to configure the <see cref="P:Atom.Windows.Controls.BaseItemsControl`2.Linker"/>!
            </typeparam>
            <typeparam name="TElement">
            The type of the items that are extracted from the <typeparamref name="TItem"/>.
            NOTE: This parameter is used for filtering purposes, in order to limit the type of the items that are allowed in the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OverlayDirection">
            <summary>
            The overlay direction
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OverlayDirectionProperty">
            <summary>
            The overlay direction property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OnOverlayDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OverlayDirection"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OverlayMargin">
            <summary>
            The overlay margin.
            Note: This refers to the width of the horizontal splitters and the height of vertical splitter
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OverlayMarginProperty">
            <summary>
            The overlay margin property declaration
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OnOverlayMarginPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when <see cref="P:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.OverlayMargin"/> changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.AddUIElement(`1,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.MoveUIElement(`1,`1,System.Int32,System.Int32)">
            <summary>
            Switches the location of the two elements
            </summary>
            <param name="element1">The first index to move</param>
            <param name="element2">The second index to move</param>
            <param name="element1Index">The new index of the first element</param>
            <param name="element2Index">The new index of the second element</param>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2.GetOverlayThickness(Atom.Core.Direction,System.Double,System.Int32)">
            <summary>
            Calculates the overlay thickness of the element based on the <paramref name="direction"/>, the <paramref name="overlayMargin"/> and the <paramref name="index"/>
            of the element in the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="direction">The direction</param>
            <param name="overlayMargin">The overlay margin</param>
            <param name="index">The index of the element</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.OverlapingStackPanelItemsControl`1">
            <summary>
            An <see cref="T:Atom.Windows.Controls.OverlapingStackPanelItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.FrameworkElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.OverlapingStackPanelItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardViewModelOverlapingStackPanelItemsControl">
            <summary>
            An <see cref="T:Atom.Windows.Controls.OverlapingStackPanelItemsControl`1"/> that uses view models with an <see cref="T:Atom.Core.Controls.IView"/> definition as the type of their items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardViewModelOverlapingStackPanelItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2">
            <summary>
            An <see cref="T:Atom.Windows.Controls.SeparatedGridItemsControl`2"/> that uses separators of type <see cref="T:Atom.Windows.Controls.StandardSeparator"/> to separate its children and uses a <see cref="T:System.Windows.Controls.StackPanel"/> as its children container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2.AddUIElement(`1,System.Int32)">
            <summary>
            Adds the element to the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="associatedElementToAdd">The element to add</param>
            <param name="index">The index where the item was added</param>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2.RemoveUIElement(`1,System.Int32)">
            <summary>
            Removes the element from the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </summary>
            <param name="element">The element to remove</param>
            <param name="index">The index that the element has in the ItemsSource before get removed</param>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2.MoveUIElement(`1,`1,System.Int32,System.Int32)">
            <summary>
            Switches the location of the two elements
            </summary>
            <param name="element1">The first index to move</param>
            <param name="element2">The second index to move</param>
            <param name="element1Index">The new index of the first element</param>
            <param name="element2Index">The new index of the second element</param>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2.ReplaceUIElement(`1,`1,System.Int32)">
            <summary>
            Removes the <paramref name="associatedElementToReplace"/> from the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/> and adds the <paramref name="newassociatedElement"/> at its place
            </summary>
            <param name="newassociatedElement">The element that's going to replace the <paramref name="associatedElementToReplace"/></param>
            <param name="associatedElementToReplace">The element that will get replaced</param>
            <param name="newItemIndex">The index where the replacement occurred</param>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2.GetSeparatorItemsContainerIndex(System.Int32)">
            <summary>
            Calculates the index of the separator that's after the element whose index in the items source is <paramref name="elementIndex"/>
            </summary>
            <param name="elementIndex">The index of the element int the items source whose separator we want to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2.GetElementItemsContainerIndex(System.Int32)">
            <summary>
            Calculates the index of the element, whose index in the items source is <paramref name="elementIndex"/>
            </summary>
            <param name="elementIndex">The index of the element in the items source</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2.AddSeparator(System.Int32)">
            <summary>
            Creates and returns a separator
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedStackPanelItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedGridItemsControl`2"/> that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.SeparatedStackPanelItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedGridItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.SeparatedStackPanelItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardViewModelSeparatedStackPanelItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.SeparatedStackPanelItemsControl`2"/> that uses view models with an <see cref="T:Atom.Core.Controls.IView"/> definition as the type of their items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardViewModelSeparatedStackPanelItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.UniformGridItemsControl`2"/> that adjusts the width of its elements based on its size
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl`2.InitializeComponent">
            <summary>
            Handles the initialization of the control
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.AdjustableContentUniformGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.UniformGridItemsControl`2">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePanelItemsControl`3"/> that uses a <see cref="T:System.Windows.Controls.Primitives.UniformGrid"/> as its items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.UniformGridItemsControl`2.Columns">
            <summary>
            The number of columns of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformGridItemsControl`2.ColumnsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformGridItemsControl`2.Columns"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.UniformGridItemsControl`2.Rows">
            <summary>
            The number of rows of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.UniformGridItemsControl`2.RowsProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.UniformGridItemsControl`2.Rows"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridItemsControl`2.InitializaComponent">
            <summary>
            Initializes the controls
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.UniformGridItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.UniformGridItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.UniformGridItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.UniformGridItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UniformGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardViewModelUniformGridItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.UniformGridItemsControl`2"/> that uses view models with an <see cref="T:Atom.Core.Controls.IView"/> definition as the type of their items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardViewModelUniformGridItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.WrapPanelItemsControl`2">
            <summary>
            An items control that uses a <see cref="T:System.Windows.Controls.WrapPanel"/> as its items container
            </summary>
            <typeparam name="TItem">
            The type of the items.
            </typeparam>
            <typeparam name="TElement">
            The derivatives of the <see cref="T:System.Windows.UIElement"/>, that are linked with the <typeparamref name="TItem"/>s.
            </typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.WrapPanelItemsControl`2.ItemWidth">
            <summary>
            The number of columns of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WrapPanelItemsControl`2.ItemWidthProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.WrapPanelItemsControl`2.ItemWidth"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WrapPanelItemsControl`2.ItemHeight">
            <summary>
            The number of rows of the uniform grid
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WrapPanelItemsControl`2.ItemHeightProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.WrapPanelItemsControl`2.ItemHeight"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelItemsControl`2.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelItemsControl`2.#ctor(System.Func{`0,`1})">
            <summary>
            Standard constructor
            </summary>
            <param name="linker">Creates or extracts the <typeparamref name="TElement"/> from the related <typeparamref name="TItem"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelItemsControl`2.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelItemsControl`2.MoveUIElement(`1,`1,System.Int32,System.Int32)">
            <summary>
            Moves the element to a different location in the wrap panel
            </summary>
            <param name="element1">The first index to move</param>
            <param name="element2">The second index to move</param>
            <param name="element1Index">The new index of the first element</param>
            <param name="element2Index">The new index of the second element</param>
        </member>
        <member name="T:Atom.Windows.Controls.WrapPanelItemsControl`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.WrapPanelItemsControl`2"/>  that accepts <typeparamref name="TItem"/> as its associated elements type
            </summary>
            <typeparam name="TItem">
            The derivatives of the <see cref="T:System.Windows.UIElement"/> that are the items of the <see cref="P:Atom.Windows.Controls.BasePanelItemsControl`3.ItemsContainer"/>
            </typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelItemsControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.WrapPanelItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.WrapPanelItemsControl`1"/> that accepts <see cref="T:System.Windows.UIElement"/> as its items type
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WrapPanelItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardViewModelWrapPanelItemsControl">
            <summary>
            A <see cref="T:Atom.Windows.Controls.WrapPanelItemsControl`2"/> that uses view models with an <see cref="T:Atom.Core.Controls.IView"/> definition as the type of their items
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardViewModelWrapPanelItemsControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BasePaginatedPage`1">
            <summary>
            The base for all the pages that support pagination
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BasePaginatedPage`1.mIsNextPageLoading">
            <summary>
            A flag indicating whether the next page of items is loading
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BasePaginatedPage`1.mLoadCancellationToken">
            <summary>
            A cancellation token source used for canceling the load request
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.Element">
            <summary>
            The container element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.CurrentPageIndex">
            <summary>
            The current page index
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenterScrollViewer">
            <summary>
            The data presenter that contains the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter">
            <summary>
            The data presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.OptionsContainer">
            <summary>
            The options container.
            NOTE: The options container is only visible when it contains at least one option!
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Update">
            <summary>
            Updates the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.LoadNextAsync">
            <summary>
            Loads the next set of receipts
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            NOTE: We should use this method in case of the items source being an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  because we will prevent the firing of the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event being fires when adding multiple items one by one!
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            NOTE: We should use this method in case of the items source being an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  because we will prevent the firing of the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event being fires when adding multiple items one by one!
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.Items">
            <summary>
            Gets the items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Contains(`0)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Add(`0)">
            <summary>
            Adds an item to the items control.
            NOTE: This method should be used because it creates a <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  when the items source is <see cref="!:null"/>
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Remove(`0)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.OptionsCount">
            <summary>
            Gets the number of the options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BasePaginatedPage`1.Options">
            <summary>
            The registered options
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.AddOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Adds an option button
            </summary>
            <param name="id">The identifier of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.GetOption(System.String)">
            <summary>
            Gets the option button related to the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The identifier of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.DisableOption(System.String)">
            <summary>
            Disables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.EnableOption(System.String)">
            <summary>
            Enables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.RemoveOption(System.String)">
            <summary>
            Removes the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.CreateItemsControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.GetDataAsync(System.Int32)">
            <summary>
            Retrieves the data
            </summary>
            <param name="pageIndex">The index of the page starting from 0</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.GetNoMoreDataWereRetrievedMessage">
            <summary>
            Gets the message that is displayed when no data were retrieved but the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter"/> contains some data
            Localization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BasePaginatedPage`1.GetNoDataWereRetrievedMessage">
            <summary>
            Gets the message that is displayed when no data were retrieved but the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter"/> doesn't contain any data
            Localization
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDataPresenterPaginatedPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePaginatedPage`1"/> that explicitly used a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/>
            to present its data
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterPaginatedPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterPaginatedPage`1.CreateItemsControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterPaginatedPage`1.CreateDataPresenterCore">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StandardPaginatedPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BasePaginatedPage`1"/> that has pre-set a day span limit option
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardPaginatedPage`1.DaySpan">
            <summary>
            The day span used for limiting the results
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardPaginatedPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardPaginatedPage`1.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardDataPresenterPaginatedPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardPaginatedPage`1"/> that explicitly used a <see cref="T:Atom.Windows.Controls.IDataPresenter`1"/>
            to present its data
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenterPaginatedPage`1.DataPresenter">
            <summary>
            The data presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPaginatedPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPaginatedPage`1.CreateItemsControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPaginatedPage`1.CreateDataPresenterCore">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BasePaginatedPage`1.DataPresenter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseApplicationPage">
            <summary>
            A basic application page that contains a left and a top menu
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.TopMenuGrid">
            <summary>
            The grid for the top menu
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.TopMenuLeftSideItemsContainer">
            <summary>
            The items container of the top menu that is placed on the left side
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.TopMenuRightSideItemsContainer">
            <summary>
            The items container of the top menu that is placed on the right side
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.BottomContentGrid">
            <summary>
            The grid that contains the content bellow the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.TopMenuGrid"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.MainBodyGrid">
            <summary>
            The grid for the main body
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuAndMainBodySeparator">
            <summary>
            The separator that separates the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.MainBodyGrid"/> and the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuGrid"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuGrid">
            <summary>
            The grid for the left menu
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuItemsContainer">
            <summary>
            The left menu items container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.ShowLeftMenu">
            <summary>
            A flag indicating whether the left menu should be visible or not
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseApplicationPage.ShowLeftMenuProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.ShowLeftMenu"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseApplicationPage.OnShowLeftMenuPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.ShowLeftMenu"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuSize">
            <summary>
            The size of the left menu
            NOTE: It is recommended to be selected on of the available menu sizes from the <see cref="T:Atom.Windows.WindowsPersonalization"/>
                  static class!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseApplicationPage.LeftMenuSizeProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuSize"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuAnimationDuration">
            <summary>
            The duration of the left menu animation
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseApplicationPage.LeftMenuAnimationDurationProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuAnimationDuration"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.TopMenuBackground">
            <summary>
            The back ground of the top menu
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseApplicationPage.TopMenuBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.TopMenuBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuBackground">
            <summary>
            The background of the left menu
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseApplicationPage.LeftMenuBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseApplicationPage.MainBodyBackground">
            <summary>
            The background of the main body
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseApplicationPage.MainBodyBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.MainBodyBackground"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseApplicationPage.AddTopMenuElement(System.Windows.UIElement,System.Boolean)">
            <summary>
            Adds the specified <paramref name="element"/> to the top menu
            </summary>
            <param name="element">The element to add</param>
            <param name="placeToTheLeft">
            Determines whether the <paramref name="element"/> should be placed to the left or to the right.
            If this is set to <see cref="!:true"/> then the element is placed to the left
            </param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseApplicationPage.AddLeftMenuElement(System.Windows.UIElement)">
            <summary>
            Adds the specified <paramref name="element"/> to the left menu
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseApplicationPage.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseApplicationPage.CreateLeftMenuElementsContainer">
            <summary>
            Creates the <see cref="T:System.Windows.UIElement"/> that contains the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuItemsContainer"/>
            and that is placed in the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.LeftMenuGrid"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseApplicationPage.OnShowLeftMenuChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.ShowLeftMenu"/> property 
            </summary>
            <param name="e">event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseApplicationPage.OnShowLeftMenuChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseApplicationPage.ShowLeftMenu"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDataFormPage`1">
            <summary>
            A page that hosts a <see cref="T:Atom.Windows.Controls.DataForm`1"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataFormPage`1.mSavingComponent">
            <summary>
            The component that is shown when saving the changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataFormPage`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataFormPage`1.Section">
            <summary>
            The section that contains the form
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataFormPage`1.Form">
            <summary>
            The data form
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataFormPage`1.SaveButton">
            <summary>
            The save button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataFormPage`1.Title">
            <summary>
            The title of the section
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataFormPage`1.TitleProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDataFormPage`1.Title"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataFormPage`1.AreChangesBeingSavedPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.BaseDataFormPage`1.AreChangesBeingSavedProperty"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.OnAreChangesBeingSavedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires wen the <see cref="P:Atom.Windows.Controls.BaseDataFormPage`1.AreChangesBeingSaved"/> property changes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataFormPage`1.AreChangesBeingSavedProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDataFormPage`1.AreChangesBeingSaved"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataFormPage`1.AreChangesBeingSaved">
            <summary>
            A flag indicating whether the changes are being saved or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="title">The title of the section</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.Validate">
            <summary>
            Validates the form
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.SaveChanges">
            <summary>
            Uses the values inserted by the user at the <see cref="P:Atom.Windows.Controls.BaseDataFormPage`1.Form"/>
            to update the data storage.
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.ClearValues">
            <summary>
            Clears the inserted values
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.CreateDataForm">
            <summary>
            Creates and returns the data form
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.SaveChangesAsync(`0)">
            <summary>
            Updates the values of the model
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.OnAreChangesBeingSavedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataFormPage`1.AreChangesBeingSaved"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataFormPage`1.OnAreChangesBeingSavedChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataFormPage`1.AreChangesBeingSaved"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.StandardDataFormPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDataFormPage`1"/> that loads the model on its initialization
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataFormPage`1.mLoadingComponent">
            <summary>
            The component that is shown the data gets loaded
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataFormPage`1.AreDataBeingRetrievedPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.StandardDataFormPage`1.AreDataBeingRetrievedProperty"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataFormPage`1.OnAreDataBeingRetrievedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires wen the <see cref="P:Atom.Windows.Controls.StandardDataFormPage`1.AreDataBeingRetrieved"/> property changes
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.StandardDataFormPage`1.AreDataBeingRetrievedProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.StandardDataFormPage`1.AreDataBeingRetrieved"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataFormPage`1.AreDataBeingRetrieved">
            <summary>
            A flag indicating whether data are being retrieved or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataFormPage`1.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="title">The title of the section</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataFormPage`1.Update">
            <summary>
            Updates the page
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataFormPage`1.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataFormPage`1.RetrieveDataAsync">
            <summary>
            Retrieves the data presented by the <see cref="P:Atom.Windows.Controls.BaseDataFormPage`1.Form"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataFormPage`1.OnAreDataBeingRetrievedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardDataFormPage`1.AreDataBeingRetrieved"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataFormPage`1.OnAreDataBeingRetrievedChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.StandardDataFormPage`1.AreDataBeingRetrieved"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalDataFormPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDataFormPage`1"/> that is used for manipulating a model
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.ConventionalDataFormPage`1.Model">
            <summary>
            The model
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalDataFormPage`1.#ctor(System.String,`0)">
            <summary>
            Default constructor
            </summary>
            <param name="title">The title of the section</param>
            <param name="model">The model</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDataInitializablePage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInitializablePage"/> that gets initialized when its <see cref="P:Atom.Windows.Controls.BaseDataInitializablePage`1.Data"/> gets retrieved
            </summary>
            <typeparam name="TData">The type of the data, usually a model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataInitializablePage`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataInitializablePage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataInitializablePage`1.InitializeAsync">
            <summary>
            Initializes the page
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataInitializablePage`1.GetDataAsync">
            <summary>
            Gets the data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataInitializablePage`1.OnSuccessfulInitialization">
            <summary>
            Handles the successful initialization.
            NOTE: Usually used for creating the UI elements after the initialization succeeded!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataInitializablePage`1.OnSuccessfulInitialization(`0)">
            <summary>
            Handles the successful initialization using the model retrieved by the <see cref="M:Atom.Windows.Controls.BaseDataInitializablePage`1.GetDataAsync"/> method.
            NOTE: Usually used for creating the UI elements after the initialization succeeded!
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDataVerticalMenuInitializablePage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseVerticalMenuInitializablePage"/> that gets initialized when its <see cref="P:Atom.Windows.Controls.BaseDataVerticalMenuInitializablePage`1.Data"/> gets retrieved
            </summary>
            <typeparam name="TData">The type of the data, usually a model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataVerticalMenuInitializablePage`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataVerticalMenuInitializablePage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataVerticalMenuInitializablePage`1.InitializeAsync">
            <summary>
            Initializes the page
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataVerticalMenuInitializablePage`1.GetDataAsync">
            <summary>
            Gets the data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataVerticalMenuInitializablePage`1.OnSuccessfulInitialization">
            <summary>
            Handles the successful initialization.
            NOTE: Usually used for creating the UI elements after the initialization succeeded!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataVerticalMenuInitializablePage`1.OnSuccessfulInitialization(`0)">
            <summary>
            Handles the successful initialization using the model retrieved by the <see cref="M:Atom.Windows.Controls.BaseDataInitializablePage`1.GetDataAsync"/> method.
            NOTE: Usually used for creating the UI elements after the initialization succeeded!
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseInitializablePage">
            <summary>
            The base for all the pages that are asynchronously initialized
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseInitializablePage.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInitializablePage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInitializablePage.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInitializablePage.InitializeAsync">
            <summary>
            Initializes the page
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInitializablePage.OnSuccessfulInitialization">
            <summary>
            Handles the successful initialization.
            NOTE: Usually used for creating the UI elements after the initialization succeeded!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseInitializablePage.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseVerticalMenuInitializablePage">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseInitializablePage"/> that contains a <see cref="P:Atom.Windows.Controls.BaseVerticalMenuInitializablePage.VerticalMenu"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseVerticalMenuInitializablePage.VerticalMenu">
            <summary>
            The vertical menu
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseVerticalMenuInitializablePage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseVerticalMenuInitializablePage.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseVerticalMenuInitializablePage.Add(System.String,System.Func{Atom.Windows.Controls.VerticalMenu,Atom.Windows.Controls.VerticalMenuButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.String,System.Boolean)">
            <summary>
            Adds and returns a <see cref="T:Atom.Windows.Controls.VerticalMenuButton"/> with the specified <paramref name="text"/> that presents 
            the specified element provided by the <paramref name="elementImplementationFactory"/> when clicked
            </summary>
            <param name="text">The text of the button</param>
            <param name="elementImplementationFactory">The element implementation factory</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseVerticalMenuInitializablePage.Add(System.String,System.String,System.Func{Atom.Windows.Controls.VerticalMenu,Atom.Windows.Controls.VerticalMenuButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.String,System.Boolean)">
            <summary>
            Adds and returns a <see cref="T:Atom.Windows.Controls.VerticalMenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            that presents the specified element provided by the <paramref name="elementImplementationFactory"/> when clicked
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
            <param name="elementImplementationFactory">The element implementation factory</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseVerticalMenuInitializablePage.Add(Atom.Windows.Controls.VerticalMenuButton,System.String,System.Boolean)">
            <summary>
            Adds the specified <paramref name="button"/> that presents the specified element provided by the implementation factory of the specified <paramref name="button"/> when clicked
            </summary>
            <param name="button">The menu button</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseItemsControlPage`1">
            <summary>
            A page that hosts a <see cref="T:Atom.Windows.Controls.IItemsControl`1"/>
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.Element">
            <summary>
            The element
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.ContainerPresenter">
            <summary>
            The container presenter.
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScroll"/> is set to <see cref="!:true"/> then this is a <see cref="T:System.Windows.Controls.ScrollViewer"/>!
            NOTE: If the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScroll"/> is set to <see cref="!:false"/> then this is a <see cref="T:System.Windows.Controls.ContentControl"/>!
            NOTE: The value changes every time the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScroll"/> property changes!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.DataPresenter">
            <summary>
            The data presenter
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.OverlayContentGrid">
            <summary>
            The grid that contains all the overlay content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.OptionsContainer">
            <summary>
            The options container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.OptionsContainerPlacement">
            <summary>
            The title of the section
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseItemsControlPage`1.OptionsContainerPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.OptionsContainerPlacement"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.OnOptionsContainerPlacementPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.OptionsContainerPlacement"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScroll">
            <summary>
            A flag indicating whether the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.DataPresenter"/> should get wrapped in a <see cref="T:System.Windows.Controls.ScrollViewer"/> or not!
            NOTE: When having a <see cref="T:System.Windows.Controls.ScrollViewer"/> that contains this page then this property should be set to 
                  <see cref="!:true"/> to allow the parent <see cref="T:System.Windows.Controls.ScrollViewer"/> to do the scrolling!
            NOTE: The default value is <see cref="!:true"/>!
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScrollProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScroll"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.OnAllowVerticalScrollPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScroll"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.SetItemsSource(System.Collections.ObjectModel.ObservableCollection{`0})">
            <summary>
            Sets the items source.
            NOTE: We should use this method in case of the items source being an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  because we will prevent the firing of the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event being fires when adding multiple items one by one!
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.SetItemsSource(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Sets the items source.
            NOTE: We should use this method in case of the items source being an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  because we will prevent the firing of the <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> event being fires when adding multiple items one by one!
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.Items">
            <summary>
            Gets the items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.ItemsCount">
            <summary>
            Gets the number of items of the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.HasItems">
            <summary>
            Checks if the items controls has items or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.Contains(`0)">
            <summary>
            Checks if the specified <paramref name="item"/> is contained in the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.Items"/>
            </summary>
            <param name="item">The item to check if it's contained</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.IndexOf(`0)">
            <summary>
            Gets and returns the index of the specified <paramref name="item"/>
            </summary>
            <param name="item">The item whose index to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.Get(System.Int32)">
            <summary>
            Gets the item based on its index in the items source
            </summary>
            <param name="index">The index of the item to get</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.Add(`0)">
            <summary>
            Adds an item to the items control.
            NOTE: This method should be used because it creates a <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 
                  when the items source is <see cref="!:null"/>
            </summary>
            <param name="item">The child to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple items at once.
            NOTE: This method should be used when possible, because it might have a great performance instance
                  on some occasions!
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified <paramref name="item"/> to the specified <paramref name="index"/>
            </summary>
            <param name="item">The item to insert</param>
            <param name="index">The index we want the item to get inserted</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.Remove(`0)">
            <summary>
            Removes the item from the items control
            </summary>
            <param name="item">The item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified <paramref name="index"/>
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at a specified index in a new location at the items source
            </summary>
            <param name="oldIndex">The current index of the item</param>
            <param name="newIndex">The new index of the item</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.Replace(`0,`0)">
            <summary>
            Replaces the <paramref name="oldItem"/> with the <paramref name="newItem"/>
            </summary>
            <param name="newItem">The new item</param>
            <param name="oldItem">The item that gets replaced</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.Clear">
            <summary>
            Clears all the items from the items control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.OptionsCount">
            <summary>
            Gets the number of the options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseItemsControlPage`1.Options">
            <summary>
            The registered options
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.AddOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Adds an option button
            </summary>
            <param name="id">The identifier of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.GetOption(System.String)">
            <summary>
            Gets the option button related to the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The identifier of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.DisableOption(System.String)">
            <summary>
            Disables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.EnableOption(System.String)">
            <summary>
            Enables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.RemoveOption(System.String)">
            <summary>
            Removes the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.CreateItemsControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.DataPresenter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.OnScrollChanged(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the change of the scroll of the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.ContainerScrollViewer"/>
            </summary>
            <param name="sender">The scroll viewer</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.OnAllowVerticalScrollChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScroll"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.OnOptionsContainerPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainerPlacement"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.OnAllowVerticalScrollChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.AllowVerticalScroll"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.OnOptionsContainerPlacementChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainerPlacement"/> property internally
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseItemsControlPage`1.OnInitializedInternalAsync(System.Boolean,System.Func{System.Threading.Tasks.Task{Atom.Core.IFailable{System.Collections.Generic.IEnumerable{`0}}}},System.Func{System.Collections.Generic.IEnumerable{`0},System.Threading.Tasks.Task},System.String)">
            <summary>
            Helper method that is used by the conventional item control pages
            </summary>
            <param name="shouldShowDialogs">A flag indicating whether the hint dialogs should be shown or not</param>
            <param name="getAllDataAsync">Retrieves all the data that should be presented</param>
            <param name="onAllItemsLoadedAsync">Handles the completion of the retrieval of the data</param>
            <param name="noDataWereRertrievedMessage">The message that is shown when no data were retrieved</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalBaseItemsControlPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseItemsControlPage`1"/> that loads all of its data on its initialization
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseItemsControlPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseItemsControlPage`1.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseItemsControlPage`1.OnInitializedCore(System.EventArgs)">
            <summary>
            Further handlers the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseItemsControlPage`1.OnAllItemsLoadedAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Further handles the load of the items
            </summary>
            <param name="items">The items that were loaded</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseItemsControlPage`1.GetShowDialogsOnInitialization">
            <summary>
            Gets the flag indicating whether a loading dialog and a completion hint dialog should
            be shown at the initialization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseItemsControlPage`1.GetNoDataWereRetrievedMessage">
            <summary>
            Gets the message that's displayed when no data are retrieved
            Localization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseItemsControlPage`1.GetAllDataAsync">
            <summary>
            Gets all the data that need to be presented
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StandardItemsControlPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDataPresenterPage`1"/> that has preset a <see cref="P:Atom.Windows.Controls.StandardDataPresenterPage`1.AddButton"/>
            used for adding <typeparamref name="TClass"/>s
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardItemsControlPage`1.AddButton">
            <summary>
            The add button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardItemsControlPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardItemsControlPage`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardItemsControlPage`1.CreateAddFormAsync">
            <summary>
            Creates and returns the add form
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardItemsControlPage`1.SaveModelAsync(`0)">
            <summary>
            Saves the newly created model to the data storage
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardItemsControlPage`1.GetAddDialogTitle">
            <summary>
            Returns the title of the add dialog that is presented when adding a new item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardItemsControlPage`1.GetAddDialogMessage">
            <summary>
            Returns the message of the add dialog that is presented when adding a new item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardItemsControlPage`1.GetAddDialogPathData">
            <summary>
            Gets the path data of the icon of the add dialog that is presented when adding a new item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardItemsControlPage`1.CreateModel">
            <summary>
            Creates and returns a model with the default values
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalStandardItemsControlPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDataPresenterPage`1"/> that loads all of its data on its initialization
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardItemsControlPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardItemsControlPage`1.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardItemsControlPage`1.OnInitializedCore(System.EventArgs)">
            <summary>
            Further handlers the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardItemsControlPage`1.GetNoDataWereRetrievedMessage">
            <summary>
            Gets the message that's displayed when no data are retrieved
            Localization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardItemsControlPage`1.GetShowDialogsOnInitialization">
            <summary>
            Gets the flag indicating whether a loading dialog and a completion hint dialog should
            be shown at the initialization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardItemsControlPage`1.OnAllItemsLoadedAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Further handles the load of the items
            </summary>
            <param name="items">The items that were loaded</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardItemsControlPage`1.GetAllDataAsync">
            <summary>
            Gets all the data that need to be presented
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDataPresenterContainerPage`1">
            <summary>
            A page that hosts a <see cref="T:Atom.Windows.Controls.DataPresenterContainer`1"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.ContentGrid">
            <summary>
            The grid that contains all the content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.ContainerScrollViewer">
            <summary>
            The scroll viewer that container the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.Container"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.Container">
            <summary>
            The data presenter container.
            NOTE: The container gets initializes with the <see cref="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OnInitialized(System.EventArgs)"/> method!
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OverlayContentGrid">
            <summary>
            The grid that contains all the overlay content
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainer">
            <summary>
            The options container
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainerPlacement">
            <summary>
            The title of the section
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainerPlacementProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainerPlacement"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OnOptionsContainerPlacementPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainerPlacement"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsCount">
            <summary>
            Gets the number of the options
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.Options">
            <summary>
            The registered options
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.AddOption(System.String,System.Action{Atom.Windows.Controls.IOptionButton},System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Adds an option button
            </summary>
            <param name="id">The identifier of the option</param>
            <param name="action">The action that gets executed when the button gets clicked</param>
            <param name="pathData">The path data of the icon</param>
            <param name="info">The information related with the option</param>
            <param name="color">The color of the icon</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.GetOption(System.String)">
            <summary>
            Gets the option button related to the option with the specified <paramref name="id"/>
            </summary>
            <param name="id">The identifier of the option</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.DisableOption(System.String)">
            <summary>
            Disables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.EnableOption(System.String)">
            <summary>
            Enables the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.RemoveOption(System.String)">
            <summary>
            Removes the button with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id of the option button</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.CreateDataPresenterContainerAsync">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.Container"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OnScrollChanged(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Handles the change of the scroll of the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.ContainerScrollViewer"/>
            </summary>
            <param name="sender">The scroll viewer</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OnOptionsContainerPlacementChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainerPlacement"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.UpdateOptionsContainer(Atom.Core.CornerRectanglePlacement)">
            <summary>
            Updates the <see cref="P:Atom.Windows.Controls.BaseDataPresenterContainerPage`1.OptionsContainer"/>
            </summary>
            <param name="placement">The placement of the options container</param>
        </member>
        <member name="T:Atom.Windows.Controls.StandardDataPresenterContainerPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDataPresenterContainerPage`1"/> that contains an <see cref="P:Atom.Windows.Controls.StandardDataPresenterContainerPage`1.AddButton"/>
            </summary>
            <typeparam name="TClass"></typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenterContainerPage`1.AddButton">
            <summary>
            The add button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterContainerPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterContainerPage`1.AddButton_Clicked">
            <summary>
            Handles the click of the <see cref="P:Atom.Windows.Controls.StandardDataPresenterContainerPage`1.AddButton"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterContainerPage`1.CreateGUI">
            <summary>
            Creates and adds the required GUI elements
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.BaseDataPresenterPage`1">
            <summary>
            A page that hosts a <see cref="T:Atom.Windows.Controls.BaseDataPresenter`3"/>
            </summary>
            <typeparam name="TClass">The type of the models</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseDataPresenterPage`1.DataPresenter">
            <summary>
            The data presenter
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterPage`1.CreateItemsControl">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.DataPresenter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.BaseDataPresenterPage`1.CreateDataPresenter">
            <summary>
            Creates and returns the <see cref="P:Atom.Windows.Controls.BaseItemsControlPage`1.DataPresenter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalBaseDataPresenterPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDataPresenterPage`1"/> that loads all of its data on its initialization
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseDataPresenterPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseDataPresenterPage`1.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseDataPresenterPage`1.OnInitializedCore(System.EventArgs)">
            <summary>
            Further handlers the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseDataPresenterPage`1.OnAllItemsLoadedAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Further handles the load of the items
            </summary>
            <param name="items">The items that were loaded</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseDataPresenterPage`1.GetShowDialogsOnInitialization">
            <summary>
            Gets the flag indicating whether a loading dialog and a completion hint dialog should
            be shown at the initialization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseDataPresenterPage`1.GetNoDataWereRetrievedMessage">
            <summary>
            Gets the message that's displayed when no data are retrieved
            Localization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalBaseDataPresenterPage`1.GetAllDataAsync">
            <summary>
            Gets all the data that need to be presented
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.StandardDataPresenterPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.BaseDataPresenterPage`1"/> that has preset a <see cref="P:Atom.Windows.Controls.StandardDataPresenterPage`1.AddButton"/>
            used for adding <typeparamref name="TClass"/>s
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.StandardDataPresenterPage`1.AddButton">
            <summary>
            The add button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPage`1.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPage`1.CreateAddFormAsync">
            <summary>
            Creates and returns the add form
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPage`1.SaveModelAsync(`0)">
            <summary>
            Saves the newly created model to the data storage
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPage`1.GetAddDialogTitle">
            <summary>
            Returns the title of the add dialog that is presented when adding a new item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPage`1.GetAddDialogMessage">
            <summary>
            Returns the message of the add dialog that is presented when adding a new item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPage`1.GetAddDialogPathData">
            <summary>
            Gets the path data of the icon of the add dialog that is presented when adding a new item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.StandardDataPresenterPage`1.CreateModel">
            <summary>
            Creates and returns a model with the default values
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ConventionalStandardDataPresenterPage`1">
            <summary>
            A <see cref="T:Atom.Windows.Controls.StandardDataPresenterPage`1"/> that loads all of its data on its initialization
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardDataPresenterPage`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardDataPresenterPage`1.OnInitialized(System.EventArgs)">
            <summary>
            Handles the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardDataPresenterPage`1.OnInitializedCore(System.EventArgs)">
            <summary>
            Further handlers the initialization of the control
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardDataPresenterPage`1.GetShowDialogsOnInitialization">
            <summary>
            Gets the flag indicating whether a loading dialog and a completion hint dialog should
            be shown at the initialization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardDataPresenterPage`1.GetNoDataWereRetrievedMessage">
            <summary>
            Gets the message that's displayed when no data are retrieved
            Localization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardDataPresenterPage`1.GetAllDataAsync">
            <summary>
            Gets all the data that need to be presented
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ConventionalStandardDataPresenterPage`1.OnAllItemsLoadedAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Further handles the load of the items
            </summary>
            <param name="items">The items that were loaded</param>
        </member>
        <member name="T:Atom.Windows.Controls.VerticalMenuPage">
            <summary>
            A page that contains a <see cref="P:Atom.Windows.Controls.VerticalMenuPage.VerticalMenu"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.VerticalMenuPage.VerticalMenu">
            <summary>
            The vertical menu
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenuPage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenuPage.CreateBaseGUIElement">
            <summary>
            Creates and returns the GUI in a form of a <see cref="T:System.Windows.FrameworkElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenuPage.Add(System.String,System.Func{Atom.Windows.Controls.VerticalMenu,Atom.Windows.Controls.VerticalMenuButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.String,System.Boolean)">
            <summary>
            Adds and returns a <see cref="T:Atom.Windows.Controls.VerticalMenuButton"/> with the specified <paramref name="text"/> that presents 
            the specified element provided by the <paramref name="elementImplementationFactory"/> when clicked
            </summary>
            <param name="text">The text of the button</param>
            <param name="elementImplementationFactory">The element implementation factory</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenuPage.Add(System.String,System.String,System.Func{Atom.Windows.Controls.VerticalMenu,Atom.Windows.Controls.VerticalMenuButton,System.Threading.Tasks.Task{System.Windows.FrameworkElement}},System.String,System.Boolean)">
            <summary>
            Adds and returns a <see cref="T:Atom.Windows.Controls.VerticalMenuButton"/> with the specified <paramref name="text"/> and the specified <paramref name="pathData"/>
            that presents the specified element provided by the <paramref name="elementImplementationFactory"/> when clicked
            </summary>
            <param name="text">The text of the button</param>
            <param name="pathData">The path data of the icon</param>
            <param name="elementImplementationFactory">The element implementation factory</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.VerticalMenuPage.Add(Atom.Windows.Controls.VerticalMenuButton,System.String,System.Boolean)">
            <summary>
            Adds the specified <paramref name="button"/> that presents the specified element provided by the implementation factory of the specified <paramref name="button"/> when clicked
            </summary>
            <param name="button">The menu button</param>
            <param name="category">The name of the category</param>
            <param name="lazyLoad">
            A flag indicating whether the element related to the button should get created at the first selection of the button or
            at the addition of the button
            </param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseStateControl`1">
            <summary>
            The base for every state control
            </summary>
            <typeparam name="TSecondContent">The type of the second content element</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.BaseStateControl`1.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.BaseStateControl`1.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseStateControl`1.Value">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseStateControl`1.ValueProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.BaseStateControl`1.Value"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseStateControl`1.OnVersionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires when the <see cref="P:Atom.Windows.Controls.BaseStateControl`1.Value"/> property changes
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseStateControl`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseStateControl`1.OnBackColorChangedCore">
            <summary>
            Used by the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnBackColorChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> and the <see cref="M:Atom.Windows.Controls.BackgroundControl.OnAutoSetStateBackColorsChanged(System.Windows.DependencyPropertyChangedEventArgs)"/> methods 
            to set the state colors based on the <see cref="P:Atom.Windows.Controls.BackgroundControl.BackColor"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseStateControl`1.OnClicked(System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click on this element
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseStateControl`1.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseStateControl`1.Value"/> property
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Atom.Windows.Controls.BaseStateControl`1.OnValueChangedCore(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the change of the <see cref="P:Atom.Windows.Controls.BaseStateControl`1.Value"/> property internally
            </summary>
            <param name="e">The new value</param>
        </member>
        <member name="E:Atom.Windows.Controls.BaseStateControl`1.ValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.StandardStateControl">
            <summary>
            A state control that uses a <see cref="T:System.Windows.Controls.TextBlock"/> for the text presentation
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.StandardStateControl.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBox`1">
            <summary>
            A checkbox control
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckIndicator">
            <summary>
            The check indicator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorder">
            <summary>
            The checkbox box border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackgroundPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackgroundProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackground">
            <summary>
            The background of the checkbox box
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackColor">
            <summary>
            The back color of the checkbox box when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.OnCheckBoxBackColorPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxDisabledBackColor">
            <summary>
            The back color of the checkbox box when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxDisabledBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxDisabledBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxSelectedBackColor">
            <summary>
            The back color of the checkbox box when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxSelectedBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxSelectedBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseOverBackColor">
            <summary>
            The back color of the checkbox box when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseOverBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseOverBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseDownBackColor">
            <summary>
            The back color of the checkbox box when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseDownBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseDownBackColor"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderBrushPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderBrushProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderBrush">
            <summary>
            The border of the checkbox box
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderColor">
            <summary>
            The border color of the checkbox box when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.OnCheckBoxBoxBorderColorPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxDisabledBorderColor">
            <summary>
            The border color of the checkbox box when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxDisabledBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxDisabledBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxSelectedBorderColor">
            <summary>
            The border color of the checkbox box when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxSelectedBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxSelectedBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseOverBorderColor">
            <summary>
            The border color of the checkbox box when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseOverBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseOverBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseDownBorderColor">
            <summary>
            The border color of the checkbox box when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseDownBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxMouseDownBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderThickness">
            <summary>
            The thickness of the checkbox box border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxCornerRadius">
            <summary>
            The corner radius of the checkbox box border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxCornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxCornerRadius"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CheckBox`1.CheckIndicatorBrush">
            <summary>
            The color of the check indicator
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.CheckBox`1.CheckIndicatorBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckIndicatorBrush"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.CreateFirstContentElement">
            <summary>
            Creates and returns the first content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Shows the check indicator when the value is true and hides it when the value is false
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.OnCheckBoxBoxBackColorChange(System.Windows.Media.Color)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBackColor"/> property change
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.OnCheckBoxBoxBorderColorChange(System.Windows.Media.Color)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.CheckBox`1.CheckBoxBoxBorderColor"/> property change
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.SelectCheckBoxBoxBackColor">
            <summary>
            Selects the appropriate checkbox box back color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox`1.SelectCheckBoxBoxBorderColor">
            <summary>
            Selects the appropriate checkbox box border color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.CheckBox">
            <summary>
            A checkbox control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CheckBox.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.TextBoxCheckBox">
            <summary>
            Check box that uses a <see cref="T:Atom.Windows.Controls.TextInput"/> to adjust its name
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.TextBoxCheckBox.CreateSecondContentElement">
            <summary>
            Creates and returns the second content element
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.Switch">
            <summary>
            A switch control
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.mSliderBodyBorder">
            <summary>
            The slider body border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.mSliderBorder">
            <summary>
            The slider border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyBackgroundPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.Switch.SwitchBodyBackgroundProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBackground"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyBackground">
            <summary>
            The background of the switch body
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyBackColor">
            <summary>
            The back color of the switch body when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBackColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.OnCheckBoxBackColorPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBackColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyDisabledBackColor">
            <summary>
            The back color of the switch body when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyDisabledBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyDisabledBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodySelectedBackColor">
            <summary>
            The back color of the switch body when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodySelectedBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodySelectedBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyMouseOverBackColor">
            <summary>
            The back color of the switch body when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyMouseOverBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyMouseOverBackColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyMouseDownBackColor">
            <summary>
            The back color of the switch body when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyMouseDownBackColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyMouseDownBackColor"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyBorderBrushPropertyKey">
            <summary>
            The property key for giving limited access on reading and writing to the <see cref="F:Atom.Windows.Controls.Switch.SwitchBodyBorderBrushProperty"/> dependency property
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyBorderBrushProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBorderBrush"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyBorderBrush">
            <summary>
            The border of the switch body
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyBorderColor">
            <summary>
            The border color of the switch body when in normal state
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBorderColor"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.OnSwitchBodyBorderColorPropertyChange(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Fires every time the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBorderColor"/> property changes
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyDisabledBorderColor">
            <summary>
            The border color of the switch body when is disabled
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyDisabledBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyDisabledBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodySelectedBorderColor">
            <summary>
            The border color of the switch body when is selected
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodySelectedBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodySelectedBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyMouseOverBorderColor">
            <summary>
            The border color of the switch body when the cursor hovers above it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyMouseOverBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyMouseOverBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyMouseDownBorderColor">
            <summary>
            The border color of the switch body when the cursor is presses on it
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyMouseDownBorderColorProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyMouseDownBorderColor"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyBorderThickness">
            <summary>
            The thickness of the switch body border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyBorderThicknessProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBorderThickness"/> dependency property
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Switch.SwitchBodyCornerRadius">
            <summary>
            The corner radius of the switch body border
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.Switch.SwitchBodyCornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyCornerRadius"/> dependency property
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.CreateFirstContentElement">
            <summary>
            Creates and returns the first content element
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Slides sets the location of the slider depending on its state
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.OnSwitchBodyBackColorChange(System.Windows.Media.Color)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBackColor"/> property change
            </summary>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.OnSwitchBodyBorderColorChange(System.Windows.Media.Color)">
            <summary>
            Handles the <see cref="P:Atom.Windows.Controls.Switch.SwitchBodyBorderColor"/> change
            </summary>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.StateChanged">
            <summary>
            Handles the change of the state of the control
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.SelectSwitchBodyBackColor">
            <summary>
            Selects the appropriate checkbox box back color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.Switch.SelectSwitchBodyBorderColor">
            <summary>
            Selects the appropriate checkbox box border color for the control based on its state
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.DependencyPropertyHelpers">
            <summary>
            Helper methods for dependency properties
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.DataContextManager">
            <summary>
            The manager responsible for all the calls of the view's data context 
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DataContextManager.SetDataContext(System.Object,System.Object)">
            <summary>
            Sets the specified data context to the specified view
            </summary>
            <param name="view">Theview</param>
            <param name="dataContext">The data context we want to add to it</param>
        </member>
        <member name="T:Atom.Windows.Controls.IWindowsDialogManager">
            <summary>
            Provides abstractions for showing dialogs to the user
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.OpenAsync(System.Windows.UIElement,System.String,System.String,System.Func{System.Windows.UIElement},System.Object,System.Boolean)">
            <summary>
            Opens the element provided by the <paramref name="implementationFactory"/> to a new dialog and registers it using the <paramref name="key"/>
            </summary>
            <param name="element">The element used for finding the parent that the element provided by the <paramref name="implementationFactory"/> will be placed into</param>
            <param name="text">The text of the dialog</param>
            <param name="pathData">The path data of the icon of the dialog</param>
            <param name="implementationFactory">The implementation factory that provides the element</param>
            <param name="key">The key that will be used for registering the element</param>
            <param name="closable">A flag indicating whether this tab can be closed or not</param>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.OpenAsync(System.String,System.String,System.Func{System.Windows.UIElement},System.Object,System.Boolean)">
            <summary>
            Opens the element provided by the <paramref name="implementationFactory"/> to a new dialog and registers it using the <paramref name="key"/>.
            NOTE: This method should only be used when unable to find a <see cref="T:System.Windows.UIElement"/> to determine the parent of the element!
                  Otherwise, the <see cref="M:Atom.Windows.Controls.IWindowsDialogManager.OpenAsync(System.Windows.UIElement,System.String,System.String,System.Func{System.Windows.UIElement},System.Object,System.Boolean)"/> should be used!
            </summary>
            <param name="text">The text of the dialog</param>
            <param name="pathData">The path data of the icon of the dialog</param>
            <param name="implementationFactory">The implementation factory that provides the element</param>
            <param name="key">The key that will be used for registering the element</param>
            <param name="closable">A flag indicating whether this tab can be closed or not</param>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.IsRegistered(System.Object)">
            <summary>
            Checks if there is an element registered with the specified <paramref name="key"/>
            </summary>
            <param name="key">The key of the element to check if is registered</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.IsRegistered(System.Windows.UIElement)">
            <summary>
            Checks if the specified <paramref name="element"/> is registered
            </summary>
            <param name="element">The element to check if is registered</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.Focus(System.Object)">
            <summary>
            Focuses the dialog that contains the element with the specified <paramref name="key"/>
            </summary>
            <param name="key">The key of the tracked element</param>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.ShowDialogAsync``2(``0)">
            <summary>
            Shows a dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input and uses a <typeparamref name="TDialogOverlay"/> as the overlay
            </summary>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <typeparam name="TDialogOverlay">The type of the dialog overlay</typeparam>
            <param name="dialogOverlay">The overlay that contains the dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.ShowDialogAsync``2(System.Windows.UIElement,``0)">
            <summary>
            Shows a dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input and uses a <typeparamref name="TDialogOverlay"/> as the overlay
            </summary>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <typeparam name="TDialogOverlay">The type of the dialog overlay</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="dialogOverlay">The overlay that contains the dialog</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.ShowHintDialogAsync``2(``0,System.Boolean,System.Single)">
            <summary>
            Shows a minimal dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input
            </summary>
            <typeparam name="THintDialogComponent">The type of the hint dialog component</typeparam>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <param name="hintDialogComponent">The hint dialog component</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.ShowHintDialogAsync``2(System.Windows.UIElement,``0,System.Boolean,System.Single)">
            <summary>
            Shows a minimal dialog that returns a <typeparamref name="TDialogResult"/> when the user gives input
            </summary>
            <typeparam name="THintDialogComponent">The type of the hint dialog component</typeparam>
            <typeparam name="TDialogResult">The type of the dialog result</typeparam>
            <param name="targetElement">The element that will be used to determine the parent of the dialog</param>
            <param name="hintDialogComponent">The hint dialog component</param>
            <param name="autoHide">A flag indicating whether the dialog component should get automatically hidden or not</param>
            <param name="seconds">The time in seconds after the dialog component should get hidden</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.SetClosable(System.Windows.UIElement,System.Boolean)">
            <summary>
            Determines whether the parent that presents the current <paramref name="element"/>
            should be <paramref name="closable"/> or not
            </summary>
            <param name="element">The element</param>
            <param name="closable">A flag indicating the closable state of the parent of the <paramref name="element"/></param>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.ShowContentAsync(System.Windows.FrameworkElement,System.Windows.UIElement,Atom.Windows.Controls.PreferredPlacement,System.Action{System.Windows.UIElement})">
            <summary>
            Shows the specified <paramref name="content"/> element relative to the specified <paramref name="relativeTo"/> element
            </summary>
            <param name="relativeTo">The element that the <paramref name="content"/> element should be shown relative to</param>
            <param name="content">The content to show</param>
            <param name="preferredPlacement">The preferred position relative to <paramref name="relativeTo"/> element</param>
            <param name="onContentHide">Action that gets executed when the <paramref name="content"/> gets hidden</param>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.HideContentAsync(System.Windows.UIElement)">
            <summary>
            Hides the specified <paramref name="content"/>
            </summary>
            <param name="content">The content that is shown and should get hidden</param>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.SwapContentAsync(System.Windows.FrameworkElement,System.Windows.UIElement,System.Windows.UIElement,Atom.Windows.Controls.PreferredPlacement,System.Action{System.Windows.UIElement})">
            <summary>
            Hides the specified <paramref name="oldContent"/> and shows the specified <paramref name="content"/> at its place 
            relative to the specified <paramref name="relativeTo"/> element
            </summary>
            <param name="relativeTo">The element that the <paramref name="content"/> element should be shown relative to</param>
            <param name="content">The content to show</param>
            <param name="oldContent">The content that is shown and should get hidden</param>
            <param name="preferredPlacement">The preferred position relative to <paramref name="relativeTo"/> element</param>
             <param name="onContentHide">Action that gets executed when the <paramref name="content"/> gets hidden</param>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.HideAllContentAsync(System.Windows.UIElement)">
            <summary>
            Hides all the contents are presented in the container that contains the <paramref name="content"/> element
            </summary>
            <param name="content">One of the elements that are contained in the container we want everything to get hidden</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.IWindowsDialogManager.IsContentBeingPresented(System.Windows.UIElement)">
            <summary>
            Checks if the specified<paramref name="content"/> is being presented
            </summary>
            <param name="content">The content to check if its being presented</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.WindowsControlsDI">
            <summary>
            The windows based services of the framework that should be available everywhere in the code
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowsControlsDI.GetWindowsDialogManager">
            <summary>
            The dialog manager responsible for displaying dialogs to the user
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowsControlsDI.GetMainWindow">
            <summary>
            Gets the main window parent
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ControlsFactory">
            <summary>
            Creates and returns standard personalized controls
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.ToCircularControl(Atom.Windows.Controls.BorderControl,System.Double,System.Boolean)">
            <summary>
            Personalizes the <paramref name="control"/> to be a circular auto adjustable control
            </summary>
            <param name="control">The control to personalize</param>
            <param name="size"> 
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <param name="showBorder">A flag indicating whether the border of the button should be shown or not</param>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.ToCircularControl(Atom.Windows.Controls.StandardControl,System.Double,System.Boolean)">
            <summary>
            Personalizes the <paramref name="control"/> to be a circular auto adjustable control
            </summary>
            <param name="control">The control to personalize</param>
            <param name="size"> 
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <param name="showBorder">A flag indicating whether the border of the button should be shown or not</param>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.SetSizeAndPaddingBinding(Atom.Windows.Controls.StandardControl)">
            <summary>
            Sets the size - padding relationship binding
            </summary>
            <param name="control">The control to set the binding to</param>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateCircularIconButton(System.String,System.Double,System.Boolean)">
            <summary>
            Creates and returns a circular and auto adjustable icon button
            </summary>
            <param name="pathData">The path data of the icon</param>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <param name="showBorder">A flag indicating whether the border of the button should be shown or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardCircularButton(System.Double)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed
            that is placed at the bottom right corner of a container.
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateAddCircularButton(System.Double)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as an add button
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardAddCircularButton(System.Double)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as an add button
            that is placed at the bottom right corner of a container.
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardAddCircularButton``2(Atom.Windows.Controls.IItemsControl{``1},System.Func{Atom.Windows.Controls.DataForm{``0}},System.Func{``0},System.String,System.String,System.Func{``0,System.Threading.Tasks.Task{Atom.Core.IFailable{``1}}},System.String,System.Double,System.Boolean)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as an add button
            that is placed at the bottom right corner of a container.
            </summary>
            <typeparam name="TRequest">The type of the request model</typeparam>
            <typeparam name="TResponse">The type of the response model</typeparam>
            <param name="dataPresenter">The data presenter</param>
            <param name="formImplementationFactory">Creates and returns the form that will be used</param>
            <param name="requestImplementationFactory">Creates and returns the request model that will be used</param>
            <param name="title">
            The title of the dialog.
            Ex. Product creation
            </param>
            <param name="message">The message</param>
            <param name="addAction">
            The add action.
            NOTE: It usually adds the model to the data storage!
            </param>
            <param name="pathData"></param>
            <param name="size"></param>
            <param name="showAddingDialog">
            A flag indicating whether a <see cref="T:Atom.Windows.Controls.LoadingHintDialogComponent"/> should be shown when the <paramref name="addAction"/>
            gets executed or not
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateDeleteCircularIconButton(System.Double)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as a delete button
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardDeleteCircularIconButton(System.Double)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as an delete button
            that is placed at the bottom right corner of a container.
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateEditCircularButton(System.Double)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as an edit button
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardEditCircularButton(System.Double)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as an edit button
            that is placed at the bottom right corner of a container.
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateSaveCircularIconButton(System.Double,System.Boolean)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as a save button
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <param name="showBorder">A flag indicating whether the border of the button should be shown or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardSaveCircularIconButton(System.Double,System.Boolean)">
            <summary>
            Creates and returns a circular and auto adjustable icon button themed as a save button
            that is placed at the bottom right corner of a container.
            </summary>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space
            </param>
            <param name="showBorder">A flag indicating whether the border of the button should be shown or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateCircularTextButton(System.String,System.Double,System.Boolean)">
            <summary>
            Creates and returns a circular and auto adjustable text button
            </summary>
            <param name="text">The text of the button</param>
            <param name="size">
            The requested size
            NOTE: If this is set to <see cref="F:System.Double.NaN"/> then the button auto adjust its self to its available space</param>
            <param name="showBorder">A flag indicating whether the border of the button should be shown or not</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateClearButton">
            <summary>
            Creates and an <see cref="T:Atom.Windows.Controls.IconButton"/> personalized to look like a clear button.
            NOTE: This is usually used by selection controls like the drop down menu and the date picker!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateHintTextBlock(System.String,System.Double)">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.TextBlock"/> personalized to look like a small hint
            </summary>
            <param name="text">The text of the text block</param>
            <param name="uniformMargin">The uniform margin of the text block</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardTextBlock(System.String,System.Double)">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.TextBlock"/> standardly personalized
            </summary>
            <param name="text">The text of the text block</param>
            <param name="uniformMargin">The uniform margin of the text block</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateTitleTextBlock(System.String,System.Double)">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.TextBlock"/> personalized to look like a title
            </summary>
            <param name="text">The text of the text block</param>
            <param name="uniformMargin">The uniform margin of the text block</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateTitleTextInput">
            <summary>
            Creates a <see cref="T:Atom.Windows.Controls.TextInput"/> for inputing titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateDescriptionTextInput">
            <summary>
            Creates a <see cref="T:Atom.Windows.Controls.TextInput"/> for inputing descriptions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateFormTitleTextBlock(System.String,System.Double)">
            <summary>
            Creates and returns a <see cref="T:System.Windows.Controls.TextBlock"/> personalized to look like a title for a <see cref="T:Atom.Windows.Controls.BaseFormInput"/>
            </summary>
            <param name="text">The text of the text block</param>
            <param name="uniformMargin">The uniform margin of the text block</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateFormDescriptionTextBlock(System.String,System.Double)">
            <summary>
            Creates and returns a <see cref="T:System.Windows.Controls.TextBlock"/> personalized to look like a description for a <see cref="T:Atom.Windows.Controls.BaseFormInput"/>
            </summary>
            <param name="text">The text of the text block</param>
            <param name="uniformMargin">The uniform margin of the text block</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreatePositiveFeedbackButton(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.TextButton"/> personalized to look like a positive feedback button
            </summary>
            <param name="text">The text of the button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateNegativeFeedbackButton(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.TextButton"/> personalized to look like a negative feedback button
            </summary>
            <param name="text">The text of the button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateLabelTag(System.String,System.String,System.Double)">
            <summary>
            Creates and returns a label tag with the specified <paramref name="text"/> and the specified <paramref name="color"/>
            </summary>
            <param name="text">The text of the label tag</param>
            <param name="color">The color of the label tag</param>
            <param name="fontSize">The font size</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.SetLabelTagColor(Atom.Windows.Controls.BorderedTextBlock,System.String)">
            <summary>
            Sets the specified <paramref name="color"/> to the specified <paramref name="labelTag"/>
            </summary>
            <param name="labelTag">The label tag</param>
            <param name="color">The color to set it</param>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.SetLabelTagColor(Atom.Windows.Controls.BorderedTextBlock,System.Windows.Media.Color)">
            <summary>
            Sets the specified <paramref name="color"/> to the specified <paramref name="labelTag"/>
            </summary>
            <param name="labelTag">The label tag</param>
            <param name="color">The color to set it</param>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateLabelTag(System.String,System.Windows.Media.Color,System.Double)">
            <summary>
            Creates and returns a label tag with the specified <paramref name="text"/> and the specified <paramref name="color"/>
            </summary>
            <param name="text">The text of the label tag</param>
            <param name="color">The color of the label tag</param>
            <param name="fontSize">The font size</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateSuccessLabelTag(System.String,System.Double)">
            <summary>
            Creates and returns a success label tag with the specified <paramref name="text"/>
            </summary>
            <param name="text">The text of the label tag</param>
            <param name="fontSize">The font size</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateErrorLabelTag(System.String,System.Double)">
            <summary>
            Creates and returns a error label tag with the specified <paramref name="text"/>
            </summary>
            <param name="text">The text of the label tag</param>
            <param name="fontSize">The font size</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateWarningLabelTag(System.String,System.Double)">
            <summary>
            Creates and returns a warning label tag with the specified <paramref name="text"/>
            </summary>
            <param name="text">The text of the label tag</param>
            <param name="fontSize">The font size</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateDisabledLabelTag(System.String,System.Double)">
            <summary>
            Creates and returns a disabled label tag with the specified <paramref name="text"/>
            </summary>
            <param name="text">The text of the label tag</param>
            <param name="fontSize">The font size</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardCircularImage">
            <summary>
            Creates and returns a standard <see cref="T:Atom.Windows.Controls.CircularImage"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateLoadingIndicator">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.PathIcon"/> themed as a loading indicator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateLabelTagDropDownMenu``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,System.String})">
            <summary>
            Creates a drop down menu themed as a label tag
            </summary>
            <typeparam name="TItem">The type of the items</typeparam>
            <param name="items">The items</param>
            <param name="textSelector">Selects the text that is presented on top of the label tag</param>
            <param name="iconPathDataSelector">Selects the icon that are presented on top of the drop down buttons</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateLabelTagDropDownMenu``1(System.Func{``0,System.String})">
            <summary>
            Creates a drop down menu themed as a label tag
            </summary>
            <typeparam name="TEnumValue">The type of the enum value</typeparam>
            <param name="enumValueNameExtractor">Extracts the text that represents the enum value and is presented on top the label tag and the drop down buttons</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.SetDropDownMenuLabelTagColor(Atom.Windows.Controls.ForegroundControl,System.Windows.Media.Color)">
            <summary>
            Sets the specified <paramref name="color"/> to the specified <paramref name="dropDownMenu"/>
            </summary>
            <param name="dropDownMenu">The drop down menu</param>
            <param name="color">The color to set it</param>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateStandardDataPresenterTextButton(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.TextButton"/> that is presented by a <see cref="T:Atom.Windows.Controls.BaseDataPresenter`3"/>
            </summary>
            <param name="text">The text of the button</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.CreateDataFormTextInput(System.String)">
            <summary>
            Creates and returns a <see cref="T:Atom.Windows.Controls.TextInput"/> personalized to fit in a data form's
            input element
            </summary>
            <param name="hint">The hint</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.WrapInScrollViewer(System.Windows.UIElement)">
            <summary>
            Wraps the specified <paramref name="element"/> in a <see cref="T:System.Windows.Controls.ScrollViewer"/>
            that has the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"/> set to
            <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible"/>
            </summary>
            <param name="element">The element to wrap</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.ControlsFactory.WrapInSection``1(``0,System.String)">
            <summary>
            Wraps the specified <paramref name="element"/> in a <see cref="T:Atom.Windows.Controls.Section`1"/>
            </summary>
            <typeparam name="TElement">The type of the element</typeparam>
            <param name="element">The element</param>
            <param name="sectionTitle">The title of the section</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.FrameworkConstructionExtensions">
            <summary>
            Extension methods related to <see cref="T:Atom.Core.FrameworkConstruction"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FrameworkConstructionExtensions.AddControlManager(Atom.Core.FrameworkConstruction)">
            <summary>
            Injects the default control manager into the framework construction.
            </summary>
            <param name="construction">The framework construction</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.IFailableExtensions">
            <summary>
            Extension methods for <see cref="T:Atom.Core.IFailable"/>
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.IFailableExtensions.ShowDialogAsync(Atom.Core.IFailable,System.Windows.UIElement)">
            <summary>
            Shows a dialog that represents the specified <paramref name="failable"/>
            </summary>
            <param name="failable">The failable</param>
            <param name="element">The element that will be used to determine the parent of the dialog</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Windows.Controls.ILayoutChanged">
            <summary>
            Provides abstractions for an element that notifies using the <see cref="E:Atom.Windows.Controls.ILayoutChanged.LayoutChanged"/> event
            about the change of its layout.
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.ILayoutChanged.LayoutChanged">
            <summary>
            Events that fires every time the layout of the element changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.IValueControl">
            <summary>
            Provides abstractions for a control that is used for inserting abstractions
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.IValueControl.SuppressValueChangedEvent">
            <summary>
            If true then the <see cref="E:Atom.Windows.Controls.IValueControl.ValueChanged"/> event is suppressed
            </summary>
        </member>
        <member name="E:Atom.Windows.Controls.IValueControl.ValueChanged">
            <summary>
            Event that fires every time the value property of the control changes
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.Personalization">
            <summary>
            Personalization constants for the windows controls
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.ColorPropertyMap">
            <summary>
            Maps a property to a <see cref="T:System.Windows.Media.Color"/>
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.ColorPropertyMap.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.ColorPropertyMap.#ctor(System.Reflection.PropertyInfo,System.Windows.Media.Color)">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="color">The color</param>
        </member>
        <member name="T:Atom.Windows.Controls.CustomFormInputPropertyMap">
            <summary>
            Maps a property to a custom <see cref="T:Atom.Windows.Controls.BaseFormInput"/> implementation factory
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CustomFormInputPropertyMap.ImplementationFactory">
            <summary>
            The implementation factory that returns a <see cref="T:Atom.Core.BasePropertyMap"/> implementation
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.CustomFormInputPropertyMap.CanHaveMultipleValues">
            <summary>
            A flag used for overriding the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> flag
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.CustomFormInputPropertyMap.#ctor(System.Reflection.PropertyInfo,System.Func{Atom.Windows.Controls.BaseFormInput},System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="implementationFactory">The implementation factory that returns a <see cref="T:Atom.Core.BasePropertyMap"/> implementation</param>
            <param name="canHaveMultipleValues">A flag used for overriding the <see cref="P:Atom.Windows.Controls.BaseFormInput.MultipleValues"/> flag</param>
        </member>
        <member name="T:Atom.Windows.Controls.FileInputConfigurationPropertyMap">
            <summary>
            Maps a <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> property to a custom open file dialog configuration
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FileInputConfigurationPropertyMap.Configure">
            <summary>
            The action that configures the open file dialog
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FileInputConfigurationPropertyMap.#ctor(System.Reflection.PropertyInfo,System.Action{Microsoft.Win32.OpenFileDialog})">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="configure">The action that configures the open file dialog</param>
        </member>
        <member name="T:Atom.Windows.Controls.FilterMap`1">
            <summary>
            Maps an id with a filter delegate
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.FilterMap`1.Filter">
            <summary>
            The filter delegate
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FilterMap`1.FilterCheckBox">
            <summary>
            The filter check box
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FilterMap`1.#ctor(System.Object,System.Func{`0,System.Boolean},Atom.Windows.Controls.CheckBox)">
            <summary>
            Default constructor
            </summary>
            <param name="id">The unique identifier of this map</param>
            <param name="filter">The filter delegate</param>
            <param name="filterCheckBox">The filter check box</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseFormInputThemePropertyMap">
            <summary>
            Maps the basic form input properties
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputThemePropertyMap.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputThemePropertyMap.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseFormInputThemePropertyMap.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseFormInputThemePropertyMap.#ctor(System.Reflection.PropertyInfo,System.String,System.String,System.Windows.Media.Color)">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="title">The title</param>
            <param name="description">The description</param>
            <param name="color">The color</param>
        </member>
        <member name="T:Atom.Windows.Controls.FormInputThemePropertyMap">
            <summary>
            Maps the standard form input properties
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FormInputThemePropertyMap.CategoryName">
            <summary>
            The name of the category the input should be placed at
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FormInputThemePropertyMap.IsRequired">
            <summary>
            A flag indicating whether this field is required or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.FormInputThemePropertyMap.IsReadOnly">
            <summary>
            A flag indicating whether the value of the input can be changed or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.FormInputThemePropertyMap.#ctor(System.Reflection.PropertyInfo,System.String,System.String,System.String,System.Boolean,System.Windows.Media.Color,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category the input should be placed at</param>
            <param name="description">The description</param>
            <param name="isRequired">A flag indicating whether this field is required or not</param>
            <param name="color">The color</param>
            <param name="isReadOnly">A flag indicating whether the value of the input can be changed or not</param>
        </member>
        <member name="T:Atom.Windows.Controls.PropertySelectionFormInputThemePropertyMap">
            <summary>
            Maps the property selection form input properties
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertySelectionFormInputThemePropertyMap.CategoryName">
            <summary>
            The name of the category
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.PropertySelectionFormInputThemePropertyMap.PreSelected">
            <summary>
            A flag indicating whether the check box is preselected or not
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.PropertySelectionFormInputThemePropertyMap.#ctor(System.Reflection.PropertyInfo,System.String,System.String,System.String,System.Boolean,System.Windows.Media.Color)">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="title">The title</param>
            <param name="categoryName">The name of the category</param>
            <param name="description">The description</param>
            <param name="preSelected">A flag indicating whether the check box is preselected or not</param>
            <param name="color">The color</param>
        </member>
        <member name="T:Atom.Windows.Controls.OptionMap`3">
            <summary>
            Contains all the information required for an option presented in a <see cref="T:Atom.Windows.Controls.BaseDataComponent`1"/>
            </summary>
            <typeparam name="TClass">The type of the model</typeparam>
            <typeparam name="TComponent">The type of the component</typeparam>
            <typeparam name="TDataPresenter">The type of the data presenter, used for chaining the configuration methods</typeparam>
        </member>
        <member name="P:Atom.Windows.Controls.OptionMap`3.Info">
            <summary>
            The information related with the option
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionMap`3.ButtonUpdater">
            <summary>
            Updates the option button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.OptionMap`3.OptionAction">
            <summary>
            The action that is related with the option
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.OptionMap`3.#ctor(System.String,System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.Action{Atom.Windows.Controls.IOptionButton,`0,`1,`2},System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="id">The id of the map</param>
            <param name="optionAction">The action that is related with the option</param>
            <param name="buttonUpdater">Updates the option button</param>
            <param name="info">The info</param>
        </member>
        <member name="T:Atom.Windows.Controls.UIElementCreationPropertyMap`3">
            <summary>
            Maps a property with a custom <see cref="T:System.Windows.UIElement"/> creator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.UIElementCreationPropertyMap`3.UIElementImplementationFactory">
            <summary>
            The custom ui element creator
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.UIElementCreationPropertyMap`3.UIElementUpdater">
            <summary>
            Action that updates the ui element that was created with the new values of the model
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.UIElementCreationPropertyMap`3.#ctor(System.Reflection.PropertyInfo,System.Func{`0,`1,`2,System.Windows.UIElement},System.Action{`0,`1,`2,System.Windows.UIElement})">
            <summary>
            Default constructor
            </summary>
            <param name="propertyInfo">The property info</param>
            <param name="uiElementImplementationFactory">The custom ui element creator</param>
            <param name="uiElementUpdater">Action that updates the ui element that was created with the new values of the model</param>
        </member>
        <member name="T:Atom.Windows.Controls.BaseWindowViewModel">
            <summary>
            View model that's the base for every window view model
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.BaseWindowViewModel.mTitleBackColor">
            <summary>
            The back color of the title
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.TitleHeight">
            <summary>
            The height of the title bar / caption of the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.Title">
            <summary>
            The title of the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.TitleBarBackColor">
            <summary>
            The back color of the title bar
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.TitleForeColor">
            <summary>
            The color of the text that's located inside the title bar
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.InactiveTitleBackColor">
            <summary>
            The back color of the title when the windows is not active
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.WindowControls">
            <summary>
            The controls responsible for controlling the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.Window">
            <summary>
            The window this view model controls
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.IsMain">
            <summary>
            A flag indicating whether this window is the main one
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.WindowMinimumWidth">
            <summary>
            The smallest width the window can go to
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.WindowMinimumHeight">
            <summary>
            The smallest height the window can go to
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.IsActive">
            <summary>
            A flag indicating whether the windows is active or not
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.WindowRadius">
            <summary>
            The radius of the edges of the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.WindowCornerRadius">
            <summary>
            The radius of the edges of the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.InnerContentPadding">
            <summary>
            The padding of the inner content of the main window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.OuterMarginSize">
            <summary>
            The margin around the window to allow for a drop shadow
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.BaseWindowViewModel.DropShadowColor">
            <summary>
            The color of the window's drop shadow
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseWindowViewModel.#ctor(System.Windows.Window)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.BaseWindowViewModel.Close">
            <summary>
            Closes the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DialogWindowViewModel.TitleHeightGridLength">
            <summary>
            The height of the title bar / caption of the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DialogWindowViewModel.Content">
            <summary>
            The content to be displayed inside the dialog
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.DialogWindowViewModel.CloseButton">
            <summary>
            The close button
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.DialogWindowViewModel.#ctor(System.Windows.Window)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Windows.Controls.WindowViewModel">
            <summary>
            The View Model for the custom flat window
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WindowViewModel.mOuterMarginSize">
            <summary>
            The margin around the window to allow for a drop shadow
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WindowViewModel.mDockPosition">
            <summary>
            The last known dock position
            </summary>
        </member>
        <member name="F:Atom.Windows.Controls.WindowViewModel.mWindowResizer">
            <summary>
            The window resizer helper that keeps the window size correct in various states
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.TitleHeightGridLength">
            <summary>
            The height of the title bar / caption of the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.TitleBarBackColor">
            <summary>
            The back color of the title bar
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.MouseOverWindowControlButtonsBackColor">
            <summary>
            The color of the window control buttons when the window is active and the cursor hovers above it
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.MouseOverInactiveWindowControlButtonsBackColor">
            <summary>
            The color of the window control buttons when the window is inactive and the cursor hovers above it
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.CloseButton">
            <summary>
            The view model for the close button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.MaximizeButton">
            <summary>
            The view model for the maximize button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.MinimizeButton">
            <summary>
            The view model for the minimize button
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.Opacity">
            <summary>
            The opacity of the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.Borderless">
            <summary>
            True if the window should be borderless because it is docked or maximized
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.ResizeBorder">
            <summary>
            The size of the resize border around the window
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.ResizeBorderThickness">
            <summary>
            The size of the resize border around the window, taking into account the outer margin
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.OuterMarginSize">
            <summary>
            The margin around the window to allow for a drop shadow
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.FlatBorderThickness">
            <summary>
            The rectangle border around the window when docked
            </summary>
        </member>
        <member name="P:Atom.Windows.Controls.WindowViewModel.BeingMoved">
            <summary>
            True if the window is currently being moved/dragged
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WindowViewModel.#ctor(System.Windows.Window)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Windows.Controls.WindowViewModel.GetMousePosition">
            <summary>
            Gets the current mouse position on the screen
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Windows.Controls.WindowViewModel.WindowResized">
            <summary>
            If the window resizes to a special position (docked or maximized)
            this will update all required property change events to set the borders and radius values
            </summary>
        </member>
    </members>
</doc>
