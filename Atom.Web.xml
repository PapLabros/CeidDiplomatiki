<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atom.Web</name>
    </assembly>
    <members>
        <member name="T:Atom.Web.APIArgs">
            <summary>
            The basic API args
            </summary>
        </member>
        <member name="P:Atom.Web.APIArgs.Page">
            <summary>
            The index of the page starting from 0.
            </summary>
        </member>
        <member name="P:Atom.Web.APIArgs.PerPage">
            <summary>
            Maximum number of items to be returned in result set.
            </summary>
        </member>
        <member name="P:Atom.Web.APIArgs.Order">
            <summary>
            Order condition.
            NOTE: The default is <see cref="F:Atom.Core.OrderCondition.Descending"/>!
            </summary>
        </member>
        <member name="P:Atom.Web.APIArgs.OrderTarget">
            <summary>
            Order by target.
            NOTE: The default is <see cref="F:Atom.Web.OrderTarget.Date"/>!
            </summary>
        </member>
        <member name="M:Atom.Web.APIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Web.DateAPIArgs">
            <summary>
            Arguments used for 
            </summary>
        </member>
        <member name="P:Atom.Web.DateAPIArgs.After">
            <summary>
            Limit response to resources published after a given ISO8601 compliant date.
            </summary>
        </member>
        <member name="P:Atom.Web.DateAPIArgs.Before">
            <summary>
            Limit response to resources published before a given ISO8601 compliant date.
            </summary>
        </member>
        <member name="M:Atom.Web.DateAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Web.StandardAPIArgs">
            <summary>
            The standard API args
            </summary>
        </member>
        <member name="P:Atom.Web.StandardAPIArgs.Search">
            <summary>
            Limit results to those matching a string.
            </summary>
        </member>
        <member name="P:Atom.Web.StandardAPIArgs.Include">
            <summary>
            Limit result set to specific ids.
            </summary>
        </member>
        <member name="P:Atom.Web.StandardAPIArgs.Exclude">
            <summary>
            Ensure result set excludes specific ids.
            </summary>
        </member>
        <member name="M:Atom.Web.StandardAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Web.ApplicationNameAttribute">
            <summary>
            Validation attribute used for ensuring that a value of a property is 
            one of the <see cref="P:Atom.Core.ApplicationConstants.Data"/>
            </summary>
        </member>
        <member name="P:Atom.Web.ApplicationNameAttribute.AllowNull">
            <summary>
            A flag indicating whether a null value is allowed or not
            </summary>
        </member>
        <member name="M:Atom.Web.ApplicationNameAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Web.ApplicationNameAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified value with respect to the current validation attribute.
            </summary>
            <param name="value">The value to validate</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Web.ColorAttribute">
            <summary>
            Validation attribute used for ensuring that a property contains a HEX color value.
            NOTE: <see cref="!:null"/> values are not validated!
            </summary>
        </member>
        <member name="M:Atom.Web.ColorAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Web.ColorAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified value with respect to the current validation attribute.
            </summary>
            <param name="value">The value to validate</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Web.RequiredOnPostAttribute">
            <summary>
            Validation attribute used for ensuring that a property is not null during POST requests
            </summary>
        </member>
        <member name="F:Atom.Web.RequiredOnPostAttribute.mFallbackValue">
            <summary>
            The value that is used when the value is <see cref="!:null"/>
            </summary>
        </member>
        <member name="M:Atom.Web.RequiredOnPostAttribute.#ctor(System.Object)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Web.RequiredOnPostAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the specified value with respect to the current validation attribute.
            </summary>
            <param name="value">The value to validate</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Web.OrderTarget">
            <summary>
            The order targets
            </summary>
        </member>
        <member name="F:Atom.Web.OrderTarget.Id">
            <summary>
            Order based on id
            </summary>
        </member>
        <member name="F:Atom.Web.OrderTarget.Title">
            <summary>
            Order based on title
            </summary>
        </member>
        <member name="F:Atom.Web.OrderTarget.Date">
            <summary>
            Order based on date
            </summary>
        </member>
        <member name="T:Atom.Web.QueryConstants">
            <summary>
            Constants related to queries
            </summary>
        </member>
        <member name="T:Atom.Web.KnownContentSerializers">
            <summary>
            Known types of content that can be serialized and sent to a receiver
            </summary>
        </member>
        <member name="F:Atom.Web.KnownContentSerializers.Json">
            <summary>
            The data should be serialized to JSON
            </summary>
        </member>
        <member name="F:Atom.Web.KnownContentSerializers.Xml">
            <summary>
            The data should be serialized to XML
            </summary>
        </member>
        <member name="T:Atom.Web.KnownContentSerializersExtensions">
            <summary>
            Extension methods for <see cref="T:Atom.Web.KnownContentSerializers"/>
            </summary>
        </member>
        <member name="M:Atom.Web.KnownContentSerializersExtensions.ToMimeString(Atom.Web.KnownContentSerializers)">
            <summary>
            Takes a known serializer type and returns the Mime type associated with it
            </summary>
            <param name="serializer">The serializer</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Web.HttpEndpointChecker">
            <summary>
            Continually hits a web HTTP/HTTPS endpoint checking for a valid response.
            Good for checking connectivity with a website constantly
            </summary>
        </member>
        <member name="F:Atom.Web.HttpEndpointChecker.mDisposing">
            <summary>
            Flag indicating if this class is disposing
            </summary>
        </member>
        <member name="F:Atom.Web.HttpEndpointChecker.mStateChangedCallback">
            <summary>
            The callback that is called when the connectivity state changes
            </summary>
        </member>
        <member name="P:Atom.Web.HttpEndpointChecker.Endpoint">
            <summary>
            The endpoint being checked
            </summary>
        </member>
        <member name="P:Atom.Web.HttpEndpointChecker.Responsive">
            <summary>
            Indicates if the endpoint is responsive (at the last interval returned a valid response)
            </summary>
        </member>
        <member name="M:Atom.Web.HttpEndpointChecker.#ctor(System.String,System.Int32,System.Action{System.Boolean},System.Func{System.Net.Http.HttpResponseMessage,System.Exception,System.Boolean},Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Default constructor
            </summary>
            <param name="endpoint">The endpoint to do a GET call on</param>
            <param name="interval">The time between periodical checks, in milliseconds</param>
            <param name="stateChangedCallback">Fired when the state changes of the endpoint</param>
            <param name="validResponseParser">If specified, handles whether the given response from the endpoint is classed as successful or not</param>
            <param name="logger">The logger to use for logging messages</param>
        </member>
        <member name="M:Atom.Web.HttpEndpointChecker.Dispose">
            <summary>
            Disposes the task that runs the periodic connectivity check
            </summary>
        </member>
        <member name="T:Atom.Web.HttpWebResponceExtensions">
            <summary>
            Extension methods for <see cref="T:System.Net.HttpWebResponse"/>
            </summary>
        </member>
        <member name="M:Atom.Web.HttpWebResponceExtensions.CreateWebRequestResultAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Returns a <see cref="T:Atom.Web.WebRequestResult"/> pre-populated with the <see cref="T:System.Net.HttpWebResponse"/> information
            </summary>
            <param name="serverResponse">The server response</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.HttpWebResponceExtensions.CreateWebRequestResultAsync``1(System.Net.Http.HttpResponseMessage,System.Func{System.String,System.String})">
            <summary>
            Returns a <see cref="T:Atom.Web.WebRequestResult`1"/> pre-populated with the <see cref="T:System.Net.HttpWebResponse"/> information
            </summary>
            <typeparam name="TResponse">The type of response to create</typeparam>
            <param name="serverResponse">The server response</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Web.WebRequestResult">
            <summary>
            A web response from a call to get generic object data from a HTTP server
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.ErrorType">
            <summary>
            The error type
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.ErrorMessage">
            <summary>
            
            If something failed, this is the error message
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.Successful">
            <summary>
            If the call was successful
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.StatusCode">
            <summary>
            The status code
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.StatusDescription">
            <summary>
            The status description
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.ContentType">
            <summary>
            The type of content returned by the server
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.Headers">
            <summary>
            All the response headers
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.RawServerResponse">
            <summary>
            The raw server response body
            </summary>
        </member>
        <member name="P:Atom.Web.WebRequestResult.Result">
            <summary>
            The actual server response as an object
            </summary>
        </member>
        <member name="T:Atom.Web.WebRequestResult`1">
            <summary>
            A web response from a call to get specific data from a HTTP server
            </summary>
            <typeparam name="T">The type of data to deserialize the raw body into</typeparam>
        </member>
        <member name="P:Atom.Web.WebRequestResult`1.Result">
            <summary>
            Casts the underlying object to the specified type
            </summary>
        </member>
        <member name="T:Atom.Web.WebRequests">
            <summary>
            Provides HTTP calls for sending and receiving information from a HTTP server
            </summary>
        </member>
        <member name="F:Atom.Web.WebRequests.MediaTypeJson">
            <summary>
            The json request and response preferred media type
            </summary>
        </member>
        <member name="F:Atom.Web.WebRequests.DeserializationErrorMessage">
            <summary>
            The standard deserialization error message
            </summary>
        </member>
        <member name="F:Atom.Web.WebRequests.ErrorParser">
            <summary>
            The error parser, that is used when the custom error parse of the methods isn't set
            </summary>
        </member>
        <member name="F:Atom.Web.WebRequests.Client">
            <summary>
            The http client that is used for sending the http requests
            NOTE: Http client is recommended to be injected as a Singleton in DI
                  https://stackoverflow.com/questions/4015324/how-to-make-http-post-web-request
            </summary>
        </member>
        <member name="M:Atom.Web.WebRequests.PostAsync(System.String,System.Object,System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            POSTs a web request to an URL that contains the specified <paramref name="content"/> and returns a <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="content">The content to post</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PostModelAndFilesAsync(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{Atom.Web.FileUploadGroupDataModel},System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            POSTs a web request to an URL that contains the specified <paramref name="content"/> and the specified <paramref name="fileGroups"/> and returns a <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="contentName">
            The name of the parameter of the Action of the ASP.NET controller that the model
            should be assigned to.
            </param>
            <param name="content">The content to post</param>
            <param name="fileGroups">Groups of files that contains all the required information to perform the binding to ASP.NET controller action</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PostFilesAsync(System.String,System.Collections.Generic.IEnumerable{Atom.Web.FileUploadGroupDataModel},System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            POSTs a web request to an URL that contains the specified <paramref name="fileGroups"/> and returns a <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="fileGroups">Groups of files that contains all the required information to perform the binding to ASP.NET controller action</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.GetAsync(System.String,System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            GETs a web request to a URL and returns a <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.GetBytesAsync(System.String,System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            GETs the bytes that are returned in the <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.DeleteAsync(System.String,System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            Sends a DELETE request and returns a <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PutAsync(System.String,System.Object,System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            PUTs the specified <paramref name="content"/> at the specified <paramref name="url"/> and returns a <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="content">The content to put</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PutAsync(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{Atom.Web.FileUploadGroupDataModel},System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            PUTs the specified <paramref name="content"/> and the specified <paramref name="fileGroups"/> at the specified <paramref name="url"/> and returns a <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="contentName">
            The name of the parameter of the Action of the ASP.NET controller that the model
            should be assigned to.
            </param>
            <param name="content">The content to put</param>
            <param name="fileGroups">Groups of files that contains all the required information to perform the binding to ASP.NET controller action</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PutAsync(System.String,System.Collections.Generic.IEnumerable{Atom.Web.FileUploadGroupDataModel},System.String,System.Action{System.Net.Http.HttpClient})">
            <summary>
            PUTs the specified <paramref name="fileGroups"/> at the specified <paramref name="url"/> and returns a <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="url">The URL</param>
            <param name="fileGroups">Groups of files that contains all the required information to perform the binding to ASP.NET controller action</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PostAsync``1(System.String,System.Object,System.String,System.Action{System.Net.Http.HttpClient},System.Func{System.String,System.String})">
            <summary>
            POSTs a web request to an URL that contains the specified <paramref name="content"/> and returns a <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
            <typeparam name="TResponse">The type of the response</typeparam>
            <param name="url">The URL</param>
            <param name="content">The content to post</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PostModelAndFilesAsync``1(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{Atom.Web.FileUploadGroupDataModel},System.String,System.Action{System.Net.Http.HttpClient},System.Func{System.String,System.String})">
            <summary>
            POSTs a web request to an URL that contains the specified <paramref name="content"/> and the specified <paramref name="fileGroups"/> and returns a <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
            <typeparam name="TResponse">The type of the response</typeparam>
            <param name="url">The URL</param>
            <param name="contentName">
            The name of the parameter of the Action of the ASP.NET controller that the model
            should be assigned to.
            </param>
            <param name="content">The content to post</param>
            <param name="fileGroups">Groups of files that contains all the required information to perform the binding to ASP.NET controller action</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PostFilesAsync``1(System.String,System.Collections.Generic.IEnumerable{Atom.Web.FileUploadGroupDataModel},System.String,System.Action{System.Net.Http.HttpClient},System.Func{System.String,System.String})">
            <summary>
            POSTs a web request to an URL that contains the specified <paramref name="fileGroups"/> and returns a <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
            <typeparam name="TResponse">The type of the response</typeparam>
            <param name="url">The URL</param>
            <param name="fileGroups">Groups of files that contains all the required information to perform the binding to ASP.NET controller action</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.GetAsync``1(System.String,System.String,System.Action{System.Net.Http.HttpClient},System.Func{System.String,System.String})">
            <summary>
            GETs a web request to a URL and returns a <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
            <param name="url">The URL</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.DeleteAsync``1(System.String,System.String,System.Action{System.Net.Http.HttpClient},System.Func{System.String,System.String})">
            <summary>
            Sends a DELETE request and returns a <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
            <remarks>IMPORTANT: Remember to close the returned <see cref="T:System.Net.HttpWebResponse"/> stream once done</remarks>
            <param name="url">The URL</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PutAsync``1(System.String,System.Object,System.String,System.Action{System.Net.Http.HttpClient},System.Func{System.String,System.String})">
            <summary>
            PUTs the specified <paramref name="content"/> at the specified <paramref name="url"/> and returns a <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
            <param name="url">The URL</param>
            <param name="content">The content to put</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PutModelAndFilesAsync``1(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{Atom.Web.FileUploadGroupDataModel},System.String,System.Action{System.Net.Http.HttpClient},System.Func{System.String,System.String})">
            <summary>
            PUTs the specified <paramref name="content"/> and the specified <paramref name="fileGroups"/> and returns a <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
            <typeparam name="TResponse">The type of the response</typeparam>
            <param name="url">The URL</param>
            <param name="contentName">
            The name of the parameter of the Action of the ASP.NET controller that the model
            should be assigned to.
            </param>
            <param name="content">The content to post</param>
            <param name="fileGroups">Groups of files that contains all the required information to perform the binding to ASP.NET controller action</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.PutFilesAsync``1(System.String,System.Collections.Generic.IEnumerable{Atom.Web.FileUploadGroupDataModel},System.String,System.Action{System.Net.Http.HttpClient},System.Func{System.String,System.String})">
            <summary>
            PUTs the specified <paramref name="fileGroups"/> and returns a <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
            <typeparam name="TResponse">The type of the response</typeparam>
            <param name="url">The URL</param>
            <param name="fileGroups">Groups of files that contains all the required information to perform the binding to ASP.NET controller action</param>
            <param name="bearerToken">If specified, provides the Authorization header with `bearer token-here` for things like JWT bearer tokens</param>
            <param name="configureClient">Allows caller to customize and configure the <see cref="F:Atom.Web.WebRequests.Client"/> prior to the request being sent</param>
            <param name="errorParser">The custom error parser</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Web.WebRequests.ParseErrorMessage(System.String,System.Func{System.String,System.String})">
            <summary>
            Attempts to parse the error message contained in the <paramref name="rawServerResponse"/> using the
            <paramref name="errorParser"/> and the <see cref="F:Atom.Web.WebRequests.ErrorParser"/>
            </summary>
            <param name="rawServerResponse">The server response</param>
            <param name="errorParser">The error parser</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Web.FileUploadGroupDataModel">
            <summary>
            Represents a group of files that are sent to the ASP.NET API
            </summary>
        </member>
        <member name="P:Atom.Web.FileUploadGroupDataModel.Name">
            <summary>
            The name of the parameter of the Action of the ASP.NET controller that the file/s
            should be assigned to.
            </summary>
        </member>
        <member name="P:Atom.Web.FileUploadGroupDataModel.Files">
            <summary>
            The files
            </summary>
        </member>
        <member name="M:Atom.Web.FileUploadGroupDataModel.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Default constructor
            </summary>
            <param name="name">
            The name of the parameter of the Action of the ASP.NET controller that the file/s
            should be assigned to.
            </param>
            <param name="files">The files</param>
        </member>
        <member name="M:Atom.Web.FileUploadGroupDataModel.#ctor(System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Single file constructor
            </summary>
            <param name="name">
            The name of the parameter of the Action of the ASP.NET controller that the file/s
            should be assigned to.
            </param>
            <param name="file">The file</param>
        </member>
        <member name="T:Atom.Web.RouteConstants">
            <summary>
            Constants related to routes
            </summary>
        </member>
        <member name="F:Atom.Web.RouteConstants.CountRouteSuffix">
            <summary>
            The suffix placed at the end of count related Api routes
            </summary>
        </member>
        <member name="T:Atom.Web.RouteHelpers">
            <summary>
            Helper methods related to web routes
            </summary>
        </member>
        <member name="M:Atom.Web.RouteHelpers.GetAbsoluteRoute(System.String)">
            <summary>
            Converts a relative URL into an absolute URL
            </summary>
            <param name="relativeUrl">The relative URL</param>
            <returns>Returns the absolute URL including the Host URL</returns>
        </member>
        <member name="M:Atom.Web.RouteHelpers.AttachParameters(System.String,System.Object)">
            <summary>
            Attaches the parameters that are specified as properties in the <paramref name="args"/>
            to the specified <paramref name="url"/>.
            NOTE: A property can be marked as ignorable using the <see cref="T:Atom.Core.IgnoreAttribute"/>!
            NOTE: A custom property name can be set using the <see cref="T:Atom.Core.NameAttribute"/>!
            </summary>
            <param name="url">The url</param>
            <param name="args">The arguments</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Web.WebConstants">
            <summary>
            Constants related to web requests
            </summary>
        </member>
        <member name="T:Atom.Web.WebRequestResultExtensions">
            <summary>
            Extension methods for <see cref="T:Atom.Web.WebRequestResult`1"/>
            </summary>
        </member>
        <member name="M:Atom.Web.WebRequestResultExtensions.HasError(Atom.Web.WebRequestResult,System.String@)">
            <summary>
            Returns a flag indicating whether the specified <paramref name="response"/> has an error or not,
            and if it does it returns the <paramref name="errorMessage"/>, otherwise the <paramref name="errorMessage"/> is set to <see cref="!:null"/>.
            NOTE: The <paramref name="response"/> can also be <see cref="!:null"/> as the server may not return a response!
            </summary>
            <param name="response">The response</param>
            <param name="errorMessage">The error massage</param>
            <returns></returns>
        </member>
    </members>
</doc>
