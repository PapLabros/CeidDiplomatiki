<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atom.Relational.Analyzers</name>
    </assembly>
    <members>
        <member name="T:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1">
            <summary>
            The base for all the database analyzers
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.mProviderDataTypes">
            <summary>
            The lazy property for <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.ProviderDataTypes"/>
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Provider">
            <summary>
            The database provider
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.ProviderDataTypes">
            <summary>
            The provider data types
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.CreateConnection(System.String)">
            <summary>
            Creates a database connection using the specified <paramref name="connectionString"/>
            </summary>
            <param name="connectionString">The connection string</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.GetMetaData">
            <summary>
            Gets the meta data collections from the server with the specified established <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.GetDataTypes">
            <summary>
            Gets the data types from the server with the specified established <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.GetRestrictions">
            <summary>
            Gets the restrictions from the server with the specified established <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.GetDatabases">
            <summary>
            Gets the databases from the server with the specified established <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.GetTables(System.String)">
            <summary>
            Gets the tables from the server with the specified established <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection"/>
            and the database with the specified <paramref name="databaseName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.GetColumns(System.String,System.String)">
            <summary>
            Gets the columns from the server with the specified established <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection"/>,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.GetIndexColumns(System.String,System.String)">
            <summary>
            Gets the index columns from the server with the specified established <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection"/>,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.GetForeignKeyColumns(System.String,System.String)">
            <summary>
            Gets the foreign key columns from the server with the specified established <see cref="P:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1.Connection"/>,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table that contains the foreign key</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.IDatabaseAnalyzer">
            <summary>
            Exposes the required methods and properties for a database analyzer
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDatabaseAnalyzer.Provider">
            <summary>
            The database provider
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.IDatabaseAnalyzer.GetMetaData">
            <summary>
            Gets the meta data collections from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.IDatabaseAnalyzer.GetDataTypes">
            <summary>
            Gets the data types from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.IDatabaseAnalyzer.GetRestrictions">
            <summary>
            Gets the restrictions from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.IDatabaseAnalyzer.GetDatabases">
            <summary>
            Gets the databases from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.IDatabaseAnalyzer.GetTables(System.String)">
            <summary>
            Gets the tables from the server with the specified established connection
            and the database with the specified <paramref name="databaseName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.IDatabaseAnalyzer.GetColumns(System.String,System.String)">
            <summary>
            Gets the columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.IDatabaseAnalyzer.GetIndexColumns(System.String,System.String)">
            <summary>
            Gets the index columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.IDatabaseAnalyzer.GetForeignKeyColumns(System.String,System.String)">
            <summary>
            Gets the foreign key columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table that contains the foreign key</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer">
            <summary>
            The MySQL implementation of the <see cref="T:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1"/>
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.Provider">
            <summary>
            The database provider
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.CreateConnection(System.String)">
            <summary>
            Creates a database connection using the specified <paramref name="connectionString"/>
            </summary>
            <param name="connectionString">The connection string</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetDatabases">
            <summary>
            Gets the databases from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetTables(System.String)">
            <summary>
            Gets the tables from the server with the specified established connection
            and the database with the specified <paramref name="databaseName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetColumns(System.String,System.String)">
            <summary>
            Gets the columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetIndexColumns(System.String,System.String)">
            <summary>
            Gets the index columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetForeignKeyColumns(System.String,System.String)">
            <summary>
            Gets the foreign key columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table that contains the foreign key</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetForeignKeys">
            <summary>
            Gets the foreign keys from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetIndexes">
            <summary>
            Gets the indexes from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetViews">
            <summary>
            Gets the views from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetViewColumns">
            <summary>
            Gets the view columns from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetColumnDbProviderDataType(System.String,System.String)">
            <summary>
            Gets the database provider data type for the column <paramref name="columnName"/> in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySqlDatabaseAnalyzer.GetNextAutoIncrementValue(System.String)">
            <summary>
            Gets the next auto increment value for the primary key in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer">
            <summary>
            The PostgreSQL implementation of the <see cref="T:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1"/>
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.Provider">
            <summary>
            The database provider
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.CreateConnection(System.String)">
            <summary>
            Creates a database connection using the specified connection
            </summary>
            <param name="connectionString">The connection string</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetColumns(System.String,System.String)">
            <summary>
            Gets the columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetDatabases">
            <summary>
            Gets the databases from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetForeignKeyColumns(System.String,System.String)">
            <summary>
            Gets the foreign key columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table that contains the foreign key</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetIndexColumns(System.String,System.String)">
            <summary>
            Gets the index columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetTables(System.String)">
            <summary>
            Gets the tables from the server with the specified established connection
            and the database with the specified <paramref name="databaseName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetViews">
            <summary>
            Gets the views from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetUsers">
            <summary>
            Gets the users from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetIndexes">
            <summary>
            Gets the indexes from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetSchemata">
            <summary>
            Gets the schemata from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetDataTypes">
            <summary>
            Gets the data types from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.IsAutoIncrementColumn(System.String,System.String)">
            <summary>
            Check if the column is auto incremented
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.IsPrimaryKeyColumn(System.String,System.String)">
            <summary>
            Check if the column is primary key
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.IsUniqueKeyColumn(System.String,System.String)">
            <summary>
            Check if the column is unique
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.IsNullableColumn(System.String,System.String)">
            <summary>
            Check if the column is nullable
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetColumnDbProviderDataType(System.String,System.String)">
            <summary>
            Gets the database provider data type for the column <paramref name="columnName"/> in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetReferencedKeyValues(System.String,System.String,System.String)">
            <summary>
            Gets a referenced values for the foreign key 
            </summary>
            <param name="tableName">The table name</param>
            <param name="foreignKeyName">The foreign key name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLDatabaseAnalyzer.GetNextAutoIncrementValue(System.String,System.String)">
            <summary>
            Gets the next auto increment value for the primary key in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer">
            <summary>
            The SQLite implementation of the <see cref="T:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1"/>
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.Provider">
            <summary>
            The database provider
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.CreateConnection(System.String)">
            <summary>
            Creates a database connection using the specified <paramref name="connectionString"/>
            </summary>
            <param name="connectionString">The connection string</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.GetDatabases">
            <summary>
            Gets the databases from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.GetTables(System.String)">
            <summary>
            Gets the tables from the server with the specified established connection
            and the database with the specified <paramref name="databaseName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.GetColumns(System.String,System.String)">
            <summary>
            Gets the columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.GetIndexColumns(System.String,System.String)">
            <summary>
            Gets the index columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.GetForeignKeyColumns(System.String,System.String)">
            <summary>
            Gets the foreign key columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table that contains the foreign key</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.GetRestrictions">
            <summary>
            Gets the restrictions from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.IsPrimaryKeyColumn(System.String,System.String)">
            <summary>
            Check if the column is primary key
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.GetColumnDbProviderDataType(System.String,System.String)">
            <summary>
            Gets the database provider data type for the column <paramref name="columnName"/> in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteDatabaseAnalyzer.GetNextAutoIncrementValue(System.String)">
            <summary>
            Gets the next auto increment value for the primary key in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer">
            <summary>
            The SQL Server implementation of the <see cref="T:Atom.Relational.Analyzers.BaseDatabaseAnalyzer`1"/>
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.Provider">
            <summary>
            The database provider
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="connectionString">The connection string</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.CreateConnection(System.String)">
            <summary>
            Creates a database connection using the specified <paramref name="connectionString"/>
            </summary>
            <param name="connectionString">The connection string</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetColumns(System.String,System.String)">
            <summary>
            Gets the columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetDatabases">
            <summary>
            Gets the databases from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetForeignKeyColumns(System.String,System.String)">
            <summary>
            Gets the foreign key columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table that contains the foreign key</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetIndexColumns(System.String,System.String)">
            <summary>
            Gets the index columns from the server with the specified established connection,
            the database with the specified <paramref name="databaseName"/> and the table with the specified <paramref name="tableName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <param name="tableName">The name of the table</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetTables(System.String)">
            <summary>
            Gets the tables from the server with the specified established connection
            and the database with the specified <paramref name="databaseName"/>.
            </summary>
            <param name="databaseName">The name of the database</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetDataTypes">
            <summary>
            Gets the data types from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetReservedWords">
            <summary>
            Gets the reserved words from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetUserDefinedTypes">
            <summary>
            Gets the user defined types from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetViewColumns">
            <summary>
            Gets the view columns from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetViews">
            <summary>
            Gets the views from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetUsers">
            <summary>
            Gets the users from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetProcedures">
            <summary>
            Gets the procedures from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetProcedureParameters">
            <summary>
            Gets the procedure parameters from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetIndexes">
            <summary>
            Gets the indexes from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetDataSourceInformation">
            <summary>
            Gets the data source information from the server with the specified established connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.IsAutoIncrementColumn(System.String,System.String)">
            <summary>
            Check if the column is auto incremented
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param> 
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.IsPrimaryKeyColumn(System.String,System.String)">
            <summary>
            Check if the column is primary key
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.IsUniqueKeyColumn(System.String,System.String)">
            <summary>
            Check if the column is unique
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetReferencedKeyValues(System.String,System.String,System.String@)">
            <summary>
            Gets a referenced values for the foreign key 
            </summary>
            <param name="tableName">The table name</param>
            <param name="foreignKeyName">The foreign key name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetSQLDataType(System.String,System.String)">
            <summary>
            Returns the SQL data type for the column <paramref name="columnName"/>, that is contained in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetColumnDefault(System.String,System.String)">
            <summary>
            Returns the default value for the column <paramref name="columnName"/>, that is contained in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetColumnDbProviderDataType(System.String,System.String)">
            <summary>
            Gets the database provider data type for the column <paramref name="columnName"/> in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <param name="columnName">The column name</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerDatabaseAnalyzer.GetNextAutoIncrementValue(System.String)">
            <summary>
            Gets the next auto increment value for the primary key in the table <paramref name="tableName"/>
            </summary>
            <param name="tableName">The table name</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.ReferencedKeyValues">
            <summary>
            The values for the referenced key for a specific foreign key
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.ReferencedKeyValues.ReferencedSchemaName">
            <summary>
            Schema that contains the referenced table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.ReferencedKeyValues.ReferencedTableName">
            <summary>
            The table that contains the referenced column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.ReferencedKeyValues.ReferencedColumnName">
            <summary>
            Referenced column.
            NOTE: The referenced column is usually a primary key column!
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.ReferencedKeyValues.#ctor(System.String,System.String,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Atom.Relational.Analyzers.RelationalAnalyzersHelpers">
            <summary>
            Helper methods related to relational analyzers
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.RelationalAnalyzersHelpers.DbProviderDatabaseMapper">
            <summary>
            Maps the properties of the <see cref="T:Atom.Relational.Analyzers.IDbProviderDatabase"/> to custom values
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.RelationalAnalyzersHelpers.DbProviderTableMapper">
            <summary>
            Maps the properties of the <see cref="T:Atom.Relational.Analyzers.IDbProviderTable"/> to custom values
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.RelationalAnalyzersHelpers.DbProviderColumnMapper">
            <summary>
            Maps the properties of the <see cref="T:Atom.Relational.Analyzers.IDbProviderColumn"/> to custom values
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.RelationalAnalyzersHelpers.DbProviderDataTypeMapper">
            <summary>
            Maps the properties of the <see cref="T:Atom.Relational.Analyzers.DbProviderDataType"/> to custom values
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.RelationalAnalyzersHelpers.DbProviderIndexColumnMapper">
            <summary>
            Maps the properties of the <see cref="T:Atom.Relational.Analyzers.IDbProviderIndexColumn"/> to custom values
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.RelationalAnalyzersHelpers.DbProviderForeignKeyColumnMapper">
            <summary>
            Maps the properties of the <see cref="T:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn"/> to custom values
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.RelationalAnalyzersHelpers.DbProviderMetaDataCollectionMapper">
            <summary>
            Maps the properties of the <see cref="T:Atom.Relational.Analyzers.DbProviderMetaDataCollection"/> to custom values
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.RelationalAnalyzersHelpers.DbProviderRestrictionMapper">
            <summary>
            Maps the properties of the <see cref="T:Atom.Relational.Analyzers.DbProviderRestriction"/> to custom values
            </summary>
        </member>
        <member name="T:Atom.Relational.Analyzers.DbProviderDataType">
            <summary>
            This schema collection exposes information about the data types that are supported by the database that the .NET Framework 
            managed provider is currently connected to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.TypeName">
            <summary>
            The provider-specific data type name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.ProviderDbType">
            <summary>
            The provider-specific type value that should be used when specifying a parameter's type. For example, SqlDbType.Money or OracleType.Blob.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.ColumnSize">
            <summary>
            The length of a non-numeric column or parameter refers to either the maximum or the length defined for this type by the provider.
            
            For character data, this is the maximum or defined length in units, defined by the data source. Oracle has the concept of specifying 
            a length and then specifying the actual storage size for some character data types. This defines only the length in units for Oracle.
            
            For date-time data types, this is the length of the string representation (assuming the maximum allowed precision of the fractional 
            seconds component).
            
            If the data type is numeric, this is the upper bound on the maximum precision of the data type.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.CreateFormat">
            <summary>
            Format string that represents how to add this column to a data definition statement, such as CREATE TABLE. Each element in the 
            CreateParameter array should be represented by a "parameter marker" in the format string.
            
            For example, the SQL data type DECIMAL needs a precision and a scale. In this case, the format string would be "DECIMAL({0},{1})".
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.CreateParameters">
            <summary>
            The creation parameters that must be specified when creating a column of this data type. Each creation parameter is listed in the string, 
            separated by a comma in the order they are to be supplied.
            
            For example, the SQL data type DECIMAL needs a precision and a scale. In this case, the creation parameters should contain the string "precision, scale".
            
            In a text command to create a DECIMAL column with a precision of 10 and a scale of 2, the value of the CreateFormat column might be DECIMAL({0},{1})" and 
            the complete type specification would be DECIMAL(10,2).
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.DataType">
            <summary>
            The name of the .NET Framework type of the data type.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsAutoIncrementable">
            <summary>
            true—Values of this data type may be auto-incrementing.
            
            false—Values of this data type may not be auto-incrementing.
            
            Note that this merely indicates whether a column of this data type may be auto-incrementing, not that all columns of this type are auto-incrementing.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsBestMatch">
            <summary>
            true—The data type is the best match between all data types in the data store and the .NET Framework data type indicated by the value in the DataType column.
            
            false—The data type is not the best match.
            
            For each set of rows in which the value of the DataType column is the same, the IsBestMatch column is set to true in only one row.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsCaseSensitive">
            <summary>
            true—The data type is a character type and is case-sensitive.
            
            false—The data type is not a character type or is not case-sensitive.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsFixedLength">
            <summary>
            true—Columns of this data type created by the data definition language (DDL) will be of fixed length.'
            
            false—Columns of this data type created by the DDL will be of variable length.
            
            DBNull.Value—It is not known whether the provider will map this field with a fixed-length or variable-length column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsFixedPrecisionScale">
            <summary>
            true—The data type has a fixed precision and scale.
            
            false—The data type does not have a fixed precision and scale.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsLong">
             <summary>
             true—The data type contains very long data; the definition of very long data is provider-specific.
            
             false—The data type does not contain very long data.
             </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsNullable">
             <summary>
             true—The data type is nullable.
            
             false—The data type is not nullable.
            
             DBNull.Value—It is not known whether the data type is nullable.
             </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsSearchable">
             <summary>
             true—The data type can be used in a WHERE clause with any operator except the LIKE predicate.
            
             false—The data type cannot be used in a WHERE clause with any operator except the LIKE predicate.
             </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsSearchableWithLike">
            <summary>
            true—The data type can be used with the LIKE predicate
            
            false—The data type cannot be used with the LIKE predicate.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderDataType.IsUnsigned">
            <summary>
            true—The data type is unsigned.
            
            false—The data type is signed.
            
            DBNull.Value—Not applicable to data type.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderDataType.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderDataType.#ctor">
            <summary>
            Standard constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderDataType.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderDataType.Equals(Atom.Relational.Analyzers.DbProviderDataType)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.DbProviderMetaDataCollection">
            <summary>
            This schema collection exposes information about all of the schema collections supported by the .NET Framework 
            managed provider that is currently used to connect to the database.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderMetaDataCollection.CollectionName">
            <summary>
            The name of the collection to pass to the GetSchema method to return the collection.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderMetaDataCollection.NumberOfRestrictions">
            <summary>
            The number of restrictions that may be specified for the collection.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderMetaDataCollection.NumberOfIdentifierParts">
            <summary>
            The number of parts in the composite identifier/database object name. 
            For example, in SQL Server, this would be 3 for tables and 4 for columns. In Oracle, it would be 2 for tables and 3 for columns.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderMetaDataCollection.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderMetaDataCollection.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderMetaDataCollection.Equals(Atom.Relational.Analyzers.DbProviderMetaDataCollection)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.DbProviderRestriction">
            <summary>
            This schema collection exposed information about the restrictions that are supported by the .NET Framework managed provider 
            that is currently used to connect to the database.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderRestriction.CollectionName">
            <summary>
            The name of the collection that these restrictions apply to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderRestriction.RestrictionName">
            <summary>
            The name of the restriction in the collection.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderRestriction.RestrictionDefault">
            <summary>
            Ignored.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.DbProviderRestriction.RestrictionNumber">
            <summary>
            The actual location in the collections restrictions that this particular restriction falls in.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderRestriction.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderRestriction.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.DbProviderRestriction.Equals(Atom.Relational.Analyzers.DbProviderRestriction)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.IDbProviderColumn">
            <summary>
            Exposes the required properties for a database column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.ColumnName">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.OrdinalPosition">
            <summary>
            Column identification number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.ColumnDefault">
            <summary>
            Default value of the column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.DataType">
            <summary>
            System-supplied data type.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.SQLTypeName">
            <summary>
            The SQL data name
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.DbProviderSQLType">
            <summary>
            The database provider SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.IsPrimaryKey">
            <summary>
            A flag indicating whether the column is a primary key or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.IsUnique">
            <summary>
            A flag indicating whether the column has unique values or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.IsNullable">
            <summary>
            A flag indicating whether the column can except null value. 
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.IsAutoIncrement">
            <summary>
            A flag indicating whether the value is auto increment or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderColumn.NextAutoIncrementValue">
            <summary>
            The column value that will be used when the next row is inserted if <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.IsAutoIncrement"/> is true.
            </summary>
        </member>
        <member name="T:Atom.Relational.Analyzers.IDbProviderDatabase">
            <summary>
            Exposes the required properties for a database
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderDatabase.CatalogName">
            <summary>
            Name of the catalog
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderDatabase.DatabaseName">
            <summary>
            Name of the database.
            </summary>
        </member>
        <member name="T:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn">
            <summary>
            Exposes the required properties for a database foreign key 
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.ConstraintCatalog">
            <summary>
            Catalog the constraint belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.ConstraintSchema">
            <summary>
            Schema that contains the constraint.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.ConstraintName">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.TableCatalog">
            <summary>
            Table name constraint is part of.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.TableSchema">
            <summary>
            Schema that contains the table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.TableName">
            <summary>
            The table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.ColumnName">
            <summary>
            Foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.ReferencedTableSchema">
            <summary>
            Schema that contains the referenced table.
            The referenced table usually contains the primary key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.ReferencedTableName">
            <summary>
            The table that contains the referenced column.
            Usually the table that contains the primary key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderForeignKeyColumn.ReferencedColumnName">
            <summary>
            Referenced column.
            Usually a primary key column.
            </summary>
        </member>
        <member name="T:Atom.Relational.Analyzers.IDbProviderIndexColumn">
            <summary>
            Exposes the required properties for a database index column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderIndexColumn.IndexCatalog">
            <summary>
            Catalog that index belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderIndexColumn.IndexSchema">
            <summary>
            Schema that contains the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderIndexColumn.IndexName">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderIndexColumn.TableName">
            <summary>
            Table Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderIndexColumn.ColumnName">
            <summary>
            Column name the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderIndexColumn.OrdinalPosition">
            <summary>
            Column ordinal position.
            </summary>
        </member>
        <member name="T:Atom.Relational.Analyzers.IDbProviderTable">
            <summary>
            Exposes the required properties for a database table
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderTable.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderTable.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderTable.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.IDbProviderTable.TableType">
            <summary>
            Type of table. Can be VIEW or BASE TABLE.
            </summary>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderColumn">
            <summary>
            Represents a MySQL column
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.MySQLProviderColumn.mDataType">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.MySQLProviderColumn.DataType"/> property
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.MySQLProviderColumn.mColumnDefault">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.MySQLProviderColumn.ColumnDefault"/> property
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.MySQLProviderColumn.mIsNullable">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.MySQLProviderColumn.IsNullable"/> property
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.ColumnName">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.OrdinalPosition">
            <summary>
            Column identification number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.ColumnDefault">
            <summary>
            The string representation of the column default value
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.IsNullable">
            <summary>
            A flag indicating whether the column can except null value. 
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.DataType">
            <summary>
            The string representation of the column data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.CharacterMaximumLength">
            <summary>
            Maximum length, in characters, for binary data, character data, or text and image data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.NumericPrecision">
            <summary>
            Precision of approximate numeric data, exact numeric data, integer data, or monetary data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.NumericScale">
            <summary>
            Scale of approximate numeric data, exact numeric data, integer data, or monetary data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.DateTimePrecision">
            <summary>
            Subtype code for date-time and SQL-92 interval data types. 
            For other data types, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.CharacterSetName">
            <summary>
            Returns the unique name for the character set if this column is character data or text data type. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.ColumnType">
            <summary>
            The SQL column type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.ColumnComment">
            <summary>
            The comments for the column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.GenerationExpression">
            <summary>
            The expression that generates the column values 
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#ColumnDefault">
            <summary>
            Default value of the column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#DbProviderSQLType">
            <summary>
            The database provider SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#DataType">
            <summary>
            System-supplied data type.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#SQLTypeName">
            <summary>
            The SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsPrimaryKey">
            <summary>
            A flag indicating whether the column is a primary key or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsUnique">
            <summary>
            A flag indicating whether the column has unique values or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsAutoIncrement">
            <summary>
            A flag indicating whether the value is auto increment or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#OrdinalPosition">
            <summary>
            Column identification number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#NextAutoIncrementValue">
            <summary>
            The column value that will be used when the next row is inserted if <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.IsAutoIncrement"/> is true.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderColumn.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderColumn.Equals(Atom.Relational.Analyzers.IDbProviderColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderDatabase">
            <summary>
            Represents a MySQL database
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderDatabase.CatalogName">
            <summary>
            Name of the catalog
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderDatabase.DatabaseName">
            <summary>
            Name of the database.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderDatabase.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderDatabase.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.MySQLProviderDatabase"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderDatabase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderDatabase.Equals(Atom.Relational.Analyzers.IDbProviderDatabase)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderDatabase.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderForeignKey">
            <summary>
            Represents a MySQL foreign key.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderForeignKey.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderForeignKey.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.MySQLProviderForeignKey"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn">
            <summary>
            Represents a MySQL foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.ConstraintCatalog">
            <summary>
            Catalog the constraint belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.ConstraintSchema">
            <summary>
            Schema that contains the constraint.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.ConstraintName">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.TableCatalog">
            <summary>
            Table name constraint is part of.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.TableSchema">
            <summary>
            Schema that contains the table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.TableName">
            <summary>
            The table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.ColumnName">
            <summary>
            Foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.ReferencedTableSchema">
            <summary>
            Schema that contains the referenced table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.ReferencedTableName">
            <summary>
            The table that contains the referenced column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.ReferencedColumnName">
            <summary>
            Referenced column.
            NOTE: The referenced column is usually a primary key column!
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.Equals(Atom.Relational.Analyzers.IDbProviderForeignKeyColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderForeignKeyColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderIndex">
            <summary>
            Represents a MySQL index.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderIndex.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderIndex.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.MySQLProviderIndex"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderIndexColumn">
            <summary>
            Represents a MySQL index column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderIndexColumn.IndexCatalog">
            <summary>
            Catalog that index belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderIndexColumn.IndexSchema">
            <summary>
            Schema that contains the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderIndexColumn.IndexName">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderIndexColumn.TableName">
            <summary>
            Table Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderIndexColumn.ColumnName">
            <summary>
            Column name the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderIndexColumn.OrdinalPosition">
            <summary>
            Column ordinal position.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderIndexColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderIndexColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.MySQLProviderIndexColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderIndexColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderIndexColumn.Equals(Atom.Relational.Analyzers.IDbProviderIndexColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderIndexColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderTable">
            <summary>
            Represents a MySQL table
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderTable.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderTable.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderTable.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.MySQLProviderTable.TableType">
            <summary>
            Type of table. Can be VIEW or BASE TABLE.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderTable.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderTable.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.MySQLProviderTable"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderTable.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderTable.Equals(Atom.Relational.Analyzers.IDbProviderTable)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderTable.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderView">
            <summary>
            Represents a MySQL view
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderView.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderView.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.MySQLProviderView"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.MySQLProviderViewColumn">
            <summary>
            Represents a MySQL view column
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderViewColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.MySQLProviderViewColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.MySQLProviderViewColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderColumn">
            <summary>
            Represents a PostgreSQL provider column
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.PostgreSQLProviderColumn.mDataType">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.DataType"/> property
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.PostgreSQLProviderColumn.mIsNullable">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.IsNullable"/> property
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.ColumnName">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.SQLType">
            <summary>
            The SQL column type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.IsNullable">
            <summary>
            A flag indicating whether the column can except null value. 
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.CharacterMaximumLength">
            <summary>
            If data_type identifies a character or bit string type, the declared maximum length; null for all other data types or if no maximum length was declared.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.CharacterOctetLength">
            <summary>
            If data_type identifies a character type, the maximum possible length in octets (bytes) of a datum; null for all other data types. 
            The maximum octet length depends on the declared character maximum length (see above) and the server encoding.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.NumericPrecision">
            <summary>
            If data_type identifies a numeric type, this column contains the (declared or implicit) precision of the type for this column. The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. 
            For all other data types, this column is null.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.NumericPrecisionRadix">
            <summary>
            If data_type identifies a numeric type, this column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. 
            The value is either 2 or 10. For all other data types, this column is null.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.NumericScale">
            <summary>
            If data_type identifies an exact numeric type, this column contains the (declared or implicit) scale of the type for this column. The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix. 
            For all other data types, this column is null.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.DatetimePrecision">
            <summary>
            If data_type identifies a date, time, timestamp, or interval type, this column contains the (declared or implicit) fractional seconds precision of the type for this column, that is, the number of decimal digits maintained following the decimal point in the seconds value. 
            For all other data types, this column is null.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.CollationCatalog">
            <summary>
            Name of the database containing the collation of the column (always the current database), null if default or the data type of the column is not collatable
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.OrdinalPosition">
            <summary>
            Column identification number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#ColumnDefault">
            <summary>
            Default value of the column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#DbProviderSQLType">
            <summary>
            The database provider SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#DataType">
            <summary>
            System-supplied data type.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#SQLTypeName">
            <summary>
            The SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsPrimaryKey">
            <summary>
            A flag indicating whether the column is a primary key or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsUnique">
            <summary>
            A flag indicating whether the column has unique values or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsAutoIncrement">
            <summary>
            A flag indicating whether the value is auto increment or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#NextAutoIncrementValue">
            <summary>
            The column value that will be used when the next row is inserted if <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.IsAutoIncrement"/> is true.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderColumn.Equals(Atom.Relational.Analyzers.IDbProviderColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderDatabase">
            <summary>
            Represents a PostgreSQL database
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.CatalogName">
            <summary>
            Name of the catalog
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.DatabaseName">
            <summary>
            Name of the database.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.Owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.Encoding">
            <summary>
            The encoding used in the database
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderDatabase"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.Equals(Atom.Relational.Analyzers.IDbProviderDatabase)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderDatabase.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderDataType">
            <summary>
            Represents a PostgreSQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDataType.IsConcurrencyType">
            <summary>
            true – the data type is updated by the database every time the row is changed and the value of the column is different from all previous values
            false – the data type is note updated by the database every time the row is changed
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDataType.IsLiteralSupported">
            <summary>
            true – the data type can be expressed as a literal
            false – the data type can not be expressed as a literal
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDataType.LiteralPrefix">
            <summary>
            The prefix applied to a given literal.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDataType.LiteralSuffix">
            <summary>
            The suffix applied to a given literal.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDataType.MaximumScale">
            <summary>
            If the type indicator is a numeric type, this is the maximum number of digits allowed to the right of the decimal point.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDataType.MinimumScale">
            <summary>
            If the type indicator is a numeric type, this is the minimum number of digits allowed to the right of the decimal point.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDataType.NativeDataType">
            <summary>
            The .NET data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderDataType.OID">
            <summary>
            The unique id for provider data type
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderDataType.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderDataType.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderDataType"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn">
            <summary>
            Represents a PostgreSQL foreign key column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ConstraintCatalog">
            <summary>
            Catalog the constraint belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ConstraintSchema">
            <summary>
            Schema that contains the constraint.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ConstraintName">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.TableCatalog">
            <summary>
            Table name constraint is part of.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.TableSchema">
            <summary>
            Schema that contains the table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.TableName">
            <summary>
            The table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ColumnName">
            <summary>
            Foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ReferencedTableSchema">
            <summary>
            Schema that contains the referenced table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ReferencedTableName">
            <summary>
            The table that contains the referenced column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ReferencedColumnName">
            <summary>
            Referenced column.
            NOTE: The referenced column is usually a primary key column!
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.OrdinalNumber">
            <summary>
            The column position number
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ConstraintType">
            <summary>
            The type of the constraint
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.Equals(Atom.Relational.Analyzers.IDbProviderForeignKeyColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderForeignKeyColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderIndex">
            <summary>
            Represents a PostgreSQL provider index
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndex.TableCatalog">
            <summary>
            The table catalog that contains the index
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndex.TableSchema">
            <summary>
            The table schema that contains the index
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndex.TableName">
            <summary>
            The table name that contains the index
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndex.IndexName">
            <summary>
            The index name
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderIndex.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderIndex.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderIndex"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn">
            <summary>
            Represents a PostgreSQL index column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.IndexCatalog">
            <summary>
            Catalog that index belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.IndexSchema">
            <summary>
            Schema that contains the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.IndexName">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.TableName">
            <summary>
            Table Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.ColumnName">
            <summary>
            Column name the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.OrdinalPosition">
            <summary>
            Column ordinal position.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.ConstraintCatalog">
            <summary>
            The catalog that contains the index constraint
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.ConstraintSchema">
            <summary>
            The schema that contains the index constraint
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.ConstraintName">
            <summary>
            The name of the constraint
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.Equals(Atom.Relational.Analyzers.IDbProviderIndexColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderIndexColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderSchemata">
            <summary>
            Represents PostgreSQL provider schemata
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderSchemata.CatalogName">
            <summary>
            The catalog name
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderSchemata.SchemaName">
            <summary>
            The schema name
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderSchemata.SchemaOwner">
            <summary>
            The schema owner
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderSchemata.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderSchemata.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderSchemata"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderTable">
            <summary>
            Represents a PostgreSQL table
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderTable.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderTable.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderTable.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderTable.TableType">
            <summary>
            Type of table. Can be VIEW or BASE TABLE.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderTable.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderTable.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderTable"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderTable.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderTable.Equals(Atom.Relational.Analyzers.IDbProviderTable)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderTable.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderUser">
            <summary>
            Represents a PostgreSQL provider user
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderUser.Username">
            <summary>
            The user name
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderUser.UserSystemId">
            <summary>
            The unique user system id
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderUser.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderUser.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderUser"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.PostgreSQLProviderView">
            <summary>
            Represents PostgreSQL view
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderView.TableCatalog">
            <summary>
            Catalog of the view.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderView.TableSchema">
            <summary>
            Schema that contains the view.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderView.TableName">
            <summary>
            View name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderView.CheckOption">
            <summary>
            Type of WITH CHECK OPTION.Is CASCADE if the original view was created using the WITH CHECK OPTION.Otherwise, NONE is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.PostgreSQLProviderView.IsUpdatable">
            <summary>
            Specifies whether the view is updatable.Always returns NO.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderView.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.PostgreSQLProviderView.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.PostgreSQLProviderView"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLiteProviderColumn">
            <summary>
            Represents an SQLite column
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.SQLiteProviderColumn.mDataType">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.DataType"/> property
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.SQLiteProviderColumn.mIsNullable">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.IsNullable"/> property
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.ColumnName">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.OrdinalPosition">
            <summary>
            Column identification number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.ColumnDefault">
            <summary>
            The string representation of the column default value
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.IsNullable">
            <summary>
            A flag indicating whether the column can except null value. 
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.DataType">
            <summary>
            The string representation of the column data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.ColumnGUID">
            <summary>
            The unique column id
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.ColumnHasDefault">
            <summary>
            A flag indicating whether the column has a default value. 
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.TypeGUID">
            <summary>
            The unique data type id
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.CharacterMaximumLength">
            <summary>
            Maximum length, in characters, for binary data, character data, or text and image data.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.CharacterOctetLength">
            <summary>
            Maximum length, in characters, for binary data, character data, or text and image data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.NumericPrecision">
            <summary>
            Precision of approximate numeric data, exact numeric data, integer data, or monetary data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.NumericScale">
            <summary>
            Scale of approximate numeric data, exact numeric data, integer data, or monetary data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.DateTimePrecision">
            <summary>
            Subtype code for date-time and SQL-92 interval data types. 
            For other data types, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.CharacterSetCatalog">
            <summary>
            Returns master, indicating the database in which the character set is located, if the column is character data or text data type. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.CharacterSetName">
            <summary>
            Returns the unique name for the character set if this column is character data or text data type. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.CollationCatalog">
            <summary>
            Returns master, indicating the database in which the collation is defined, if the column is character data or text data type. 
            Otherwise, this column is NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#ColumnDefault">
            <summary>
            Default value of the column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#DbProviderSQLType">
            <summary>
            The database provider SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#DataType">
            <summary>
            System-supplied data type.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#SQLTypeName">
            <summary>
            The SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsPrimaryKey">
            <summary>
            A flag indicating whether the column is a primary key or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.IsUnique">
            <summary>
            A flag indicating whether the column has unique values or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.IsAutoIncrement">
            <summary>
            A flag indicating whether the value is auto increment or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#NextAutoIncrementValue">
            <summary>
            The column value that will be used when the next row is inserted if <see cref="P:Atom.Relational.Analyzers.SQLiteProviderColumn.IsAutoIncrement"/> is true.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLiteProviderColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderColumn.Equals(Atom.Relational.Analyzers.IDbProviderColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLiteProviderDatabase">
            <summary>
            Represents a SQLite database
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderDatabase.CatalogName">
            <summary>
            Name of the catalog
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderDatabase.DatabaseName">
            <summary>
            Name of the database.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderDatabase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderDatabase.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLiteProviderDatabase"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderDatabase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderDatabase.Equals(Atom.Relational.Analyzers.IDbProviderDatabase)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderDatabase.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLiteProviderForeignKey">
            <summary>
            Represents a SQLite foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.ConstraintCatalog">
            <summary>
            Catalog the constraint belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.ConstraintSchema">
            <summary>
            Schema that contains the constraint.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.ConstraintName">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.TableCatalog">
            <summary>
            Table name constraint is part of.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.TableSchema">
            <summary>
            Schema that contains the table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.TableName">
            <summary>
            The table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.ColumnName">
            <summary>
            Foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.ReferencedTableSchema">
            <summary>
            Schema that contains the referenced table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.ReferencedTableName">
            <summary>
            The table that contains the referenced column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderForeignKey.ReferencedColumnName">
            <summary>
            Referenced column.
            NOTE: The referenced column is usually a primary key column!
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderForeignKey.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderForeignKey.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLiteProviderForeignKey"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderForeignKey.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderForeignKey.Equals(Atom.Relational.Analyzers.IDbProviderForeignKeyColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderForeignKey.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLiteProviderIndexColumn">
            <summary>
            Represents an SQLite  index column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.IndexCatalog">
            <summary>
            Catalog that index belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.IndexSchema">
            <summary>
            Schema that contains the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.IndexName">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.TableName">
            <summary>
            Table Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.ColumnName">
            <summary>
            Column name the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.OrdinalPosition">
            <summary>
            Column ordinal position.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLiteProviderIndexColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.Equals(Atom.Relational.Analyzers.IDbProviderIndexColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderIndexColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLiteProviderTable">
            <summary>
            Represents an SQLite table
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderTable.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderTable.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderTable.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLiteProviderTable.TableType">
            <summary>
            Type of table. Can be VIEW or BASE TABLE.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderTable.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderTable.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLiteProviderTable"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderTable.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderTable.Equals(Atom.Relational.Analyzers.IDbProviderTable)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLiteProviderTable.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderColumn">
            <summary>
            Represents a SQL Server column
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.SQLServerProviderColumn.mDataType">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.DataType"/> property
            </summary>
        </member>
        <member name="F:Atom.Relational.Analyzers.SQLServerProviderColumn.mIsNullable">
            <summary>
            The member of the <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.IsNullable"/> property
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.ColumnName">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.IsNullable">
            <summary>
            A flag indicating whether the column can except null value. 
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.SQLType">
            <summary>
            The SQL column type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.CharacterMaximumLength">
            <summary>
            Maximum length, in characters, for binary data, character data, or text and image data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.CharacterOctetLength">
            <summary>
            Maximum length, in characters, for binary data, character data, or text and image data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.NumericPrecision">
            <summary>
            Precision of approximate numeric data, exact numeric data, integer data, or monetary data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.NumericPrecisionRadix">
            <summary>
            Precision radix of approximate numeric data, exact numeric data, integer data, or monetary data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.NumericScale">
            <summary>
            Scale of approximate numeric data, exact numeric data, integer data, or monetary data. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.DatetimePrecision">
            <summary>
            Subtype code for date-time and SQL-92 interval data types. 
            For other data types, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.CharacterSetCatalog">
            <summary>
            Returns master, indicating the database in which the character set is located, if the column is character data or text data type. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.CharacterSetSchema">
            <summary>
            Always returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.CharacterSetName">
            <summary>
            Returns the unique name for the character set if this column is character data or text data type. 
            Otherwise, NULL is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.CollationSchema">
            <summary>
            Returns master, indicating the database in which the collation is defined, if the column is character data or text data type. 
            Otherwise, this column is NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.OrdinalPosition">
            <summary>
            Column identification number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#ColumnDefault">
            <summary>
            Default value of the column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#DbProviderSQLType">
            <summary>
            The database provider SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#DataType">
            <summary>
            System-supplied data type.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#SQLTypeName">
            <summary>
            The SQL data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsPrimaryKey">
            <summary>
            A flag indicating whether the column is a primary key or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsUnique">
            <summary>
            A flag indicating whether the column has unique values or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#IsAutoIncrement">
            <summary>
            A flag indicating whether the value is auto increment or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderColumn.Atom#Relational#Analyzers#IDbProviderColumn#NextAutoIncrementValue">
            <summary>
            The column value that will be used when the next row is inserted if <see cref="P:Atom.Relational.Analyzers.IDbProviderColumn.IsAutoIncrement"/> is true.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLiteProviderColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderColumn.Equals(Atom.Relational.Analyzers.IDbProviderColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderDatabase">
            <summary>
            This schema collection exposes information about a SQL Server database.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDatabase.CatalogName">
            <summary>
            Name of the catalog
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDatabase.DatabaseName">
            <summary>
            Name of the database.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDatabase.DatabaseId">
            <summary>
            The database Id
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDatabase.DateCreated">
            <summary>
            The date-time the database was created
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDatabase.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDatabase.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLiteProviderDatabase"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDatabase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDatabase.Equals(Atom.Relational.Analyzers.IDbProviderDatabase)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDatabase.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation">
            <summary>
            Represent a SQL Server data source information
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.CompositeIdentifierSeparatorPattern">
            <summary>
            The regular expression to match the composite separators in a composite identifier. For example, "\." (for SQL Server) or "@|\." (for Oracle).
            A composite identifier is typically what is used for a database object name, for example: pubs.dbo.authors or pubs @dbo.authors.
            For SQL Server, use the regular expression "\.". For OracleClient, use "@|\.".
            For ODBC use the Catalog_name_seperator.
            For OLE DB use DBLITERAL_CATALOG_SEPARATOR or DBLITERAL_SCHEMA_SEPARATOR.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.DataSourceProductName">
            <summary>
            The name of the product accessed by the provider, such as "Oracle" or "SQLServer".
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.DataSourceProductVersion">
            <summary>
            Indicates the version of the product accessed by the provider, in the data sources native format and not in Microsoft format.
            In some cases DataSourceProductVersion and DataSourceProductVersionNormalized will be the same value.In the case of OLE DB and ODBC, these will always be the same as they are mapped to the same function call in the underlying native API.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.DataSourceProductVersionNormalized">
            <summary>
            A normalized version for the data source, such that it can be compared with String.Compare(). The format of this is consistent for all versions of the provider to prevent version 10 from sorting between version 1 and version 2.
            For example, the Oracle provider uses a format of "nn.nn.nn.nn.nn" for its normalized version, which causes an Oracle 8i data source to return "08.01.07.04.01". SQL Server uses the typical Microsoft "nn.nn.nnnn" format.
            In some cases, DataSourceProductVersion and DataSourceProductVersionNormalized will be the same value.In the case of OLE DB and ODBC these will always be the same as they are mapped to the same function call in the underlying native API.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.GroupByBehavior">
            <summary>
            Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select list.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.IdentifierPattern">
            <summary>
            A regular expression that matches an identifier and has a match value of the identifier. For example "[A-Za-z0-9_#$]".
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.IdentifierCase">
            <summary>
            Indicates whether non-quoted identifiers are treated as case sensitive or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.OrderByColumnsInSelect">
            <summary>
            Specifies whether columns in an ORDER BY clause must be in the select list. A value of true indicates that they are required to be in the select list, a value of false indicates that they are not required to be in the select list.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.ParameterMarkerFormat">
            <summary>
            A format string that represents how to format a parameter.
            If named parameters are supported by the data source, the first placeholder in this string should be where the parameter name should be formatted.
            For example, if the data source expects parameters to be named and prefixed with an ':' this would be ":{0}". When formatting this with a parameter name of "p1" the resulting string is ":p1".
            If the data source expects parameters to be prefixed with the '@', but the names already include them, this would be '{0}', and the result of formatting a parameter named "@p1" would simply be "@p1".
            For data sources that do not expect named parameters and expect the use of the '?' character, the format string can be specified as simply '?', which would ignore the parameter name. For OLE DB we return '?'.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.ParameterMarkerPattern">
            <summary>
            A regular expression that matches a parameter marker. It will have a match value of the parameter name, if any.
            For example, if named parameters are supported with an '@' lead-in character that will be included in the parameter name, this would be: "(@[A-Za-z0-9_#]*)".   
            However, if named parameters are supported with a ':' as the lead-in character and it is not part of the parameter name, this would be: ":([A-Za-z0-9_#]*)".
            Of course, if the data source doesn't support named parameters, this would simply be "?".
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.ParameterNameMaxLength">
            <summary>
            The maximum length of a parameter name in characters. Visual Studio expects that if parameter names are supported, the minimum value for the maximum length is 30 characters.
            If the data source does not support named parameters, this property returns zero.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.ParameterNamePattern">
            <summary>
            A regular expression that matches the valid parameter names. Different data sources have different rules regarding the characters that may be used for parameter names.
            Visual Studio expects that if parameter names are supported, the characters "\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}\p{Nd}" are the minimum supported set of characters that are valid for parameter names.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.QuotedIdentifierPattern">
            <summary>
            A regular expression that matches a quoted identifier and has a match value of the identifier itself without the quotes. 
            For example, if the data source used double-quotes to identify quoted identifiers, this would be: "(([^\"]|\"\")*)".
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.QuotedIdentifierCase">
            <summary>
            Indicates whether quoted identifiers are treated as case sensitive or not.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.StatementSeparatorPattern">
            <summary>
            A regular expression that matches the statement separator.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.StringLiteralPattern">
            <summary>
            A regular expression that matches a string literal and has a match value of the literal itself. For example, if the data source used single-quotes to identify strings, this would be: "('([^']|'')*')"'
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.SupportedJoinOperators">
            <summary>
            A regular expression that matches a string literal and has a match value of the literal itself. For example, if the data source used single-quotes to identify strings, this would be: "('([^']|'')*')"'
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderDataSourceInformation"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderDataType">
            <summary>
            Represents a SQL Server data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataType.MaximumScale">
            <summary>
            If the type indicator is a numeric type, this is the maximum number of digits allowed to the right of the decimal point. 
            Otherwise, this is DBNull.Value.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataType.MinimumScale">
            <summary>
            If the type indicator is a numeric type, this is the minimum number of digits allowed to the right of the decimal point. 
            Otherwise, this is DBNull.Value.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataType.IsConcurrencyType">
            <summary>
            true – the data type is updated by the database every time the row is changed and the value of the column is different from all previous values
            false – the data type is note updated by the database every time the row is changed
            DBNull.Value – the database does not support this type of data type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataType.IsLiteralSupported">
            <summary>
            true – the data type can be expressed as a literal
            false – the data type can not be expressed as a literal
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataType.LiteralPrefix">
            <summary>
            The prefix applied to a given literal.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderDataType.LiteralSuffix">
            <summary>
            The suffix applied to a given literal.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDataType.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderDataType.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderDataType"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn">
            <summary>
            Represents a SQL Server foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ConstraintCatalog">
            <summary>
            Catalog the constraint belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ConstraintSchema">
            <summary>
            Schema that contains the constraint.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ConstraintName">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.TableCatalog">
            <summary>
            Table name constraint is part of.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.TableSchema">
            <summary>
            Schema that contains the table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.TableName">
            <summary>
            The table that contains the foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ColumnName">
            <summary>
            Foreign key column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ReferencedTableSchema">
            <summary>
            Schema that contains the referenced table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ReferencedTableName">
            <summary>
            The table that contains the referenced column.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ReferencedColumnName">
            <summary>
            Referenced column.
            NOTE: The referenced column is usually a primary key column!
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ConstraintType">
            <summary>
            Type of constraint. Only "FOREIGN KEY" is allowed.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.IsDeferrable">
            <summary>
            Specifies whether the constraint is deferrable. Returns NO.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.InitiallyDeferred">
            <summary>
            Specifies whether the constraint is initially deferrable. Returns NO.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.Equals(Atom.Relational.Analyzers.IDbProviderForeignKeyColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderForeignKeyColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderIndex">
            <summary>
            Represents a SQL Server index
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndex.ConstraintCatalog">
            <summary>
            Catalog that index belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndex.ConstraintSchema">
            <summary>
            Schema that contains the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndex.ConstraintName">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndex.TableCatalog">
            <summary>
            Table name the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndex.TableSchema">
            <summary>
            Schema that contains the table the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndex.TableName">
            <summary>
            Table Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndex.IndexName">
            <summary>
            Index Name.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderIndex.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderIndex.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderIndex"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderIndexColumn">
            <summary>
            Represents a SQL Server index column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.IndexCatalog">
            <summary>
            Catalog that index belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.IndexSchema">
            <summary>
            Schema that contains the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.IndexName">
            <summary>
            Name of the index.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.TableName">
            <summary>
            Table Name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.ColumnName">
            <summary>
            Column name the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.OrdinalPosition">
            <summary>
            Column ordinal position.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.TableCatalog">
            <summary>
            Table name the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.TableSchema">
            <summary>
            Schema that contains the table the index is associated with.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.KeyType">
            <summary>
            The type of object.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.ColumnIndexName">
            <summary>
            The index name for the column the index is associated with.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderIndexColumn"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.Equals(Atom.Relational.Analyzers.IDbProviderIndexColumn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderIndexColumn.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderProcedure">
            <summary>
            Represents a SQL Server procedure
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.SpecificCatalog">
            <summary>
            Specific name for the catalog.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.SpecificSchema">
            <summary>
            Specific name of the schema.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.SpecificName">
            <summary>
            Specific name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.RoutineCatalog">
            <summary>
            Catalog the stored procedure belongs to.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.RoutineSchema">
            <summary>
            Schema that contains the stored procedure.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.RoutineName">
            <summary>
            Name of the stored procedure.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.RoutineType">
            <summary>
            Returns PROCEDURE for stored procedures and FUNCTION for functions.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.DateCreated">
            <summary>
            Date-time the procedure was created.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedure.DateModified">
            <summary>
            The last date-time the procedure was modified.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderProcedure.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderProcedure.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderProcedure"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter">
            <summary>
            Represents a SQL Server procedure parameter
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.SpecificCatalog">
            <summary>
            Catalog name of the procedure for which this is a parameter.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.SpecificSchema">
            <summary>
            Schema that contains the procedure for which this parameter is part of.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.SpecificName">
            <summary>
            Name of the procedure for which this parameter is a part of.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.OrdinalPosition">
            <summary>
            Ordinal position of the parameter starting at 1. 
            For the return value of a procedure, this is a 0.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.ParameterMode">
            <summary>
            Returns IN if an input parameter, OUT if an output parameter, and INOUT if an input/output parameter.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.IsResult">
            <summary>
            Returns YES if indicates result of the procedure that is a function. 
            Otherwise, returns NO.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.AsLocator">
            <summary>
            Returns YES if declared as locator.
            Otherwise, returns NO.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.ParameterName">
            <summary>
            Name of the parameter. 
            NULL if this corresponds to the return value of a function.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.DataType">
            <summary>
            System-supplied data type.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.CharacterMaximumLength">
            <summary>
            Maximum length in characters for binary or character data types.
            Otherwise, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.CharacterOctetLength">
            <summary>
            Maximum length, in bytes, for binary or character data types.
            Otherwise, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.CollationCatalog">
            <summary>
            Catalog name of the collation of the parameter. 
            If not one of the character types, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.CollationSchema">
            <summary>
            Always returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.CollationName">
            <summary>
            Name of the collation of the parameter.
            If not one of the character types, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.CharacterSetCatalog">
            <summary>
            Catalog name of the character set of the parameter.
            If not one of the character types, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.CharacterSetSchema">
            <summary>
            Always returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.CharacterSetName">
            <summary>
            Name of the character set of the parameter. 
            If not one of the character types, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.NumericPrecision">
            <summary>
            Precision of approximate numeric data, exact numeric data, integer data, or monetary data.Otherwise, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.NumericPrecisionRadix">
            <summary>
            Precision radix of approximate numeric data, exact numeric data, integer data, or monetary data.Otherwise, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.NumericScale">
            <summary>
            Scale of approximate numeric data, exact numeric data, integer data, or monetary data.
            Otherwise, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.DatetimePrecision">
            <summary>
            Precision in fractional seconds if the parameter type is date-time or small date-time.
            Otherwise, returns NULL.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.IntervalType">
            <summary>
            NULL.Reserved for future use by SQL Server.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.IntervalPrecision">
            <summary>
            NULL.Reserved for future use by SQL Server.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderProcedureParameter"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderReservedWord">
            <summary>
            Represents a SQL Server reserved word
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderReservedWord.ReservedWord">
            <summary>
            Provider specific reserved word.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderReservedWord.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderReservedWord.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderReservedWord"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderTable">
            <summary>
            Represents a SQL Server table
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderTable.TableCatalog">
            <summary>
            Catalog of the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderTable.TableSchema">
            <summary>
            Schema that contains the table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderTable.TableName">
            <summary>
            Table name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderTable.TableType">
            <summary>
            Type of table. Can be VIEW or BASE TABLE.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderTable.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderTable.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLiteProviderTable"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderTable.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderTable.Equals(Atom.Relational.Analyzers.IDbProviderTable)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderTable.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderUser">
            <summary>
            Represents a SQL Server user
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUser.Id">
            <summary>
            User ID, unique in this database. 1 is the database owner.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUser.Username">
            <summary>
            User name or group name, unique in this database.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUser.DateCreated">
            <summary>
            Date the account was added.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUser.DateModified">
            <summary>
            Date the account was last changed.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderUser.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderUser.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderUser"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType">
            <summary>
            Represents a SQL Server user defined type
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.AssemblyName">
            <summary>
            The name of the file for the assembly.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.UDTName">
            <summary>
            The class name for the assembly.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.VersionMajor">
            <summary>
            Major Version Number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.VersionMinor">
            <summary>
            Minor Version Number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.VersionBuild">
            <summary>
            Build Number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.VersionRevision">
            <summary>
            Revision Number.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.CultureInfo">
            <summary>
            The culture information associated with this UDT.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.PublicKey">
            <summary>
            The public key used by this Assembly.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.IsFixedLength">
            <summary>
            Specifies whether length of type is always same as max_length.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.MaxLength">
            <summary>
            Maximum length of type in bytes.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.DateCreated">
            <summary>
            The date the assembly was created/registered.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.PermissionSetDescription">
            <summary>
            The friendly name for the permission-set/security-level for the assembly.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderUserDefinedType"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderView">
            <summary>
            Represents SQL Server view
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderView.TableCatalog">
            <summary>
            Catalog of the view.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderView.TableSchema">
            <summary>
            Schema that contains the view.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderView.TableName">
            <summary>
            View name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderView.CheckOption">
            <summary>
            Type of WITH CHECK OPTION.Is CASCADE if the original view was created using the WITH CHECK OPTION.Otherwise, NONE is returned.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderView.IsUpdatable">
            <summary>
            Specifies whether the view is updatable.Always returns NO.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderView.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderView.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderView"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atom.Relational.Analyzers.SQLServerProviderViewColumn">
            <summary>
            Represents a SQL Server view column
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderViewColumn.ViewCatalog">
            <summary>
            Catalog of the view.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderViewColumn.ViewSchema">
            <summary>
            Schema that contains the view.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderViewColumn.ViewName">
            <summary>
            View name.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderViewColumn.TableCatalog">
            <summary>
            Catalog of the table that is associated with this view.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderViewColumn.TableSchema">
            <summary>
            Schema that contains the table that is associated with this view.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderViewColumn.TableName">
            <summary>
            Name of the table that is associated with the view. Base Table.
            </summary>
        </member>
        <member name="P:Atom.Relational.Analyzers.SQLServerProviderViewColumn.ColumnName">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderViewColumn.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
            <param name="row">The data row</param>
        </member>
        <member name="M:Atom.Relational.Analyzers.SQLServerProviderViewColumn.ToString">
            <summary>
            Creates and returns a string representation of <see cref="T:Atom.Relational.Analyzers.SQLServerProviderViewColumn"/>
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
